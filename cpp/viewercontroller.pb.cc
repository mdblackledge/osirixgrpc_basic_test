// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: viewercontroller.proto

#include "viewercontroller.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_types_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DCMPix_types_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_types_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ROI_types_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_utilities_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Status_utilities_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_types_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_VRController_types_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_types_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ViewerController_types_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_viewercontroller_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ViewerControllerNewROIRequest_Buffer_viewercontroller_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_viewercontroller_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ViewerControllerNewROIRequest_Color_viewercontroller_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_viewercontroller_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ViewerControllerNewROIRequest_Point2D_viewercontroller_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_viewercontroller_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ViewerControllerNewROIRequest_Rect_viewercontroller_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_viewercontroller_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ViewerControllerROIListResponse_ROISlice_viewercontroller_2eproto;
namespace osirixgrpc {
class ViewerControllerPixListResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ViewerControllerPixListResponse> _instance;
} _ViewerControllerPixListResponse_default_instance_;
class ViewerControllerROIListResponse_ROISliceDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ViewerControllerROIListResponse_ROISlice> _instance;
} _ViewerControllerROIListResponse_ROISlice_default_instance_;
class ViewerControllerROIListResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ViewerControllerROIListResponse> _instance;
} _ViewerControllerROIListResponse_default_instance_;
class ViewerControllerNewROIResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ViewerControllerNewROIResponse> _instance;
} _ViewerControllerNewROIResponse_default_instance_;
class ViewerControllerCurDCMResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ViewerControllerCurDCMResponse> _instance;
} _ViewerControllerCurDCMResponse_default_instance_;
class ViewerControllerROIsWithNameResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ViewerControllerROIsWithNameResponse> _instance;
} _ViewerControllerROIsWithNameResponse_default_instance_;
class ViewerControllerSelectedROIsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ViewerControllerSelectedROIsResponse> _instance;
} _ViewerControllerSelectedROIsResponse_default_instance_;
class ViewerControllerIsDataVolumicResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ViewerControllerIsDataVolumicResponse> _instance;
} _ViewerControllerIsDataVolumicResponse_default_instance_;
class ViewerControllerBlendingControllerResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ViewerControllerBlendingControllerResponse> _instance;
} _ViewerControllerBlendingControllerResponse_default_instance_;
class ViewerControllerVRControllersResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ViewerControllerVRControllersResponse> _instance;
} _ViewerControllerVRControllersResponse_default_instance_;
class ViewerControllerTitleResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ViewerControllerTitleResponse> _instance;
} _ViewerControllerTitleResponse_default_instance_;
class ViewerControllerModalityResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ViewerControllerModalityResponse> _instance;
} _ViewerControllerModalityResponse_default_instance_;
class ViewerControllerMovieIdxResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ViewerControllerMovieIdxResponse> _instance;
} _ViewerControllerMovieIdxResponse_default_instance_;
class ViewerControllerMaxMovieIdxResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ViewerControllerMaxMovieIdxResponse> _instance;
} _ViewerControllerMaxMovieIdxResponse_default_instance_;
class ViewerControllerIdxResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ViewerControllerIdxResponse> _instance;
} _ViewerControllerIdxResponse_default_instance_;
class ViewerControllerWLWWResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ViewerControllerWLWWResponse> _instance;
} _ViewerControllerWLWWResponse_default_instance_;
class ViewerControllerOpenVRViewerForModeResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ViewerControllerOpenVRViewerForModeResponse> _instance;
} _ViewerControllerOpenVRViewerForModeResponse_default_instance_;
class ViewerControllerPixListRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ViewerControllerPixListRequest> _instance;
} _ViewerControllerPixListRequest_default_instance_;
class ViewerControllerROIListRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ViewerControllerROIListRequest> _instance;
} _ViewerControllerROIListRequest_default_instance_;
class ViewerControllerNewROIRequest_BufferDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ViewerControllerNewROIRequest_Buffer> _instance;
} _ViewerControllerNewROIRequest_Buffer_default_instance_;
class ViewerControllerNewROIRequest_Point2DDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ViewerControllerNewROIRequest_Point2D> _instance;
} _ViewerControllerNewROIRequest_Point2D_default_instance_;
class ViewerControllerNewROIRequest_ColorDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ViewerControllerNewROIRequest_Color> _instance;
} _ViewerControllerNewROIRequest_Color_default_instance_;
class ViewerControllerNewROIRequest_RectDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ViewerControllerNewROIRequest_Rect> _instance;
} _ViewerControllerNewROIRequest_Rect_default_instance_;
class ViewerControllerNewROIRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ViewerControllerNewROIRequest> _instance;
} _ViewerControllerNewROIRequest_default_instance_;
class ViewerControllerROIsWithNameRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ViewerControllerROIsWithNameRequest> _instance;
} _ViewerControllerROIsWithNameRequest_default_instance_;
class ViewerControllerResampleViewerControllerRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ViewerControllerResampleViewerControllerRequest> _instance;
} _ViewerControllerResampleViewerControllerRequest_default_instance_;
class ViewerControllerCopyViewerWindowRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ViewerControllerCopyViewerWindowRequest> _instance;
} _ViewerControllerCopyViewerWindowRequest_default_instance_;
class ViewerControllerSetMovieIdxRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ViewerControllerSetMovieIdxRequest> _instance;
} _ViewerControllerSetMovieIdxRequest_default_instance_;
class ViewerControllerIsDataVolumicRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ViewerControllerIsDataVolumicRequest> _instance;
} _ViewerControllerIsDataVolumicRequest_default_instance_;
class ViewerControllerSetIdxRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ViewerControllerSetIdxRequest> _instance;
} _ViewerControllerSetIdxRequest_default_instance_;
class ViewerControllerSetWLWWRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ViewerControllerSetWLWWRequest> _instance;
} _ViewerControllerSetWLWWRequest_default_instance_;
class ViewerControllerOpenVRViewerForModeRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ViewerControllerOpenVRViewerForModeRequest> _instance;
} _ViewerControllerOpenVRViewerForModeRequest_default_instance_;
}  // namespace osirixgrpc
static void InitDefaultsscc_info_ViewerControllerBlendingControllerResponse_viewercontroller_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_ViewerControllerBlendingControllerResponse_default_instance_;
    new (ptr) ::osirixgrpc::ViewerControllerBlendingControllerResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ViewerControllerBlendingControllerResponse_viewercontroller_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ViewerControllerBlendingControllerResponse_viewercontroller_2eproto}, {
      &scc_info_Status_utilities_2eproto.base,
      &scc_info_ViewerController_types_2eproto.base,}};

static void InitDefaultsscc_info_ViewerControllerCopyViewerWindowRequest_viewercontroller_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_ViewerControllerCopyViewerWindowRequest_default_instance_;
    new (ptr) ::osirixgrpc::ViewerControllerCopyViewerWindowRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ViewerControllerCopyViewerWindowRequest_viewercontroller_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ViewerControllerCopyViewerWindowRequest_viewercontroller_2eproto}, {
      &scc_info_ViewerController_types_2eproto.base,}};

static void InitDefaultsscc_info_ViewerControllerCurDCMResponse_viewercontroller_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_ViewerControllerCurDCMResponse_default_instance_;
    new (ptr) ::osirixgrpc::ViewerControllerCurDCMResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ViewerControllerCurDCMResponse_viewercontroller_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ViewerControllerCurDCMResponse_viewercontroller_2eproto}, {
      &scc_info_Status_utilities_2eproto.base,
      &scc_info_DCMPix_types_2eproto.base,}};

static void InitDefaultsscc_info_ViewerControllerIdxResponse_viewercontroller_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_ViewerControllerIdxResponse_default_instance_;
    new (ptr) ::osirixgrpc::ViewerControllerIdxResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ViewerControllerIdxResponse_viewercontroller_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ViewerControllerIdxResponse_viewercontroller_2eproto}, {
      &scc_info_Status_utilities_2eproto.base,}};

static void InitDefaultsscc_info_ViewerControllerIsDataVolumicRequest_viewercontroller_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_ViewerControllerIsDataVolumicRequest_default_instance_;
    new (ptr) ::osirixgrpc::ViewerControllerIsDataVolumicRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ViewerControllerIsDataVolumicRequest_viewercontroller_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ViewerControllerIsDataVolumicRequest_viewercontroller_2eproto}, {
      &scc_info_ViewerController_types_2eproto.base,}};

static void InitDefaultsscc_info_ViewerControllerIsDataVolumicResponse_viewercontroller_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_ViewerControllerIsDataVolumicResponse_default_instance_;
    new (ptr) ::osirixgrpc::ViewerControllerIsDataVolumicResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ViewerControllerIsDataVolumicResponse_viewercontroller_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ViewerControllerIsDataVolumicResponse_viewercontroller_2eproto}, {
      &scc_info_Status_utilities_2eproto.base,}};

static void InitDefaultsscc_info_ViewerControllerMaxMovieIdxResponse_viewercontroller_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_ViewerControllerMaxMovieIdxResponse_default_instance_;
    new (ptr) ::osirixgrpc::ViewerControllerMaxMovieIdxResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ViewerControllerMaxMovieIdxResponse_viewercontroller_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ViewerControllerMaxMovieIdxResponse_viewercontroller_2eproto}, {
      &scc_info_Status_utilities_2eproto.base,}};

static void InitDefaultsscc_info_ViewerControllerModalityResponse_viewercontroller_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_ViewerControllerModalityResponse_default_instance_;
    new (ptr) ::osirixgrpc::ViewerControllerModalityResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ViewerControllerModalityResponse_viewercontroller_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ViewerControllerModalityResponse_viewercontroller_2eproto}, {
      &scc_info_Status_utilities_2eproto.base,}};

static void InitDefaultsscc_info_ViewerControllerMovieIdxResponse_viewercontroller_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_ViewerControllerMovieIdxResponse_default_instance_;
    new (ptr) ::osirixgrpc::ViewerControllerMovieIdxResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ViewerControllerMovieIdxResponse_viewercontroller_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ViewerControllerMovieIdxResponse_viewercontroller_2eproto}, {
      &scc_info_Status_utilities_2eproto.base,}};

static void InitDefaultsscc_info_ViewerControllerNewROIRequest_viewercontroller_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_ViewerControllerNewROIRequest_default_instance_;
    new (ptr) ::osirixgrpc::ViewerControllerNewROIRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<5> scc_info_ViewerControllerNewROIRequest_viewercontroller_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 5, 0, InitDefaultsscc_info_ViewerControllerNewROIRequest_viewercontroller_2eproto}, {
      &scc_info_ViewerController_types_2eproto.base,
      &scc_info_ViewerControllerNewROIRequest_Color_viewercontroller_2eproto.base,
      &scc_info_ViewerControllerNewROIRequest_Buffer_viewercontroller_2eproto.base,
      &scc_info_ViewerControllerNewROIRequest_Point2D_viewercontroller_2eproto.base,
      &scc_info_ViewerControllerNewROIRequest_Rect_viewercontroller_2eproto.base,}};

static void InitDefaultsscc_info_ViewerControllerNewROIRequest_Buffer_viewercontroller_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_ViewerControllerNewROIRequest_Buffer_default_instance_;
    new (ptr) ::osirixgrpc::ViewerControllerNewROIRequest_Buffer();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ViewerControllerNewROIRequest_Buffer_viewercontroller_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ViewerControllerNewROIRequest_Buffer_viewercontroller_2eproto}, {}};

static void InitDefaultsscc_info_ViewerControllerNewROIRequest_Color_viewercontroller_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_ViewerControllerNewROIRequest_Color_default_instance_;
    new (ptr) ::osirixgrpc::ViewerControllerNewROIRequest_Color();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ViewerControllerNewROIRequest_Color_viewercontroller_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ViewerControllerNewROIRequest_Color_viewercontroller_2eproto}, {}};

static void InitDefaultsscc_info_ViewerControllerNewROIRequest_Point2D_viewercontroller_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_ViewerControllerNewROIRequest_Point2D_default_instance_;
    new (ptr) ::osirixgrpc::ViewerControllerNewROIRequest_Point2D();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ViewerControllerNewROIRequest_Point2D_viewercontroller_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ViewerControllerNewROIRequest_Point2D_viewercontroller_2eproto}, {}};

static void InitDefaultsscc_info_ViewerControllerNewROIRequest_Rect_viewercontroller_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_ViewerControllerNewROIRequest_Rect_default_instance_;
    new (ptr) ::osirixgrpc::ViewerControllerNewROIRequest_Rect();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ViewerControllerNewROIRequest_Rect_viewercontroller_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ViewerControllerNewROIRequest_Rect_viewercontroller_2eproto}, {}};

static void InitDefaultsscc_info_ViewerControllerNewROIResponse_viewercontroller_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_ViewerControllerNewROIResponse_default_instance_;
    new (ptr) ::osirixgrpc::ViewerControllerNewROIResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ViewerControllerNewROIResponse_viewercontroller_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ViewerControllerNewROIResponse_viewercontroller_2eproto}, {
      &scc_info_Status_utilities_2eproto.base,
      &scc_info_ROI_types_2eproto.base,}};

static void InitDefaultsscc_info_ViewerControllerOpenVRViewerForModeRequest_viewercontroller_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_ViewerControllerOpenVRViewerForModeRequest_default_instance_;
    new (ptr) ::osirixgrpc::ViewerControllerOpenVRViewerForModeRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ViewerControllerOpenVRViewerForModeRequest_viewercontroller_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ViewerControllerOpenVRViewerForModeRequest_viewercontroller_2eproto}, {
      &scc_info_ViewerController_types_2eproto.base,}};

static void InitDefaultsscc_info_ViewerControllerOpenVRViewerForModeResponse_viewercontroller_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_ViewerControllerOpenVRViewerForModeResponse_default_instance_;
    new (ptr) ::osirixgrpc::ViewerControllerOpenVRViewerForModeResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ViewerControllerOpenVRViewerForModeResponse_viewercontroller_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ViewerControllerOpenVRViewerForModeResponse_viewercontroller_2eproto}, {
      &scc_info_Status_utilities_2eproto.base,
      &scc_info_VRController_types_2eproto.base,}};

static void InitDefaultsscc_info_ViewerControllerPixListRequest_viewercontroller_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_ViewerControllerPixListRequest_default_instance_;
    new (ptr) ::osirixgrpc::ViewerControllerPixListRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ViewerControllerPixListRequest_viewercontroller_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ViewerControllerPixListRequest_viewercontroller_2eproto}, {
      &scc_info_ViewerController_types_2eproto.base,}};

static void InitDefaultsscc_info_ViewerControllerPixListResponse_viewercontroller_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_ViewerControllerPixListResponse_default_instance_;
    new (ptr) ::osirixgrpc::ViewerControllerPixListResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ViewerControllerPixListResponse_viewercontroller_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ViewerControllerPixListResponse_viewercontroller_2eproto}, {
      &scc_info_Status_utilities_2eproto.base,
      &scc_info_DCMPix_types_2eproto.base,}};

static void InitDefaultsscc_info_ViewerControllerROIListRequest_viewercontroller_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_ViewerControllerROIListRequest_default_instance_;
    new (ptr) ::osirixgrpc::ViewerControllerROIListRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ViewerControllerROIListRequest_viewercontroller_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ViewerControllerROIListRequest_viewercontroller_2eproto}, {
      &scc_info_ViewerController_types_2eproto.base,}};

static void InitDefaultsscc_info_ViewerControllerROIListResponse_viewercontroller_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_ViewerControllerROIListResponse_default_instance_;
    new (ptr) ::osirixgrpc::ViewerControllerROIListResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ViewerControllerROIListResponse_viewercontroller_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ViewerControllerROIListResponse_viewercontroller_2eproto}, {
      &scc_info_Status_utilities_2eproto.base,
      &scc_info_ViewerControllerROIListResponse_ROISlice_viewercontroller_2eproto.base,}};

static void InitDefaultsscc_info_ViewerControllerROIListResponse_ROISlice_viewercontroller_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_ViewerControllerROIListResponse_ROISlice_default_instance_;
    new (ptr) ::osirixgrpc::ViewerControllerROIListResponse_ROISlice();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ViewerControllerROIListResponse_ROISlice_viewercontroller_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ViewerControllerROIListResponse_ROISlice_viewercontroller_2eproto}, {
      &scc_info_ROI_types_2eproto.base,}};

static void InitDefaultsscc_info_ViewerControllerROIsWithNameRequest_viewercontroller_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_ViewerControllerROIsWithNameRequest_default_instance_;
    new (ptr) ::osirixgrpc::ViewerControllerROIsWithNameRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ViewerControllerROIsWithNameRequest_viewercontroller_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ViewerControllerROIsWithNameRequest_viewercontroller_2eproto}, {
      &scc_info_ViewerController_types_2eproto.base,}};

static void InitDefaultsscc_info_ViewerControllerROIsWithNameResponse_viewercontroller_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_ViewerControllerROIsWithNameResponse_default_instance_;
    new (ptr) ::osirixgrpc::ViewerControllerROIsWithNameResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ViewerControllerROIsWithNameResponse_viewercontroller_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ViewerControllerROIsWithNameResponse_viewercontroller_2eproto}, {
      &scc_info_Status_utilities_2eproto.base,
      &scc_info_ROI_types_2eproto.base,}};

static void InitDefaultsscc_info_ViewerControllerResampleViewerControllerRequest_viewercontroller_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_ViewerControllerResampleViewerControllerRequest_default_instance_;
    new (ptr) ::osirixgrpc::ViewerControllerResampleViewerControllerRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ViewerControllerResampleViewerControllerRequest_viewercontroller_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ViewerControllerResampleViewerControllerRequest_viewercontroller_2eproto}, {
      &scc_info_ViewerController_types_2eproto.base,}};

static void InitDefaultsscc_info_ViewerControllerSelectedROIsResponse_viewercontroller_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_ViewerControllerSelectedROIsResponse_default_instance_;
    new (ptr) ::osirixgrpc::ViewerControllerSelectedROIsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ViewerControllerSelectedROIsResponse_viewercontroller_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ViewerControllerSelectedROIsResponse_viewercontroller_2eproto}, {
      &scc_info_Status_utilities_2eproto.base,
      &scc_info_ROI_types_2eproto.base,}};

static void InitDefaultsscc_info_ViewerControllerSetIdxRequest_viewercontroller_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_ViewerControllerSetIdxRequest_default_instance_;
    new (ptr) ::osirixgrpc::ViewerControllerSetIdxRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ViewerControllerSetIdxRequest_viewercontroller_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ViewerControllerSetIdxRequest_viewercontroller_2eproto}, {
      &scc_info_ViewerController_types_2eproto.base,}};

static void InitDefaultsscc_info_ViewerControllerSetMovieIdxRequest_viewercontroller_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_ViewerControllerSetMovieIdxRequest_default_instance_;
    new (ptr) ::osirixgrpc::ViewerControllerSetMovieIdxRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ViewerControllerSetMovieIdxRequest_viewercontroller_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ViewerControllerSetMovieIdxRequest_viewercontroller_2eproto}, {
      &scc_info_ViewerController_types_2eproto.base,}};

static void InitDefaultsscc_info_ViewerControllerSetWLWWRequest_viewercontroller_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_ViewerControllerSetWLWWRequest_default_instance_;
    new (ptr) ::osirixgrpc::ViewerControllerSetWLWWRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ViewerControllerSetWLWWRequest_viewercontroller_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ViewerControllerSetWLWWRequest_viewercontroller_2eproto}, {
      &scc_info_ViewerController_types_2eproto.base,}};

static void InitDefaultsscc_info_ViewerControllerTitleResponse_viewercontroller_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_ViewerControllerTitleResponse_default_instance_;
    new (ptr) ::osirixgrpc::ViewerControllerTitleResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ViewerControllerTitleResponse_viewercontroller_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ViewerControllerTitleResponse_viewercontroller_2eproto}, {
      &scc_info_Status_utilities_2eproto.base,}};

static void InitDefaultsscc_info_ViewerControllerVRControllersResponse_viewercontroller_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_ViewerControllerVRControllersResponse_default_instance_;
    new (ptr) ::osirixgrpc::ViewerControllerVRControllersResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ViewerControllerVRControllersResponse_viewercontroller_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ViewerControllerVRControllersResponse_viewercontroller_2eproto}, {
      &scc_info_Status_utilities_2eproto.base,
      &scc_info_VRController_types_2eproto.base,}};

static void InitDefaultsscc_info_ViewerControllerWLWWResponse_viewercontroller_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_ViewerControllerWLWWResponse_default_instance_;
    new (ptr) ::osirixgrpc::ViewerControllerWLWWResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ViewerControllerWLWWResponse_viewercontroller_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ViewerControllerWLWWResponse_viewercontroller_2eproto}, {
      &scc_info_Status_utilities_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_viewercontroller_2eproto[32];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_viewercontroller_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_viewercontroller_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_viewercontroller_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerPixListResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerPixListResponse, status_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerPixListResponse, pix_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerROIListResponse_ROISlice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerROIListResponse_ROISlice, rois_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerROIListResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerROIListResponse, status_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerROIListResponse, roi_slices_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIResponse, status_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIResponse, roi_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerCurDCMResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerCurDCMResponse, status_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerCurDCMResponse, pix_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerROIsWithNameResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerROIsWithNameResponse, status_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerROIsWithNameResponse, rois_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerSelectedROIsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerSelectedROIsResponse, status_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerSelectedROIsResponse, rois_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerIsDataVolumicResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerIsDataVolumicResponse, status_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerIsDataVolumicResponse, is_volumic_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerBlendingControllerResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerBlendingControllerResponse, status_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerBlendingControllerResponse, blending_viewer_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerVRControllersResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerVRControllersResponse, status_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerVRControllersResponse, vr_controllers_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerTitleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerTitleResponse, status_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerTitleResponse, title_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerModalityResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerModalityResponse, status_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerModalityResponse, modality_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerMovieIdxResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerMovieIdxResponse, status_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerMovieIdxResponse, movie_idx_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerMaxMovieIdxResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerMaxMovieIdxResponse, status_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerMaxMovieIdxResponse, max_movie_idx_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerIdxResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerIdxResponse, status_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerIdxResponse, idx_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerWLWWResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerWLWWResponse, status_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerWLWWResponse, wl_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerWLWWResponse, ww_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerOpenVRViewerForModeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerOpenVRViewerForModeResponse, status_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerOpenVRViewerForModeResponse, vr_controller_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerPixListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerPixListRequest, viewer_controller_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerPixListRequest, movie_idx_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerROIListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerROIListRequest, viewer_controller_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerROIListRequest, movie_idx_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest_Buffer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest_Buffer, buffer_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest_Buffer, rows_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest_Buffer, columns_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest_Point2D, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest_Point2D, x_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest_Point2D, y_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest_Color, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest_Color, r_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest_Color, g_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest_Color, b_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest_Rect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest_Rect, origin_x_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest_Rect, origin_y_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest_Rect, height_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest_Rect, width_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest, viewer_controller_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest, itype_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest, name_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest, position_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest, movie_idx_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest, buffer_position_x_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest, buffer_position_y_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest, color_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest, thickness_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest, opacity_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest, buffer_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest, points_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerNewROIRequest, rectangle_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerROIsWithNameRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerROIsWithNameRequest, viewer_controller_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerROIsWithNameRequest, name_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerROIsWithNameRequest, movie_idx_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerROIsWithNameRequest, in_4d_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerResampleViewerControllerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerResampleViewerControllerRequest, viewer_controller_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerResampleViewerControllerRequest, fixed_viewer_controller_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerCopyViewerWindowRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerCopyViewerWindowRequest, viewer_controller_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerCopyViewerWindowRequest, in_4d_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerSetMovieIdxRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerSetMovieIdxRequest, viewer_controller_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerSetMovieIdxRequest, movie_idx_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerIsDataVolumicRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerIsDataVolumicRequest, viewer_controller_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerIsDataVolumicRequest, in_4d_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerSetIdxRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerSetIdxRequest, viewer_controller_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerSetIdxRequest, idx_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerSetWLWWRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerSetWLWWRequest, viewer_controller_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerSetWLWWRequest, wl_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerSetWLWWRequest, ww_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerOpenVRViewerForModeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerOpenVRViewerForModeRequest, viewer_controller_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ViewerControllerOpenVRViewerForModeRequest, mode_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::osirixgrpc::ViewerControllerPixListResponse)},
  { 7, -1, sizeof(::osirixgrpc::ViewerControllerROIListResponse_ROISlice)},
  { 13, -1, sizeof(::osirixgrpc::ViewerControllerROIListResponse)},
  { 20, -1, sizeof(::osirixgrpc::ViewerControllerNewROIResponse)},
  { 27, -1, sizeof(::osirixgrpc::ViewerControllerCurDCMResponse)},
  { 34, -1, sizeof(::osirixgrpc::ViewerControllerROIsWithNameResponse)},
  { 41, -1, sizeof(::osirixgrpc::ViewerControllerSelectedROIsResponse)},
  { 48, -1, sizeof(::osirixgrpc::ViewerControllerIsDataVolumicResponse)},
  { 55, -1, sizeof(::osirixgrpc::ViewerControllerBlendingControllerResponse)},
  { 62, -1, sizeof(::osirixgrpc::ViewerControllerVRControllersResponse)},
  { 69, -1, sizeof(::osirixgrpc::ViewerControllerTitleResponse)},
  { 76, -1, sizeof(::osirixgrpc::ViewerControllerModalityResponse)},
  { 83, -1, sizeof(::osirixgrpc::ViewerControllerMovieIdxResponse)},
  { 90, -1, sizeof(::osirixgrpc::ViewerControllerMaxMovieIdxResponse)},
  { 97, -1, sizeof(::osirixgrpc::ViewerControllerIdxResponse)},
  { 104, -1, sizeof(::osirixgrpc::ViewerControllerWLWWResponse)},
  { 112, -1, sizeof(::osirixgrpc::ViewerControllerOpenVRViewerForModeResponse)},
  { 119, -1, sizeof(::osirixgrpc::ViewerControllerPixListRequest)},
  { 126, -1, sizeof(::osirixgrpc::ViewerControllerROIListRequest)},
  { 133, -1, sizeof(::osirixgrpc::ViewerControllerNewROIRequest_Buffer)},
  { 141, -1, sizeof(::osirixgrpc::ViewerControllerNewROIRequest_Point2D)},
  { 148, -1, sizeof(::osirixgrpc::ViewerControllerNewROIRequest_Color)},
  { 156, -1, sizeof(::osirixgrpc::ViewerControllerNewROIRequest_Rect)},
  { 165, -1, sizeof(::osirixgrpc::ViewerControllerNewROIRequest)},
  { 183, -1, sizeof(::osirixgrpc::ViewerControllerROIsWithNameRequest)},
  { 192, -1, sizeof(::osirixgrpc::ViewerControllerResampleViewerControllerRequest)},
  { 199, -1, sizeof(::osirixgrpc::ViewerControllerCopyViewerWindowRequest)},
  { 206, -1, sizeof(::osirixgrpc::ViewerControllerSetMovieIdxRequest)},
  { 213, -1, sizeof(::osirixgrpc::ViewerControllerIsDataVolumicRequest)},
  { 220, -1, sizeof(::osirixgrpc::ViewerControllerSetIdxRequest)},
  { 227, -1, sizeof(::osirixgrpc::ViewerControllerSetWLWWRequest)},
  { 235, -1, sizeof(::osirixgrpc::ViewerControllerOpenVRViewerForModeRequest)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_ViewerControllerPixListResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_ViewerControllerROIListResponse_ROISlice_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_ViewerControllerROIListResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_ViewerControllerNewROIResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_ViewerControllerCurDCMResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_ViewerControllerROIsWithNameResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_ViewerControllerSelectedROIsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_ViewerControllerIsDataVolumicResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_ViewerControllerBlendingControllerResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_ViewerControllerVRControllersResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_ViewerControllerTitleResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_ViewerControllerModalityResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_ViewerControllerMovieIdxResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_ViewerControllerMaxMovieIdxResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_ViewerControllerIdxResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_ViewerControllerWLWWResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_ViewerControllerOpenVRViewerForModeResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_ViewerControllerPixListRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_ViewerControllerROIListRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_ViewerControllerNewROIRequest_Buffer_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_ViewerControllerNewROIRequest_Point2D_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_ViewerControllerNewROIRequest_Color_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_ViewerControllerNewROIRequest_Rect_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_ViewerControllerNewROIRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_ViewerControllerROIsWithNameRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_ViewerControllerResampleViewerControllerRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_ViewerControllerCopyViewerWindowRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_ViewerControllerSetMovieIdxRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_ViewerControllerIsDataVolumicRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_ViewerControllerSetIdxRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_ViewerControllerSetWLWWRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_ViewerControllerOpenVRViewerForModeRequest_default_instance_),
};

const char descriptor_table_protodef_viewercontroller_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\026viewercontroller.proto\022\nosirixgrpc\032\017ut"
  "ilities.proto\032\013types.proto\"f\n\037ViewerCont"
  "rollerPixListResponse\022\"\n\006status\030\001 \001(\0132\022."
  "osirixgrpc.Status\022\037\n\003pix\030\002 \003(\0132\022.osirixg"
  "rpc.DCMPix\"\272\001\n\037ViewerControllerROIListRe"
  "sponse\022\"\n\006status\030\001 \001(\0132\022.osirixgrpc.Stat"
  "us\022H\n\nroi_slices\030\002 \003(\01324.osirixgrpc.View"
  "erControllerROIListResponse.ROISlice\032)\n\010"
  "ROISlice\022\035\n\004rois\030\001 \003(\0132\017.osirixgrpc.ROI\""
  "b\n\036ViewerControllerNewROIResponse\022\"\n\006sta"
  "tus\030\001 \001(\0132\022.osirixgrpc.Status\022\034\n\003roi\030\002 \001"
  "(\0132\017.osirixgrpc.ROI\"e\n\036ViewerControllerC"
  "urDCMResponse\022\"\n\006status\030\001 \001(\0132\022.osirixgr"
  "pc.Status\022\037\n\003pix\030\002 \001(\0132\022.osirixgrpc.DCMP"
  "ix\"i\n$ViewerControllerROIsWithNameRespon"
  "se\022\"\n\006status\030\001 \001(\0132\022.osirixgrpc.Status\022\035"
  "\n\004rois\030\002 \003(\0132\017.osirixgrpc.ROI\"i\n$ViewerC"
  "ontrollerSelectedROIsResponse\022\"\n\006status\030"
  "\001 \001(\0132\022.osirixgrpc.Status\022\035\n\004rois\030\002 \003(\0132"
  "\017.osirixgrpc.ROI\"_\n%ViewerControllerIsDa"
  "taVolumicResponse\022\"\n\006status\030\001 \001(\0132\022.osir"
  "ixgrpc.Status\022\022\n\nis_volumic\030\002 \001(\010\"\207\001\n*Vi"
  "ewerControllerBlendingControllerResponse"
  "\022\"\n\006status\030\001 \001(\0132\022.osirixgrpc.Status\0225\n\017"
  "blending_viewer\030\002 \001(\0132\034.osirixgrpc.Viewe"
  "rController\"}\n%ViewerControllerVRControl"
  "lersResponse\022\"\n\006status\030\001 \001(\0132\022.osirixgrp"
  "c.Status\0220\n\016vr_controllers\030\002 \003(\0132\030.osiri"
  "xgrpc.VRController\"R\n\035ViewerControllerTi"
  "tleResponse\022\"\n\006status\030\001 \001(\0132\022.osirixgrpc"
  ".Status\022\r\n\005title\030\002 \001(\t\"X\n ViewerControll"
  "erModalityResponse\022\"\n\006status\030\001 \001(\0132\022.osi"
  "rixgrpc.Status\022\020\n\010modality\030\002 \001(\t\"Y\n View"
  "erControllerMovieIdxResponse\022\"\n\006status\030\001"
  " \001(\0132\022.osirixgrpc.Status\022\021\n\tmovie_idx\030\002 "
  "\001(\005\"`\n#ViewerControllerMaxMovieIdxRespon"
  "se\022\"\n\006status\030\001 \001(\0132\022.osirixgrpc.Status\022\025"
  "\n\rmax_movie_idx\030\002 \001(\005\"N\n\033ViewerControlle"
  "rIdxResponse\022\"\n\006status\030\001 \001(\0132\022.osirixgrp"
  "c.Status\022\013\n\003idx\030\002 \001(\005\"Z\n\034ViewerControlle"
  "rWLWWResponse\022\"\n\006status\030\001 \001(\0132\022.osirixgr"
  "pc.Status\022\n\n\002wl\030\002 \001(\002\022\n\n\002ww\030\003 \001(\002\"\202\001\n+Vi"
  "ewerControllerOpenVRViewerForModeRespons"
  "e\022\"\n\006status\030\001 \001(\0132\022.osirixgrpc.Status\022/\n"
  "\rvr_controller\030\002 \001(\0132\030.osirixgrpc.VRCont"
  "roller\"l\n\036ViewerControllerPixListRequest"
  "\0227\n\021viewer_controller\030\001 \001(\0132\034.osirixgrpc"
  ".ViewerController\022\021\n\tmovie_idx\030\002 \001(\005\"l\n\036"
  "ViewerControllerROIListRequest\0227\n\021viewer"
  "_controller\030\001 \001(\0132\034.osirixgrpc.ViewerCon"
  "troller\022\021\n\tmovie_idx\030\002 \001(\005\"\313\005\n\035ViewerCon"
  "trollerNewROIRequest\0227\n\021viewer_controlle"
  "r\030\001 \001(\0132\034.osirixgrpc.ViewerController\022\r\n"
  "\005itype\030\002 \001(\005\022\014\n\004name\030\003 \001(\t\022\020\n\010position\030\004"
  " \001(\005\022\021\n\tmovie_idx\030\005 \001(\005\022\031\n\021buffer_positi"
  "on_x\030\006 \001(\005\022\031\n\021buffer_position_y\030\007 \001(\005\022>\n"
  "\005color\030\010 \001(\0132/.osirixgrpc.ViewerControll"
  "erNewROIRequest.Color\022\021\n\tthickness\030\t \001(\002"
  "\022\017\n\007opacity\030\n \001(\002\022@\n\006buffer\030\013 \001(\01320.osir"
  "ixgrpc.ViewerControllerNewROIRequest.Buf"
  "fer\022A\n\006points\030\014 \003(\01321.osirixgrpc.ViewerC"
  "ontrollerNewROIRequest.Point2D\022A\n\trectan"
  "gle\030\r \001(\0132..osirixgrpc.ViewerControllerN"
  "ewROIRequest.Rect\0327\n\006Buffer\022\016\n\006buffer\030\001 "
  "\003(\010\022\014\n\004rows\030\002 \001(\005\022\017\n\007columns\030\003 \001(\005\032\037\n\007Po"
  "int2D\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\032(\n\005Color\022\t\n\001"
  "r\030\001 \001(\005\022\t\n\001g\030\002 \001(\005\022\t\n\001b\030\003 \001(\005\032I\n\004Rect\022\020\n"
  "\010origin_x\030\001 \001(\002\022\020\n\010origin_y\030\002 \001(\002\022\016\n\006hei"
  "ght\030\003 \001(\002\022\r\n\005width\030\004 \001(\002\"\216\001\n#ViewerContr"
  "ollerROIsWithNameRequest\0227\n\021viewer_contr"
  "oller\030\001 \001(\0132\034.osirixgrpc.ViewerControlle"
  "r\022\014\n\004name\030\002 \001(\t\022\021\n\tmovie_idx\030\003 \001(\005\022\r\n\005in"
  "_4d\030\004 \001(\010\"\251\001\n/ViewerControllerResampleVi"
  "ewerControllerRequest\0227\n\021viewer_controll"
  "er\030\001 \001(\0132\034.osirixgrpc.ViewerController\022="
  "\n\027fixed_viewer_controller\030\002 \001(\0132\034.osirix"
  "grpc.ViewerController\"q\n\'ViewerControlle"
  "rCopyViewerWindowRequest\0227\n\021viewer_contr"
  "oller\030\001 \001(\0132\034.osirixgrpc.ViewerControlle"
  "r\022\r\n\005in_4d\030\002 \001(\010\"p\n\"ViewerControllerSetM"
  "ovieIdxRequest\0227\n\021viewer_controller\030\001 \001("
  "\0132\034.osirixgrpc.ViewerController\022\021\n\tmovie"
  "_idx\030\002 \001(\005\"n\n$ViewerControllerIsDataVolu"
  "micRequest\0227\n\021viewer_controller\030\001 \001(\0132\034."
  "osirixgrpc.ViewerController\022\r\n\005in_4d\030\002 \001"
  "(\010\"e\n\035ViewerControllerSetIdxRequest\0227\n\021v"
  "iewer_controller\030\001 \001(\0132\034.osirixgrpc.View"
  "erController\022\013\n\003idx\030\002 \001(\005\"q\n\036ViewerContr"
  "ollerSetWLWWRequest\0227\n\021viewer_controller"
  "\030\001 \001(\0132\034.osirixgrpc.ViewerController\022\n\n\002"
  "wl\030\002 \001(\002\022\n\n\002ww\030\003 \001(\002\"s\n*ViewerController"
  "OpenVRViewerForModeRequest\0227\n\021viewer_con"
  "troller\030\001 \001(\0132\034.osirixgrpc.ViewerControl"
  "ler\022\014\n\004mode\030\002 \001(\tb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_viewercontroller_2eproto_deps[2] = {
  &::descriptor_table_types_2eproto,
  &::descriptor_table_utilities_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_viewercontroller_2eproto_sccs[32] = {
  &scc_info_ViewerControllerBlendingControllerResponse_viewercontroller_2eproto.base,
  &scc_info_ViewerControllerCopyViewerWindowRequest_viewercontroller_2eproto.base,
  &scc_info_ViewerControllerCurDCMResponse_viewercontroller_2eproto.base,
  &scc_info_ViewerControllerIdxResponse_viewercontroller_2eproto.base,
  &scc_info_ViewerControllerIsDataVolumicRequest_viewercontroller_2eproto.base,
  &scc_info_ViewerControllerIsDataVolumicResponse_viewercontroller_2eproto.base,
  &scc_info_ViewerControllerMaxMovieIdxResponse_viewercontroller_2eproto.base,
  &scc_info_ViewerControllerModalityResponse_viewercontroller_2eproto.base,
  &scc_info_ViewerControllerMovieIdxResponse_viewercontroller_2eproto.base,
  &scc_info_ViewerControllerNewROIRequest_viewercontroller_2eproto.base,
  &scc_info_ViewerControllerNewROIRequest_Buffer_viewercontroller_2eproto.base,
  &scc_info_ViewerControllerNewROIRequest_Color_viewercontroller_2eproto.base,
  &scc_info_ViewerControllerNewROIRequest_Point2D_viewercontroller_2eproto.base,
  &scc_info_ViewerControllerNewROIRequest_Rect_viewercontroller_2eproto.base,
  &scc_info_ViewerControllerNewROIResponse_viewercontroller_2eproto.base,
  &scc_info_ViewerControllerOpenVRViewerForModeRequest_viewercontroller_2eproto.base,
  &scc_info_ViewerControllerOpenVRViewerForModeResponse_viewercontroller_2eproto.base,
  &scc_info_ViewerControllerPixListRequest_viewercontroller_2eproto.base,
  &scc_info_ViewerControllerPixListResponse_viewercontroller_2eproto.base,
  &scc_info_ViewerControllerROIListRequest_viewercontroller_2eproto.base,
  &scc_info_ViewerControllerROIListResponse_viewercontroller_2eproto.base,
  &scc_info_ViewerControllerROIListResponse_ROISlice_viewercontroller_2eproto.base,
  &scc_info_ViewerControllerROIsWithNameRequest_viewercontroller_2eproto.base,
  &scc_info_ViewerControllerROIsWithNameResponse_viewercontroller_2eproto.base,
  &scc_info_ViewerControllerResampleViewerControllerRequest_viewercontroller_2eproto.base,
  &scc_info_ViewerControllerSelectedROIsResponse_viewercontroller_2eproto.base,
  &scc_info_ViewerControllerSetIdxRequest_viewercontroller_2eproto.base,
  &scc_info_ViewerControllerSetMovieIdxRequest_viewercontroller_2eproto.base,
  &scc_info_ViewerControllerSetWLWWRequest_viewercontroller_2eproto.base,
  &scc_info_ViewerControllerTitleResponse_viewercontroller_2eproto.base,
  &scc_info_ViewerControllerVRControllersResponse_viewercontroller_2eproto.base,
  &scc_info_ViewerControllerWLWWResponse_viewercontroller_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_viewercontroller_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_viewercontroller_2eproto = {
  false, false, descriptor_table_protodef_viewercontroller_2eproto, "viewercontroller.proto", 3745,
  &descriptor_table_viewercontroller_2eproto_once, descriptor_table_viewercontroller_2eproto_sccs, descriptor_table_viewercontroller_2eproto_deps, 32, 2,
  schemas, file_default_instances, TableStruct_viewercontroller_2eproto::offsets,
  file_level_metadata_viewercontroller_2eproto, 32, file_level_enum_descriptors_viewercontroller_2eproto, file_level_service_descriptors_viewercontroller_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_viewercontroller_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_viewercontroller_2eproto)), true);
namespace osirixgrpc {

// ===================================================================

class ViewerControllerPixListResponse::_Internal {
 public:
  static const ::osirixgrpc::Status& status(const ViewerControllerPixListResponse* msg);
};

const ::osirixgrpc::Status&
ViewerControllerPixListResponse::_Internal::status(const ViewerControllerPixListResponse* msg) {
  return *msg->status_;
}
void ViewerControllerPixListResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
void ViewerControllerPixListResponse::clear_pix() {
  pix_.Clear();
}
ViewerControllerPixListResponse::ViewerControllerPixListResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  pix_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerPixListResponse)
}
ViewerControllerPixListResponse::ViewerControllerPixListResponse(const ViewerControllerPixListResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      pix_(from.pix_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::osirixgrpc::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerPixListResponse)
}

void ViewerControllerPixListResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ViewerControllerPixListResponse_viewercontroller_2eproto.base);
  status_ = nullptr;
}

ViewerControllerPixListResponse::~ViewerControllerPixListResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerPixListResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ViewerControllerPixListResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void ViewerControllerPixListResponse::ArenaDtor(void* object) {
  ViewerControllerPixListResponse* _this = reinterpret_cast< ViewerControllerPixListResponse* >(object);
  (void)_this;
}
void ViewerControllerPixListResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ViewerControllerPixListResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ViewerControllerPixListResponse& ViewerControllerPixListResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ViewerControllerPixListResponse_viewercontroller_2eproto.base);
  return *internal_default_instance();
}


void ViewerControllerPixListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerPixListResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pix_.Clear();
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ViewerControllerPixListResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .osirixgrpc.DCMPix pix = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_pix(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ViewerControllerPixListResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerPixListResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // repeated .osirixgrpc.DCMPix pix = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_pix_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_pix(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerPixListResponse)
  return target;
}

size_t ViewerControllerPixListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerPixListResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .osirixgrpc.DCMPix pix = 2;
  total_size += 1UL * this->_internal_pix_size();
  for (const auto& msg : this->pix_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ViewerControllerPixListResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.ViewerControllerPixListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ViewerControllerPixListResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ViewerControllerPixListResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.ViewerControllerPixListResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.ViewerControllerPixListResponse)
    MergeFrom(*source);
  }
}

void ViewerControllerPixListResponse::MergeFrom(const ViewerControllerPixListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerPixListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pix_.MergeFrom(from.pix_);
  if (from.has_status()) {
    _internal_mutable_status()->::osirixgrpc::Status::MergeFrom(from._internal_status());
  }
}

void ViewerControllerPixListResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.ViewerControllerPixListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ViewerControllerPixListResponse::CopyFrom(const ViewerControllerPixListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerPixListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewerControllerPixListResponse::IsInitialized() const {
  return true;
}

void ViewerControllerPixListResponse::InternalSwap(ViewerControllerPixListResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  pix_.InternalSwap(&other->pix_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ViewerControllerPixListResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ViewerControllerROIListResponse_ROISlice::_Internal {
 public:
};

void ViewerControllerROIListResponse_ROISlice::clear_rois() {
  rois_.Clear();
}
ViewerControllerROIListResponse_ROISlice::ViewerControllerROIListResponse_ROISlice(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  rois_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerROIListResponse.ROISlice)
}
ViewerControllerROIListResponse_ROISlice::ViewerControllerROIListResponse_ROISlice(const ViewerControllerROIListResponse_ROISlice& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      rois_(from.rois_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerROIListResponse.ROISlice)
}

void ViewerControllerROIListResponse_ROISlice::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ViewerControllerROIListResponse_ROISlice_viewercontroller_2eproto.base);
}

ViewerControllerROIListResponse_ROISlice::~ViewerControllerROIListResponse_ROISlice() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerROIListResponse.ROISlice)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ViewerControllerROIListResponse_ROISlice::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ViewerControllerROIListResponse_ROISlice::ArenaDtor(void* object) {
  ViewerControllerROIListResponse_ROISlice* _this = reinterpret_cast< ViewerControllerROIListResponse_ROISlice* >(object);
  (void)_this;
}
void ViewerControllerROIListResponse_ROISlice::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ViewerControllerROIListResponse_ROISlice::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ViewerControllerROIListResponse_ROISlice& ViewerControllerROIListResponse_ROISlice::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ViewerControllerROIListResponse_ROISlice_viewercontroller_2eproto.base);
  return *internal_default_instance();
}


void ViewerControllerROIListResponse_ROISlice::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerROIListResponse.ROISlice)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rois_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ViewerControllerROIListResponse_ROISlice::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .osirixgrpc.ROI rois = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_rois(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ViewerControllerROIListResponse_ROISlice::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerROIListResponse.ROISlice)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .osirixgrpc.ROI rois = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_rois_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_rois(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerROIListResponse.ROISlice)
  return target;
}

size_t ViewerControllerROIListResponse_ROISlice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerROIListResponse.ROISlice)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .osirixgrpc.ROI rois = 1;
  total_size += 1UL * this->_internal_rois_size();
  for (const auto& msg : this->rois_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ViewerControllerROIListResponse_ROISlice::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.ViewerControllerROIListResponse.ROISlice)
  GOOGLE_DCHECK_NE(&from, this);
  const ViewerControllerROIListResponse_ROISlice* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ViewerControllerROIListResponse_ROISlice>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.ViewerControllerROIListResponse.ROISlice)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.ViewerControllerROIListResponse.ROISlice)
    MergeFrom(*source);
  }
}

void ViewerControllerROIListResponse_ROISlice::MergeFrom(const ViewerControllerROIListResponse_ROISlice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerROIListResponse.ROISlice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rois_.MergeFrom(from.rois_);
}

void ViewerControllerROIListResponse_ROISlice::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.ViewerControllerROIListResponse.ROISlice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ViewerControllerROIListResponse_ROISlice::CopyFrom(const ViewerControllerROIListResponse_ROISlice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerROIListResponse.ROISlice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewerControllerROIListResponse_ROISlice::IsInitialized() const {
  return true;
}

void ViewerControllerROIListResponse_ROISlice::InternalSwap(ViewerControllerROIListResponse_ROISlice* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  rois_.InternalSwap(&other->rois_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ViewerControllerROIListResponse_ROISlice::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ViewerControllerROIListResponse::_Internal {
 public:
  static const ::osirixgrpc::Status& status(const ViewerControllerROIListResponse* msg);
};

const ::osirixgrpc::Status&
ViewerControllerROIListResponse::_Internal::status(const ViewerControllerROIListResponse* msg) {
  return *msg->status_;
}
void ViewerControllerROIListResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
ViewerControllerROIListResponse::ViewerControllerROIListResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  roi_slices_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerROIListResponse)
}
ViewerControllerROIListResponse::ViewerControllerROIListResponse(const ViewerControllerROIListResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      roi_slices_(from.roi_slices_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::osirixgrpc::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerROIListResponse)
}

void ViewerControllerROIListResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ViewerControllerROIListResponse_viewercontroller_2eproto.base);
  status_ = nullptr;
}

ViewerControllerROIListResponse::~ViewerControllerROIListResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerROIListResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ViewerControllerROIListResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void ViewerControllerROIListResponse::ArenaDtor(void* object) {
  ViewerControllerROIListResponse* _this = reinterpret_cast< ViewerControllerROIListResponse* >(object);
  (void)_this;
}
void ViewerControllerROIListResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ViewerControllerROIListResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ViewerControllerROIListResponse& ViewerControllerROIListResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ViewerControllerROIListResponse_viewercontroller_2eproto.base);
  return *internal_default_instance();
}


void ViewerControllerROIListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerROIListResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roi_slices_.Clear();
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ViewerControllerROIListResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .osirixgrpc.ViewerControllerROIListResponse.ROISlice roi_slices = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_roi_slices(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ViewerControllerROIListResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerROIListResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // repeated .osirixgrpc.ViewerControllerROIListResponse.ROISlice roi_slices = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_roi_slices_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_roi_slices(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerROIListResponse)
  return target;
}

size_t ViewerControllerROIListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerROIListResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .osirixgrpc.ViewerControllerROIListResponse.ROISlice roi_slices = 2;
  total_size += 1UL * this->_internal_roi_slices_size();
  for (const auto& msg : this->roi_slices_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ViewerControllerROIListResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.ViewerControllerROIListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ViewerControllerROIListResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ViewerControllerROIListResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.ViewerControllerROIListResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.ViewerControllerROIListResponse)
    MergeFrom(*source);
  }
}

void ViewerControllerROIListResponse::MergeFrom(const ViewerControllerROIListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerROIListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  roi_slices_.MergeFrom(from.roi_slices_);
  if (from.has_status()) {
    _internal_mutable_status()->::osirixgrpc::Status::MergeFrom(from._internal_status());
  }
}

void ViewerControllerROIListResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.ViewerControllerROIListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ViewerControllerROIListResponse::CopyFrom(const ViewerControllerROIListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerROIListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewerControllerROIListResponse::IsInitialized() const {
  return true;
}

void ViewerControllerROIListResponse::InternalSwap(ViewerControllerROIListResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  roi_slices_.InternalSwap(&other->roi_slices_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ViewerControllerROIListResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ViewerControllerNewROIResponse::_Internal {
 public:
  static const ::osirixgrpc::Status& status(const ViewerControllerNewROIResponse* msg);
  static const ::osirixgrpc::ROI& roi(const ViewerControllerNewROIResponse* msg);
};

const ::osirixgrpc::Status&
ViewerControllerNewROIResponse::_Internal::status(const ViewerControllerNewROIResponse* msg) {
  return *msg->status_;
}
const ::osirixgrpc::ROI&
ViewerControllerNewROIResponse::_Internal::roi(const ViewerControllerNewROIResponse* msg) {
  return *msg->roi_;
}
void ViewerControllerNewROIResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
void ViewerControllerNewROIResponse::clear_roi() {
  if (GetArena() == nullptr && roi_ != nullptr) {
    delete roi_;
  }
  roi_ = nullptr;
}
ViewerControllerNewROIResponse::ViewerControllerNewROIResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerNewROIResponse)
}
ViewerControllerNewROIResponse::ViewerControllerNewROIResponse(const ViewerControllerNewROIResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::osirixgrpc::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  if (from._internal_has_roi()) {
    roi_ = new ::osirixgrpc::ROI(*from.roi_);
  } else {
    roi_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerNewROIResponse)
}

void ViewerControllerNewROIResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ViewerControllerNewROIResponse_viewercontroller_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&roi_) -
      reinterpret_cast<char*>(&status_)) + sizeof(roi_));
}

ViewerControllerNewROIResponse::~ViewerControllerNewROIResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerNewROIResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ViewerControllerNewROIResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete roi_;
}

void ViewerControllerNewROIResponse::ArenaDtor(void* object) {
  ViewerControllerNewROIResponse* _this = reinterpret_cast< ViewerControllerNewROIResponse* >(object);
  (void)_this;
}
void ViewerControllerNewROIResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ViewerControllerNewROIResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ViewerControllerNewROIResponse& ViewerControllerNewROIResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ViewerControllerNewROIResponse_viewercontroller_2eproto.base);
  return *internal_default_instance();
}


void ViewerControllerNewROIResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerNewROIResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  if (GetArena() == nullptr && roi_ != nullptr) {
    delete roi_;
  }
  roi_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ViewerControllerNewROIResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .osirixgrpc.ROI roi = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_roi(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ViewerControllerNewROIResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerNewROIResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // .osirixgrpc.ROI roi = 2;
  if (this->has_roi()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::roi(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerNewROIResponse)
  return target;
}

size_t ViewerControllerNewROIResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerNewROIResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .osirixgrpc.ROI roi = 2;
  if (this->has_roi()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *roi_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ViewerControllerNewROIResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.ViewerControllerNewROIResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ViewerControllerNewROIResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ViewerControllerNewROIResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.ViewerControllerNewROIResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.ViewerControllerNewROIResponse)
    MergeFrom(*source);
  }
}

void ViewerControllerNewROIResponse::MergeFrom(const ViewerControllerNewROIResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerNewROIResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::osirixgrpc::Status::MergeFrom(from._internal_status());
  }
  if (from.has_roi()) {
    _internal_mutable_roi()->::osirixgrpc::ROI::MergeFrom(from._internal_roi());
  }
}

void ViewerControllerNewROIResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.ViewerControllerNewROIResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ViewerControllerNewROIResponse::CopyFrom(const ViewerControllerNewROIResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerNewROIResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewerControllerNewROIResponse::IsInitialized() const {
  return true;
}

void ViewerControllerNewROIResponse::InternalSwap(ViewerControllerNewROIResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIResponse, roi_)
      + sizeof(ViewerControllerNewROIResponse::roi_)
      - PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIResponse, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ViewerControllerNewROIResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ViewerControllerCurDCMResponse::_Internal {
 public:
  static const ::osirixgrpc::Status& status(const ViewerControllerCurDCMResponse* msg);
  static const ::osirixgrpc::DCMPix& pix(const ViewerControllerCurDCMResponse* msg);
};

const ::osirixgrpc::Status&
ViewerControllerCurDCMResponse::_Internal::status(const ViewerControllerCurDCMResponse* msg) {
  return *msg->status_;
}
const ::osirixgrpc::DCMPix&
ViewerControllerCurDCMResponse::_Internal::pix(const ViewerControllerCurDCMResponse* msg) {
  return *msg->pix_;
}
void ViewerControllerCurDCMResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
void ViewerControllerCurDCMResponse::clear_pix() {
  if (GetArena() == nullptr && pix_ != nullptr) {
    delete pix_;
  }
  pix_ = nullptr;
}
ViewerControllerCurDCMResponse::ViewerControllerCurDCMResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerCurDCMResponse)
}
ViewerControllerCurDCMResponse::ViewerControllerCurDCMResponse(const ViewerControllerCurDCMResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::osirixgrpc::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  if (from._internal_has_pix()) {
    pix_ = new ::osirixgrpc::DCMPix(*from.pix_);
  } else {
    pix_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerCurDCMResponse)
}

void ViewerControllerCurDCMResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ViewerControllerCurDCMResponse_viewercontroller_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&pix_) -
      reinterpret_cast<char*>(&status_)) + sizeof(pix_));
}

ViewerControllerCurDCMResponse::~ViewerControllerCurDCMResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerCurDCMResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ViewerControllerCurDCMResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete pix_;
}

void ViewerControllerCurDCMResponse::ArenaDtor(void* object) {
  ViewerControllerCurDCMResponse* _this = reinterpret_cast< ViewerControllerCurDCMResponse* >(object);
  (void)_this;
}
void ViewerControllerCurDCMResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ViewerControllerCurDCMResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ViewerControllerCurDCMResponse& ViewerControllerCurDCMResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ViewerControllerCurDCMResponse_viewercontroller_2eproto.base);
  return *internal_default_instance();
}


void ViewerControllerCurDCMResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerCurDCMResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  if (GetArena() == nullptr && pix_ != nullptr) {
    delete pix_;
  }
  pix_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ViewerControllerCurDCMResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .osirixgrpc.DCMPix pix = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_pix(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ViewerControllerCurDCMResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerCurDCMResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // .osirixgrpc.DCMPix pix = 2;
  if (this->has_pix()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::pix(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerCurDCMResponse)
  return target;
}

size_t ViewerControllerCurDCMResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerCurDCMResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .osirixgrpc.DCMPix pix = 2;
  if (this->has_pix()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *pix_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ViewerControllerCurDCMResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.ViewerControllerCurDCMResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ViewerControllerCurDCMResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ViewerControllerCurDCMResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.ViewerControllerCurDCMResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.ViewerControllerCurDCMResponse)
    MergeFrom(*source);
  }
}

void ViewerControllerCurDCMResponse::MergeFrom(const ViewerControllerCurDCMResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerCurDCMResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::osirixgrpc::Status::MergeFrom(from._internal_status());
  }
  if (from.has_pix()) {
    _internal_mutable_pix()->::osirixgrpc::DCMPix::MergeFrom(from._internal_pix());
  }
}

void ViewerControllerCurDCMResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.ViewerControllerCurDCMResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ViewerControllerCurDCMResponse::CopyFrom(const ViewerControllerCurDCMResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerCurDCMResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewerControllerCurDCMResponse::IsInitialized() const {
  return true;
}

void ViewerControllerCurDCMResponse::InternalSwap(ViewerControllerCurDCMResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ViewerControllerCurDCMResponse, pix_)
      + sizeof(ViewerControllerCurDCMResponse::pix_)
      - PROTOBUF_FIELD_OFFSET(ViewerControllerCurDCMResponse, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ViewerControllerCurDCMResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ViewerControllerROIsWithNameResponse::_Internal {
 public:
  static const ::osirixgrpc::Status& status(const ViewerControllerROIsWithNameResponse* msg);
};

const ::osirixgrpc::Status&
ViewerControllerROIsWithNameResponse::_Internal::status(const ViewerControllerROIsWithNameResponse* msg) {
  return *msg->status_;
}
void ViewerControllerROIsWithNameResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
void ViewerControllerROIsWithNameResponse::clear_rois() {
  rois_.Clear();
}
ViewerControllerROIsWithNameResponse::ViewerControllerROIsWithNameResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  rois_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerROIsWithNameResponse)
}
ViewerControllerROIsWithNameResponse::ViewerControllerROIsWithNameResponse(const ViewerControllerROIsWithNameResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      rois_(from.rois_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::osirixgrpc::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerROIsWithNameResponse)
}

void ViewerControllerROIsWithNameResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ViewerControllerROIsWithNameResponse_viewercontroller_2eproto.base);
  status_ = nullptr;
}

ViewerControllerROIsWithNameResponse::~ViewerControllerROIsWithNameResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerROIsWithNameResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ViewerControllerROIsWithNameResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void ViewerControllerROIsWithNameResponse::ArenaDtor(void* object) {
  ViewerControllerROIsWithNameResponse* _this = reinterpret_cast< ViewerControllerROIsWithNameResponse* >(object);
  (void)_this;
}
void ViewerControllerROIsWithNameResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ViewerControllerROIsWithNameResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ViewerControllerROIsWithNameResponse& ViewerControllerROIsWithNameResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ViewerControllerROIsWithNameResponse_viewercontroller_2eproto.base);
  return *internal_default_instance();
}


void ViewerControllerROIsWithNameResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerROIsWithNameResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rois_.Clear();
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ViewerControllerROIsWithNameResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .osirixgrpc.ROI rois = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_rois(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ViewerControllerROIsWithNameResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerROIsWithNameResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // repeated .osirixgrpc.ROI rois = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_rois_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_rois(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerROIsWithNameResponse)
  return target;
}

size_t ViewerControllerROIsWithNameResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerROIsWithNameResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .osirixgrpc.ROI rois = 2;
  total_size += 1UL * this->_internal_rois_size();
  for (const auto& msg : this->rois_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ViewerControllerROIsWithNameResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.ViewerControllerROIsWithNameResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ViewerControllerROIsWithNameResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ViewerControllerROIsWithNameResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.ViewerControllerROIsWithNameResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.ViewerControllerROIsWithNameResponse)
    MergeFrom(*source);
  }
}

void ViewerControllerROIsWithNameResponse::MergeFrom(const ViewerControllerROIsWithNameResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerROIsWithNameResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rois_.MergeFrom(from.rois_);
  if (from.has_status()) {
    _internal_mutable_status()->::osirixgrpc::Status::MergeFrom(from._internal_status());
  }
}

void ViewerControllerROIsWithNameResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.ViewerControllerROIsWithNameResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ViewerControllerROIsWithNameResponse::CopyFrom(const ViewerControllerROIsWithNameResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerROIsWithNameResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewerControllerROIsWithNameResponse::IsInitialized() const {
  return true;
}

void ViewerControllerROIsWithNameResponse::InternalSwap(ViewerControllerROIsWithNameResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  rois_.InternalSwap(&other->rois_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ViewerControllerROIsWithNameResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ViewerControllerSelectedROIsResponse::_Internal {
 public:
  static const ::osirixgrpc::Status& status(const ViewerControllerSelectedROIsResponse* msg);
};

const ::osirixgrpc::Status&
ViewerControllerSelectedROIsResponse::_Internal::status(const ViewerControllerSelectedROIsResponse* msg) {
  return *msg->status_;
}
void ViewerControllerSelectedROIsResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
void ViewerControllerSelectedROIsResponse::clear_rois() {
  rois_.Clear();
}
ViewerControllerSelectedROIsResponse::ViewerControllerSelectedROIsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  rois_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerSelectedROIsResponse)
}
ViewerControllerSelectedROIsResponse::ViewerControllerSelectedROIsResponse(const ViewerControllerSelectedROIsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      rois_(from.rois_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::osirixgrpc::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerSelectedROIsResponse)
}

void ViewerControllerSelectedROIsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ViewerControllerSelectedROIsResponse_viewercontroller_2eproto.base);
  status_ = nullptr;
}

ViewerControllerSelectedROIsResponse::~ViewerControllerSelectedROIsResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerSelectedROIsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ViewerControllerSelectedROIsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void ViewerControllerSelectedROIsResponse::ArenaDtor(void* object) {
  ViewerControllerSelectedROIsResponse* _this = reinterpret_cast< ViewerControllerSelectedROIsResponse* >(object);
  (void)_this;
}
void ViewerControllerSelectedROIsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ViewerControllerSelectedROIsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ViewerControllerSelectedROIsResponse& ViewerControllerSelectedROIsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ViewerControllerSelectedROIsResponse_viewercontroller_2eproto.base);
  return *internal_default_instance();
}


void ViewerControllerSelectedROIsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerSelectedROIsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rois_.Clear();
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ViewerControllerSelectedROIsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .osirixgrpc.ROI rois = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_rois(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ViewerControllerSelectedROIsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerSelectedROIsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // repeated .osirixgrpc.ROI rois = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_rois_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_rois(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerSelectedROIsResponse)
  return target;
}

size_t ViewerControllerSelectedROIsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerSelectedROIsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .osirixgrpc.ROI rois = 2;
  total_size += 1UL * this->_internal_rois_size();
  for (const auto& msg : this->rois_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ViewerControllerSelectedROIsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.ViewerControllerSelectedROIsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ViewerControllerSelectedROIsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ViewerControllerSelectedROIsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.ViewerControllerSelectedROIsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.ViewerControllerSelectedROIsResponse)
    MergeFrom(*source);
  }
}

void ViewerControllerSelectedROIsResponse::MergeFrom(const ViewerControllerSelectedROIsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerSelectedROIsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rois_.MergeFrom(from.rois_);
  if (from.has_status()) {
    _internal_mutable_status()->::osirixgrpc::Status::MergeFrom(from._internal_status());
  }
}

void ViewerControllerSelectedROIsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.ViewerControllerSelectedROIsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ViewerControllerSelectedROIsResponse::CopyFrom(const ViewerControllerSelectedROIsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerSelectedROIsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewerControllerSelectedROIsResponse::IsInitialized() const {
  return true;
}

void ViewerControllerSelectedROIsResponse::InternalSwap(ViewerControllerSelectedROIsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  rois_.InternalSwap(&other->rois_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ViewerControllerSelectedROIsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ViewerControllerIsDataVolumicResponse::_Internal {
 public:
  static const ::osirixgrpc::Status& status(const ViewerControllerIsDataVolumicResponse* msg);
};

const ::osirixgrpc::Status&
ViewerControllerIsDataVolumicResponse::_Internal::status(const ViewerControllerIsDataVolumicResponse* msg) {
  return *msg->status_;
}
void ViewerControllerIsDataVolumicResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
ViewerControllerIsDataVolumicResponse::ViewerControllerIsDataVolumicResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerIsDataVolumicResponse)
}
ViewerControllerIsDataVolumicResponse::ViewerControllerIsDataVolumicResponse(const ViewerControllerIsDataVolumicResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::osirixgrpc::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  is_volumic_ = from.is_volumic_;
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerIsDataVolumicResponse)
}

void ViewerControllerIsDataVolumicResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ViewerControllerIsDataVolumicResponse_viewercontroller_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&is_volumic_) -
      reinterpret_cast<char*>(&status_)) + sizeof(is_volumic_));
}

ViewerControllerIsDataVolumicResponse::~ViewerControllerIsDataVolumicResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerIsDataVolumicResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ViewerControllerIsDataVolumicResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void ViewerControllerIsDataVolumicResponse::ArenaDtor(void* object) {
  ViewerControllerIsDataVolumicResponse* _this = reinterpret_cast< ViewerControllerIsDataVolumicResponse* >(object);
  (void)_this;
}
void ViewerControllerIsDataVolumicResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ViewerControllerIsDataVolumicResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ViewerControllerIsDataVolumicResponse& ViewerControllerIsDataVolumicResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ViewerControllerIsDataVolumicResponse_viewercontroller_2eproto.base);
  return *internal_default_instance();
}


void ViewerControllerIsDataVolumicResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerIsDataVolumicResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  is_volumic_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ViewerControllerIsDataVolumicResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool is_volumic = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          is_volumic_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ViewerControllerIsDataVolumicResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerIsDataVolumicResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // bool is_volumic = 2;
  if (this->is_volumic() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_is_volumic(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerIsDataVolumicResponse)
  return target;
}

size_t ViewerControllerIsDataVolumicResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerIsDataVolumicResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // bool is_volumic = 2;
  if (this->is_volumic() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ViewerControllerIsDataVolumicResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.ViewerControllerIsDataVolumicResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ViewerControllerIsDataVolumicResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ViewerControllerIsDataVolumicResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.ViewerControllerIsDataVolumicResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.ViewerControllerIsDataVolumicResponse)
    MergeFrom(*source);
  }
}

void ViewerControllerIsDataVolumicResponse::MergeFrom(const ViewerControllerIsDataVolumicResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerIsDataVolumicResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::osirixgrpc::Status::MergeFrom(from._internal_status());
  }
  if (from.is_volumic() != 0) {
    _internal_set_is_volumic(from._internal_is_volumic());
  }
}

void ViewerControllerIsDataVolumicResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.ViewerControllerIsDataVolumicResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ViewerControllerIsDataVolumicResponse::CopyFrom(const ViewerControllerIsDataVolumicResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerIsDataVolumicResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewerControllerIsDataVolumicResponse::IsInitialized() const {
  return true;
}

void ViewerControllerIsDataVolumicResponse::InternalSwap(ViewerControllerIsDataVolumicResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ViewerControllerIsDataVolumicResponse, is_volumic_)
      + sizeof(ViewerControllerIsDataVolumicResponse::is_volumic_)
      - PROTOBUF_FIELD_OFFSET(ViewerControllerIsDataVolumicResponse, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ViewerControllerIsDataVolumicResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ViewerControllerBlendingControllerResponse::_Internal {
 public:
  static const ::osirixgrpc::Status& status(const ViewerControllerBlendingControllerResponse* msg);
  static const ::osirixgrpc::ViewerController& blending_viewer(const ViewerControllerBlendingControllerResponse* msg);
};

const ::osirixgrpc::Status&
ViewerControllerBlendingControllerResponse::_Internal::status(const ViewerControllerBlendingControllerResponse* msg) {
  return *msg->status_;
}
const ::osirixgrpc::ViewerController&
ViewerControllerBlendingControllerResponse::_Internal::blending_viewer(const ViewerControllerBlendingControllerResponse* msg) {
  return *msg->blending_viewer_;
}
void ViewerControllerBlendingControllerResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
void ViewerControllerBlendingControllerResponse::clear_blending_viewer() {
  if (GetArena() == nullptr && blending_viewer_ != nullptr) {
    delete blending_viewer_;
  }
  blending_viewer_ = nullptr;
}
ViewerControllerBlendingControllerResponse::ViewerControllerBlendingControllerResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerBlendingControllerResponse)
}
ViewerControllerBlendingControllerResponse::ViewerControllerBlendingControllerResponse(const ViewerControllerBlendingControllerResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::osirixgrpc::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  if (from._internal_has_blending_viewer()) {
    blending_viewer_ = new ::osirixgrpc::ViewerController(*from.blending_viewer_);
  } else {
    blending_viewer_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerBlendingControllerResponse)
}

void ViewerControllerBlendingControllerResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ViewerControllerBlendingControllerResponse_viewercontroller_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&blending_viewer_) -
      reinterpret_cast<char*>(&status_)) + sizeof(blending_viewer_));
}

ViewerControllerBlendingControllerResponse::~ViewerControllerBlendingControllerResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerBlendingControllerResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ViewerControllerBlendingControllerResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete blending_viewer_;
}

void ViewerControllerBlendingControllerResponse::ArenaDtor(void* object) {
  ViewerControllerBlendingControllerResponse* _this = reinterpret_cast< ViewerControllerBlendingControllerResponse* >(object);
  (void)_this;
}
void ViewerControllerBlendingControllerResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ViewerControllerBlendingControllerResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ViewerControllerBlendingControllerResponse& ViewerControllerBlendingControllerResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ViewerControllerBlendingControllerResponse_viewercontroller_2eproto.base);
  return *internal_default_instance();
}


void ViewerControllerBlendingControllerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerBlendingControllerResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  if (GetArena() == nullptr && blending_viewer_ != nullptr) {
    delete blending_viewer_;
  }
  blending_viewer_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ViewerControllerBlendingControllerResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .osirixgrpc.ViewerController blending_viewer = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_blending_viewer(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ViewerControllerBlendingControllerResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerBlendingControllerResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // .osirixgrpc.ViewerController blending_viewer = 2;
  if (this->has_blending_viewer()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::blending_viewer(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerBlendingControllerResponse)
  return target;
}

size_t ViewerControllerBlendingControllerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerBlendingControllerResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .osirixgrpc.ViewerController blending_viewer = 2;
  if (this->has_blending_viewer()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *blending_viewer_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ViewerControllerBlendingControllerResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.ViewerControllerBlendingControllerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ViewerControllerBlendingControllerResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ViewerControllerBlendingControllerResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.ViewerControllerBlendingControllerResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.ViewerControllerBlendingControllerResponse)
    MergeFrom(*source);
  }
}

void ViewerControllerBlendingControllerResponse::MergeFrom(const ViewerControllerBlendingControllerResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerBlendingControllerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::osirixgrpc::Status::MergeFrom(from._internal_status());
  }
  if (from.has_blending_viewer()) {
    _internal_mutable_blending_viewer()->::osirixgrpc::ViewerController::MergeFrom(from._internal_blending_viewer());
  }
}

void ViewerControllerBlendingControllerResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.ViewerControllerBlendingControllerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ViewerControllerBlendingControllerResponse::CopyFrom(const ViewerControllerBlendingControllerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerBlendingControllerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewerControllerBlendingControllerResponse::IsInitialized() const {
  return true;
}

void ViewerControllerBlendingControllerResponse::InternalSwap(ViewerControllerBlendingControllerResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ViewerControllerBlendingControllerResponse, blending_viewer_)
      + sizeof(ViewerControllerBlendingControllerResponse::blending_viewer_)
      - PROTOBUF_FIELD_OFFSET(ViewerControllerBlendingControllerResponse, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ViewerControllerBlendingControllerResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ViewerControllerVRControllersResponse::_Internal {
 public:
  static const ::osirixgrpc::Status& status(const ViewerControllerVRControllersResponse* msg);
};

const ::osirixgrpc::Status&
ViewerControllerVRControllersResponse::_Internal::status(const ViewerControllerVRControllersResponse* msg) {
  return *msg->status_;
}
void ViewerControllerVRControllersResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
void ViewerControllerVRControllersResponse::clear_vr_controllers() {
  vr_controllers_.Clear();
}
ViewerControllerVRControllersResponse::ViewerControllerVRControllersResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  vr_controllers_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerVRControllersResponse)
}
ViewerControllerVRControllersResponse::ViewerControllerVRControllersResponse(const ViewerControllerVRControllersResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      vr_controllers_(from.vr_controllers_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::osirixgrpc::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerVRControllersResponse)
}

void ViewerControllerVRControllersResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ViewerControllerVRControllersResponse_viewercontroller_2eproto.base);
  status_ = nullptr;
}

ViewerControllerVRControllersResponse::~ViewerControllerVRControllersResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerVRControllersResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ViewerControllerVRControllersResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void ViewerControllerVRControllersResponse::ArenaDtor(void* object) {
  ViewerControllerVRControllersResponse* _this = reinterpret_cast< ViewerControllerVRControllersResponse* >(object);
  (void)_this;
}
void ViewerControllerVRControllersResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ViewerControllerVRControllersResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ViewerControllerVRControllersResponse& ViewerControllerVRControllersResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ViewerControllerVRControllersResponse_viewercontroller_2eproto.base);
  return *internal_default_instance();
}


void ViewerControllerVRControllersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerVRControllersResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vr_controllers_.Clear();
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ViewerControllerVRControllersResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .osirixgrpc.VRController vr_controllers = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_vr_controllers(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ViewerControllerVRControllersResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerVRControllersResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // repeated .osirixgrpc.VRController vr_controllers = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_vr_controllers_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_vr_controllers(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerVRControllersResponse)
  return target;
}

size_t ViewerControllerVRControllersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerVRControllersResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .osirixgrpc.VRController vr_controllers = 2;
  total_size += 1UL * this->_internal_vr_controllers_size();
  for (const auto& msg : this->vr_controllers_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ViewerControllerVRControllersResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.ViewerControllerVRControllersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ViewerControllerVRControllersResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ViewerControllerVRControllersResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.ViewerControllerVRControllersResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.ViewerControllerVRControllersResponse)
    MergeFrom(*source);
  }
}

void ViewerControllerVRControllersResponse::MergeFrom(const ViewerControllerVRControllersResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerVRControllersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  vr_controllers_.MergeFrom(from.vr_controllers_);
  if (from.has_status()) {
    _internal_mutable_status()->::osirixgrpc::Status::MergeFrom(from._internal_status());
  }
}

void ViewerControllerVRControllersResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.ViewerControllerVRControllersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ViewerControllerVRControllersResponse::CopyFrom(const ViewerControllerVRControllersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerVRControllersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewerControllerVRControllersResponse::IsInitialized() const {
  return true;
}

void ViewerControllerVRControllersResponse::InternalSwap(ViewerControllerVRControllersResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  vr_controllers_.InternalSwap(&other->vr_controllers_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ViewerControllerVRControllersResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ViewerControllerTitleResponse::_Internal {
 public:
  static const ::osirixgrpc::Status& status(const ViewerControllerTitleResponse* msg);
};

const ::osirixgrpc::Status&
ViewerControllerTitleResponse::_Internal::status(const ViewerControllerTitleResponse* msg) {
  return *msg->status_;
}
void ViewerControllerTitleResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
ViewerControllerTitleResponse::ViewerControllerTitleResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerTitleResponse)
}
ViewerControllerTitleResponse::ViewerControllerTitleResponse(const ViewerControllerTitleResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  title_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_title().empty()) {
    title_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_title(), 
      GetArena());
  }
  if (from._internal_has_status()) {
    status_ = new ::osirixgrpc::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerTitleResponse)
}

void ViewerControllerTitleResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ViewerControllerTitleResponse_viewercontroller_2eproto.base);
  title_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_ = nullptr;
}

ViewerControllerTitleResponse::~ViewerControllerTitleResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerTitleResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ViewerControllerTitleResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  title_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete status_;
}

void ViewerControllerTitleResponse::ArenaDtor(void* object) {
  ViewerControllerTitleResponse* _this = reinterpret_cast< ViewerControllerTitleResponse* >(object);
  (void)_this;
}
void ViewerControllerTitleResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ViewerControllerTitleResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ViewerControllerTitleResponse& ViewerControllerTitleResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ViewerControllerTitleResponse_viewercontroller_2eproto.base);
  return *internal_default_instance();
}


void ViewerControllerTitleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerTitleResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  title_.ClearToEmpty();
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ViewerControllerTitleResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string title = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_title();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "osirixgrpc.ViewerControllerTitleResponse.title"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ViewerControllerTitleResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerTitleResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_title().data(), static_cast<int>(this->_internal_title().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "osirixgrpc.ViewerControllerTitleResponse.title");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_title(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerTitleResponse)
  return target;
}

size_t ViewerControllerTitleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerTitleResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string title = 2;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_title());
  }

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ViewerControllerTitleResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.ViewerControllerTitleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ViewerControllerTitleResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ViewerControllerTitleResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.ViewerControllerTitleResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.ViewerControllerTitleResponse)
    MergeFrom(*source);
  }
}

void ViewerControllerTitleResponse::MergeFrom(const ViewerControllerTitleResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerTitleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.title().size() > 0) {
    _internal_set_title(from._internal_title());
  }
  if (from.has_status()) {
    _internal_mutable_status()->::osirixgrpc::Status::MergeFrom(from._internal_status());
  }
}

void ViewerControllerTitleResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.ViewerControllerTitleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ViewerControllerTitleResponse::CopyFrom(const ViewerControllerTitleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerTitleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewerControllerTitleResponse::IsInitialized() const {
  return true;
}

void ViewerControllerTitleResponse::InternalSwap(ViewerControllerTitleResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  title_.Swap(&other->title_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ViewerControllerTitleResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ViewerControllerModalityResponse::_Internal {
 public:
  static const ::osirixgrpc::Status& status(const ViewerControllerModalityResponse* msg);
};

const ::osirixgrpc::Status&
ViewerControllerModalityResponse::_Internal::status(const ViewerControllerModalityResponse* msg) {
  return *msg->status_;
}
void ViewerControllerModalityResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
ViewerControllerModalityResponse::ViewerControllerModalityResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerModalityResponse)
}
ViewerControllerModalityResponse::ViewerControllerModalityResponse(const ViewerControllerModalityResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  modality_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_modality().empty()) {
    modality_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_modality(), 
      GetArena());
  }
  if (from._internal_has_status()) {
    status_ = new ::osirixgrpc::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerModalityResponse)
}

void ViewerControllerModalityResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ViewerControllerModalityResponse_viewercontroller_2eproto.base);
  modality_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_ = nullptr;
}

ViewerControllerModalityResponse::~ViewerControllerModalityResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerModalityResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ViewerControllerModalityResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  modality_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete status_;
}

void ViewerControllerModalityResponse::ArenaDtor(void* object) {
  ViewerControllerModalityResponse* _this = reinterpret_cast< ViewerControllerModalityResponse* >(object);
  (void)_this;
}
void ViewerControllerModalityResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ViewerControllerModalityResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ViewerControllerModalityResponse& ViewerControllerModalityResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ViewerControllerModalityResponse_viewercontroller_2eproto.base);
  return *internal_default_instance();
}


void ViewerControllerModalityResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerModalityResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  modality_.ClearToEmpty();
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ViewerControllerModalityResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string modality = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_modality();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "osirixgrpc.ViewerControllerModalityResponse.modality"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ViewerControllerModalityResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerModalityResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // string modality = 2;
  if (this->modality().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_modality().data(), static_cast<int>(this->_internal_modality().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "osirixgrpc.ViewerControllerModalityResponse.modality");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_modality(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerModalityResponse)
  return target;
}

size_t ViewerControllerModalityResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerModalityResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string modality = 2;
  if (this->modality().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_modality());
  }

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ViewerControllerModalityResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.ViewerControllerModalityResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ViewerControllerModalityResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ViewerControllerModalityResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.ViewerControllerModalityResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.ViewerControllerModalityResponse)
    MergeFrom(*source);
  }
}

void ViewerControllerModalityResponse::MergeFrom(const ViewerControllerModalityResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerModalityResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.modality().size() > 0) {
    _internal_set_modality(from._internal_modality());
  }
  if (from.has_status()) {
    _internal_mutable_status()->::osirixgrpc::Status::MergeFrom(from._internal_status());
  }
}

void ViewerControllerModalityResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.ViewerControllerModalityResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ViewerControllerModalityResponse::CopyFrom(const ViewerControllerModalityResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerModalityResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewerControllerModalityResponse::IsInitialized() const {
  return true;
}

void ViewerControllerModalityResponse::InternalSwap(ViewerControllerModalityResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  modality_.Swap(&other->modality_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ViewerControllerModalityResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ViewerControllerMovieIdxResponse::_Internal {
 public:
  static const ::osirixgrpc::Status& status(const ViewerControllerMovieIdxResponse* msg);
};

const ::osirixgrpc::Status&
ViewerControllerMovieIdxResponse::_Internal::status(const ViewerControllerMovieIdxResponse* msg) {
  return *msg->status_;
}
void ViewerControllerMovieIdxResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
ViewerControllerMovieIdxResponse::ViewerControllerMovieIdxResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerMovieIdxResponse)
}
ViewerControllerMovieIdxResponse::ViewerControllerMovieIdxResponse(const ViewerControllerMovieIdxResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::osirixgrpc::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  movie_idx_ = from.movie_idx_;
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerMovieIdxResponse)
}

void ViewerControllerMovieIdxResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ViewerControllerMovieIdxResponse_viewercontroller_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&movie_idx_) -
      reinterpret_cast<char*>(&status_)) + sizeof(movie_idx_));
}

ViewerControllerMovieIdxResponse::~ViewerControllerMovieIdxResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerMovieIdxResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ViewerControllerMovieIdxResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void ViewerControllerMovieIdxResponse::ArenaDtor(void* object) {
  ViewerControllerMovieIdxResponse* _this = reinterpret_cast< ViewerControllerMovieIdxResponse* >(object);
  (void)_this;
}
void ViewerControllerMovieIdxResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ViewerControllerMovieIdxResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ViewerControllerMovieIdxResponse& ViewerControllerMovieIdxResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ViewerControllerMovieIdxResponse_viewercontroller_2eproto.base);
  return *internal_default_instance();
}


void ViewerControllerMovieIdxResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerMovieIdxResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  movie_idx_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ViewerControllerMovieIdxResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 movie_idx = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          movie_idx_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ViewerControllerMovieIdxResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerMovieIdxResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // int32 movie_idx = 2;
  if (this->movie_idx() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_movie_idx(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerMovieIdxResponse)
  return target;
}

size_t ViewerControllerMovieIdxResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerMovieIdxResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // int32 movie_idx = 2;
  if (this->movie_idx() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_movie_idx());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ViewerControllerMovieIdxResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.ViewerControllerMovieIdxResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ViewerControllerMovieIdxResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ViewerControllerMovieIdxResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.ViewerControllerMovieIdxResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.ViewerControllerMovieIdxResponse)
    MergeFrom(*source);
  }
}

void ViewerControllerMovieIdxResponse::MergeFrom(const ViewerControllerMovieIdxResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerMovieIdxResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::osirixgrpc::Status::MergeFrom(from._internal_status());
  }
  if (from.movie_idx() != 0) {
    _internal_set_movie_idx(from._internal_movie_idx());
  }
}

void ViewerControllerMovieIdxResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.ViewerControllerMovieIdxResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ViewerControllerMovieIdxResponse::CopyFrom(const ViewerControllerMovieIdxResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerMovieIdxResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewerControllerMovieIdxResponse::IsInitialized() const {
  return true;
}

void ViewerControllerMovieIdxResponse::InternalSwap(ViewerControllerMovieIdxResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ViewerControllerMovieIdxResponse, movie_idx_)
      + sizeof(ViewerControllerMovieIdxResponse::movie_idx_)
      - PROTOBUF_FIELD_OFFSET(ViewerControllerMovieIdxResponse, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ViewerControllerMovieIdxResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ViewerControllerMaxMovieIdxResponse::_Internal {
 public:
  static const ::osirixgrpc::Status& status(const ViewerControllerMaxMovieIdxResponse* msg);
};

const ::osirixgrpc::Status&
ViewerControllerMaxMovieIdxResponse::_Internal::status(const ViewerControllerMaxMovieIdxResponse* msg) {
  return *msg->status_;
}
void ViewerControllerMaxMovieIdxResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
ViewerControllerMaxMovieIdxResponse::ViewerControllerMaxMovieIdxResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerMaxMovieIdxResponse)
}
ViewerControllerMaxMovieIdxResponse::ViewerControllerMaxMovieIdxResponse(const ViewerControllerMaxMovieIdxResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::osirixgrpc::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  max_movie_idx_ = from.max_movie_idx_;
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerMaxMovieIdxResponse)
}

void ViewerControllerMaxMovieIdxResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ViewerControllerMaxMovieIdxResponse_viewercontroller_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&max_movie_idx_) -
      reinterpret_cast<char*>(&status_)) + sizeof(max_movie_idx_));
}

ViewerControllerMaxMovieIdxResponse::~ViewerControllerMaxMovieIdxResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerMaxMovieIdxResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ViewerControllerMaxMovieIdxResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void ViewerControllerMaxMovieIdxResponse::ArenaDtor(void* object) {
  ViewerControllerMaxMovieIdxResponse* _this = reinterpret_cast< ViewerControllerMaxMovieIdxResponse* >(object);
  (void)_this;
}
void ViewerControllerMaxMovieIdxResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ViewerControllerMaxMovieIdxResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ViewerControllerMaxMovieIdxResponse& ViewerControllerMaxMovieIdxResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ViewerControllerMaxMovieIdxResponse_viewercontroller_2eproto.base);
  return *internal_default_instance();
}


void ViewerControllerMaxMovieIdxResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerMaxMovieIdxResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  max_movie_idx_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ViewerControllerMaxMovieIdxResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 max_movie_idx = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          max_movie_idx_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ViewerControllerMaxMovieIdxResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerMaxMovieIdxResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // int32 max_movie_idx = 2;
  if (this->max_movie_idx() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_max_movie_idx(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerMaxMovieIdxResponse)
  return target;
}

size_t ViewerControllerMaxMovieIdxResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerMaxMovieIdxResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // int32 max_movie_idx = 2;
  if (this->max_movie_idx() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_max_movie_idx());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ViewerControllerMaxMovieIdxResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.ViewerControllerMaxMovieIdxResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ViewerControllerMaxMovieIdxResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ViewerControllerMaxMovieIdxResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.ViewerControllerMaxMovieIdxResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.ViewerControllerMaxMovieIdxResponse)
    MergeFrom(*source);
  }
}

void ViewerControllerMaxMovieIdxResponse::MergeFrom(const ViewerControllerMaxMovieIdxResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerMaxMovieIdxResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::osirixgrpc::Status::MergeFrom(from._internal_status());
  }
  if (from.max_movie_idx() != 0) {
    _internal_set_max_movie_idx(from._internal_max_movie_idx());
  }
}

void ViewerControllerMaxMovieIdxResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.ViewerControllerMaxMovieIdxResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ViewerControllerMaxMovieIdxResponse::CopyFrom(const ViewerControllerMaxMovieIdxResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerMaxMovieIdxResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewerControllerMaxMovieIdxResponse::IsInitialized() const {
  return true;
}

void ViewerControllerMaxMovieIdxResponse::InternalSwap(ViewerControllerMaxMovieIdxResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ViewerControllerMaxMovieIdxResponse, max_movie_idx_)
      + sizeof(ViewerControllerMaxMovieIdxResponse::max_movie_idx_)
      - PROTOBUF_FIELD_OFFSET(ViewerControllerMaxMovieIdxResponse, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ViewerControllerMaxMovieIdxResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ViewerControllerIdxResponse::_Internal {
 public:
  static const ::osirixgrpc::Status& status(const ViewerControllerIdxResponse* msg);
};

const ::osirixgrpc::Status&
ViewerControllerIdxResponse::_Internal::status(const ViewerControllerIdxResponse* msg) {
  return *msg->status_;
}
void ViewerControllerIdxResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
ViewerControllerIdxResponse::ViewerControllerIdxResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerIdxResponse)
}
ViewerControllerIdxResponse::ViewerControllerIdxResponse(const ViewerControllerIdxResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::osirixgrpc::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  idx_ = from.idx_;
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerIdxResponse)
}

void ViewerControllerIdxResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ViewerControllerIdxResponse_viewercontroller_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&idx_) -
      reinterpret_cast<char*>(&status_)) + sizeof(idx_));
}

ViewerControllerIdxResponse::~ViewerControllerIdxResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerIdxResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ViewerControllerIdxResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void ViewerControllerIdxResponse::ArenaDtor(void* object) {
  ViewerControllerIdxResponse* _this = reinterpret_cast< ViewerControllerIdxResponse* >(object);
  (void)_this;
}
void ViewerControllerIdxResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ViewerControllerIdxResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ViewerControllerIdxResponse& ViewerControllerIdxResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ViewerControllerIdxResponse_viewercontroller_2eproto.base);
  return *internal_default_instance();
}


void ViewerControllerIdxResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerIdxResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  idx_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ViewerControllerIdxResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 idx = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          idx_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ViewerControllerIdxResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerIdxResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // int32 idx = 2;
  if (this->idx() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_idx(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerIdxResponse)
  return target;
}

size_t ViewerControllerIdxResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerIdxResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // int32 idx = 2;
  if (this->idx() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_idx());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ViewerControllerIdxResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.ViewerControllerIdxResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ViewerControllerIdxResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ViewerControllerIdxResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.ViewerControllerIdxResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.ViewerControllerIdxResponse)
    MergeFrom(*source);
  }
}

void ViewerControllerIdxResponse::MergeFrom(const ViewerControllerIdxResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerIdxResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::osirixgrpc::Status::MergeFrom(from._internal_status());
  }
  if (from.idx() != 0) {
    _internal_set_idx(from._internal_idx());
  }
}

void ViewerControllerIdxResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.ViewerControllerIdxResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ViewerControllerIdxResponse::CopyFrom(const ViewerControllerIdxResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerIdxResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewerControllerIdxResponse::IsInitialized() const {
  return true;
}

void ViewerControllerIdxResponse::InternalSwap(ViewerControllerIdxResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ViewerControllerIdxResponse, idx_)
      + sizeof(ViewerControllerIdxResponse::idx_)
      - PROTOBUF_FIELD_OFFSET(ViewerControllerIdxResponse, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ViewerControllerIdxResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ViewerControllerWLWWResponse::_Internal {
 public:
  static const ::osirixgrpc::Status& status(const ViewerControllerWLWWResponse* msg);
};

const ::osirixgrpc::Status&
ViewerControllerWLWWResponse::_Internal::status(const ViewerControllerWLWWResponse* msg) {
  return *msg->status_;
}
void ViewerControllerWLWWResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
ViewerControllerWLWWResponse::ViewerControllerWLWWResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerWLWWResponse)
}
ViewerControllerWLWWResponse::ViewerControllerWLWWResponse(const ViewerControllerWLWWResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::osirixgrpc::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  ::memcpy(&wl_, &from.wl_,
    static_cast<size_t>(reinterpret_cast<char*>(&ww_) -
    reinterpret_cast<char*>(&wl_)) + sizeof(ww_));
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerWLWWResponse)
}

void ViewerControllerWLWWResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ViewerControllerWLWWResponse_viewercontroller_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&ww_) -
      reinterpret_cast<char*>(&status_)) + sizeof(ww_));
}

ViewerControllerWLWWResponse::~ViewerControllerWLWWResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerWLWWResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ViewerControllerWLWWResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void ViewerControllerWLWWResponse::ArenaDtor(void* object) {
  ViewerControllerWLWWResponse* _this = reinterpret_cast< ViewerControllerWLWWResponse* >(object);
  (void)_this;
}
void ViewerControllerWLWWResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ViewerControllerWLWWResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ViewerControllerWLWWResponse& ViewerControllerWLWWResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ViewerControllerWLWWResponse_viewercontroller_2eproto.base);
  return *internal_default_instance();
}


void ViewerControllerWLWWResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerWLWWResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  ::memset(&wl_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ww_) -
      reinterpret_cast<char*>(&wl_)) + sizeof(ww_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ViewerControllerWLWWResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float wl = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          wl_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float ww = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29)) {
          ww_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ViewerControllerWLWWResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerWLWWResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // float wl = 2;
  if (!(this->wl() <= 0 && this->wl() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_wl(), target);
  }

  // float ww = 3;
  if (!(this->ww() <= 0 && this->ww() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3, this->_internal_ww(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerWLWWResponse)
  return target;
}

size_t ViewerControllerWLWWResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerWLWWResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // float wl = 2;
  if (!(this->wl() <= 0 && this->wl() >= 0)) {
    total_size += 1 + 4;
  }

  // float ww = 3;
  if (!(this->ww() <= 0 && this->ww() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ViewerControllerWLWWResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.ViewerControllerWLWWResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ViewerControllerWLWWResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ViewerControllerWLWWResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.ViewerControllerWLWWResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.ViewerControllerWLWWResponse)
    MergeFrom(*source);
  }
}

void ViewerControllerWLWWResponse::MergeFrom(const ViewerControllerWLWWResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerWLWWResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::osirixgrpc::Status::MergeFrom(from._internal_status());
  }
  if (!(from.wl() <= 0 && from.wl() >= 0)) {
    _internal_set_wl(from._internal_wl());
  }
  if (!(from.ww() <= 0 && from.ww() >= 0)) {
    _internal_set_ww(from._internal_ww());
  }
}

void ViewerControllerWLWWResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.ViewerControllerWLWWResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ViewerControllerWLWWResponse::CopyFrom(const ViewerControllerWLWWResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerWLWWResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewerControllerWLWWResponse::IsInitialized() const {
  return true;
}

void ViewerControllerWLWWResponse::InternalSwap(ViewerControllerWLWWResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ViewerControllerWLWWResponse, ww_)
      + sizeof(ViewerControllerWLWWResponse::ww_)
      - PROTOBUF_FIELD_OFFSET(ViewerControllerWLWWResponse, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ViewerControllerWLWWResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ViewerControllerOpenVRViewerForModeResponse::_Internal {
 public:
  static const ::osirixgrpc::Status& status(const ViewerControllerOpenVRViewerForModeResponse* msg);
  static const ::osirixgrpc::VRController& vr_controller(const ViewerControllerOpenVRViewerForModeResponse* msg);
};

const ::osirixgrpc::Status&
ViewerControllerOpenVRViewerForModeResponse::_Internal::status(const ViewerControllerOpenVRViewerForModeResponse* msg) {
  return *msg->status_;
}
const ::osirixgrpc::VRController&
ViewerControllerOpenVRViewerForModeResponse::_Internal::vr_controller(const ViewerControllerOpenVRViewerForModeResponse* msg) {
  return *msg->vr_controller_;
}
void ViewerControllerOpenVRViewerForModeResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
void ViewerControllerOpenVRViewerForModeResponse::clear_vr_controller() {
  if (GetArena() == nullptr && vr_controller_ != nullptr) {
    delete vr_controller_;
  }
  vr_controller_ = nullptr;
}
ViewerControllerOpenVRViewerForModeResponse::ViewerControllerOpenVRViewerForModeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerOpenVRViewerForModeResponse)
}
ViewerControllerOpenVRViewerForModeResponse::ViewerControllerOpenVRViewerForModeResponse(const ViewerControllerOpenVRViewerForModeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::osirixgrpc::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  if (from._internal_has_vr_controller()) {
    vr_controller_ = new ::osirixgrpc::VRController(*from.vr_controller_);
  } else {
    vr_controller_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerOpenVRViewerForModeResponse)
}

void ViewerControllerOpenVRViewerForModeResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ViewerControllerOpenVRViewerForModeResponse_viewercontroller_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&vr_controller_) -
      reinterpret_cast<char*>(&status_)) + sizeof(vr_controller_));
}

ViewerControllerOpenVRViewerForModeResponse::~ViewerControllerOpenVRViewerForModeResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerOpenVRViewerForModeResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ViewerControllerOpenVRViewerForModeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete vr_controller_;
}

void ViewerControllerOpenVRViewerForModeResponse::ArenaDtor(void* object) {
  ViewerControllerOpenVRViewerForModeResponse* _this = reinterpret_cast< ViewerControllerOpenVRViewerForModeResponse* >(object);
  (void)_this;
}
void ViewerControllerOpenVRViewerForModeResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ViewerControllerOpenVRViewerForModeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ViewerControllerOpenVRViewerForModeResponse& ViewerControllerOpenVRViewerForModeResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ViewerControllerOpenVRViewerForModeResponse_viewercontroller_2eproto.base);
  return *internal_default_instance();
}


void ViewerControllerOpenVRViewerForModeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerOpenVRViewerForModeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  if (GetArena() == nullptr && vr_controller_ != nullptr) {
    delete vr_controller_;
  }
  vr_controller_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ViewerControllerOpenVRViewerForModeResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .osirixgrpc.VRController vr_controller = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_vr_controller(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ViewerControllerOpenVRViewerForModeResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerOpenVRViewerForModeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // .osirixgrpc.VRController vr_controller = 2;
  if (this->has_vr_controller()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::vr_controller(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerOpenVRViewerForModeResponse)
  return target;
}

size_t ViewerControllerOpenVRViewerForModeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerOpenVRViewerForModeResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .osirixgrpc.VRController vr_controller = 2;
  if (this->has_vr_controller()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *vr_controller_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ViewerControllerOpenVRViewerForModeResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.ViewerControllerOpenVRViewerForModeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ViewerControllerOpenVRViewerForModeResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ViewerControllerOpenVRViewerForModeResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.ViewerControllerOpenVRViewerForModeResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.ViewerControllerOpenVRViewerForModeResponse)
    MergeFrom(*source);
  }
}

void ViewerControllerOpenVRViewerForModeResponse::MergeFrom(const ViewerControllerOpenVRViewerForModeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerOpenVRViewerForModeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::osirixgrpc::Status::MergeFrom(from._internal_status());
  }
  if (from.has_vr_controller()) {
    _internal_mutable_vr_controller()->::osirixgrpc::VRController::MergeFrom(from._internal_vr_controller());
  }
}

void ViewerControllerOpenVRViewerForModeResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.ViewerControllerOpenVRViewerForModeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ViewerControllerOpenVRViewerForModeResponse::CopyFrom(const ViewerControllerOpenVRViewerForModeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerOpenVRViewerForModeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewerControllerOpenVRViewerForModeResponse::IsInitialized() const {
  return true;
}

void ViewerControllerOpenVRViewerForModeResponse::InternalSwap(ViewerControllerOpenVRViewerForModeResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ViewerControllerOpenVRViewerForModeResponse, vr_controller_)
      + sizeof(ViewerControllerOpenVRViewerForModeResponse::vr_controller_)
      - PROTOBUF_FIELD_OFFSET(ViewerControllerOpenVRViewerForModeResponse, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ViewerControllerOpenVRViewerForModeResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ViewerControllerPixListRequest::_Internal {
 public:
  static const ::osirixgrpc::ViewerController& viewer_controller(const ViewerControllerPixListRequest* msg);
};

const ::osirixgrpc::ViewerController&
ViewerControllerPixListRequest::_Internal::viewer_controller(const ViewerControllerPixListRequest* msg) {
  return *msg->viewer_controller_;
}
void ViewerControllerPixListRequest::clear_viewer_controller() {
  if (GetArena() == nullptr && viewer_controller_ != nullptr) {
    delete viewer_controller_;
  }
  viewer_controller_ = nullptr;
}
ViewerControllerPixListRequest::ViewerControllerPixListRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerPixListRequest)
}
ViewerControllerPixListRequest::ViewerControllerPixListRequest(const ViewerControllerPixListRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_viewer_controller()) {
    viewer_controller_ = new ::osirixgrpc::ViewerController(*from.viewer_controller_);
  } else {
    viewer_controller_ = nullptr;
  }
  movie_idx_ = from.movie_idx_;
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerPixListRequest)
}

void ViewerControllerPixListRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ViewerControllerPixListRequest_viewercontroller_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&viewer_controller_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&movie_idx_) -
      reinterpret_cast<char*>(&viewer_controller_)) + sizeof(movie_idx_));
}

ViewerControllerPixListRequest::~ViewerControllerPixListRequest() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerPixListRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ViewerControllerPixListRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete viewer_controller_;
}

void ViewerControllerPixListRequest::ArenaDtor(void* object) {
  ViewerControllerPixListRequest* _this = reinterpret_cast< ViewerControllerPixListRequest* >(object);
  (void)_this;
}
void ViewerControllerPixListRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ViewerControllerPixListRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ViewerControllerPixListRequest& ViewerControllerPixListRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ViewerControllerPixListRequest_viewercontroller_2eproto.base);
  return *internal_default_instance();
}


void ViewerControllerPixListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerPixListRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && viewer_controller_ != nullptr) {
    delete viewer_controller_;
  }
  viewer_controller_ = nullptr;
  movie_idx_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ViewerControllerPixListRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.ViewerController viewer_controller = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_viewer_controller(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 movie_idx = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          movie_idx_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ViewerControllerPixListRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerPixListRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.ViewerController viewer_controller = 1;
  if (this->has_viewer_controller()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::viewer_controller(this), target, stream);
  }

  // int32 movie_idx = 2;
  if (this->movie_idx() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_movie_idx(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerPixListRequest)
  return target;
}

size_t ViewerControllerPixListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerPixListRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .osirixgrpc.ViewerController viewer_controller = 1;
  if (this->has_viewer_controller()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *viewer_controller_);
  }

  // int32 movie_idx = 2;
  if (this->movie_idx() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_movie_idx());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ViewerControllerPixListRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.ViewerControllerPixListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ViewerControllerPixListRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ViewerControllerPixListRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.ViewerControllerPixListRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.ViewerControllerPixListRequest)
    MergeFrom(*source);
  }
}

void ViewerControllerPixListRequest::MergeFrom(const ViewerControllerPixListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerPixListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_viewer_controller()) {
    _internal_mutable_viewer_controller()->::osirixgrpc::ViewerController::MergeFrom(from._internal_viewer_controller());
  }
  if (from.movie_idx() != 0) {
    _internal_set_movie_idx(from._internal_movie_idx());
  }
}

void ViewerControllerPixListRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.ViewerControllerPixListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ViewerControllerPixListRequest::CopyFrom(const ViewerControllerPixListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerPixListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewerControllerPixListRequest::IsInitialized() const {
  return true;
}

void ViewerControllerPixListRequest::InternalSwap(ViewerControllerPixListRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ViewerControllerPixListRequest, movie_idx_)
      + sizeof(ViewerControllerPixListRequest::movie_idx_)
      - PROTOBUF_FIELD_OFFSET(ViewerControllerPixListRequest, viewer_controller_)>(
          reinterpret_cast<char*>(&viewer_controller_),
          reinterpret_cast<char*>(&other->viewer_controller_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ViewerControllerPixListRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ViewerControllerROIListRequest::_Internal {
 public:
  static const ::osirixgrpc::ViewerController& viewer_controller(const ViewerControllerROIListRequest* msg);
};

const ::osirixgrpc::ViewerController&
ViewerControllerROIListRequest::_Internal::viewer_controller(const ViewerControllerROIListRequest* msg) {
  return *msg->viewer_controller_;
}
void ViewerControllerROIListRequest::clear_viewer_controller() {
  if (GetArena() == nullptr && viewer_controller_ != nullptr) {
    delete viewer_controller_;
  }
  viewer_controller_ = nullptr;
}
ViewerControllerROIListRequest::ViewerControllerROIListRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerROIListRequest)
}
ViewerControllerROIListRequest::ViewerControllerROIListRequest(const ViewerControllerROIListRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_viewer_controller()) {
    viewer_controller_ = new ::osirixgrpc::ViewerController(*from.viewer_controller_);
  } else {
    viewer_controller_ = nullptr;
  }
  movie_idx_ = from.movie_idx_;
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerROIListRequest)
}

void ViewerControllerROIListRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ViewerControllerROIListRequest_viewercontroller_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&viewer_controller_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&movie_idx_) -
      reinterpret_cast<char*>(&viewer_controller_)) + sizeof(movie_idx_));
}

ViewerControllerROIListRequest::~ViewerControllerROIListRequest() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerROIListRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ViewerControllerROIListRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete viewer_controller_;
}

void ViewerControllerROIListRequest::ArenaDtor(void* object) {
  ViewerControllerROIListRequest* _this = reinterpret_cast< ViewerControllerROIListRequest* >(object);
  (void)_this;
}
void ViewerControllerROIListRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ViewerControllerROIListRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ViewerControllerROIListRequest& ViewerControllerROIListRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ViewerControllerROIListRequest_viewercontroller_2eproto.base);
  return *internal_default_instance();
}


void ViewerControllerROIListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerROIListRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && viewer_controller_ != nullptr) {
    delete viewer_controller_;
  }
  viewer_controller_ = nullptr;
  movie_idx_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ViewerControllerROIListRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.ViewerController viewer_controller = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_viewer_controller(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 movie_idx = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          movie_idx_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ViewerControllerROIListRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerROIListRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.ViewerController viewer_controller = 1;
  if (this->has_viewer_controller()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::viewer_controller(this), target, stream);
  }

  // int32 movie_idx = 2;
  if (this->movie_idx() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_movie_idx(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerROIListRequest)
  return target;
}

size_t ViewerControllerROIListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerROIListRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .osirixgrpc.ViewerController viewer_controller = 1;
  if (this->has_viewer_controller()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *viewer_controller_);
  }

  // int32 movie_idx = 2;
  if (this->movie_idx() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_movie_idx());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ViewerControllerROIListRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.ViewerControllerROIListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ViewerControllerROIListRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ViewerControllerROIListRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.ViewerControllerROIListRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.ViewerControllerROIListRequest)
    MergeFrom(*source);
  }
}

void ViewerControllerROIListRequest::MergeFrom(const ViewerControllerROIListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerROIListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_viewer_controller()) {
    _internal_mutable_viewer_controller()->::osirixgrpc::ViewerController::MergeFrom(from._internal_viewer_controller());
  }
  if (from.movie_idx() != 0) {
    _internal_set_movie_idx(from._internal_movie_idx());
  }
}

void ViewerControllerROIListRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.ViewerControllerROIListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ViewerControllerROIListRequest::CopyFrom(const ViewerControllerROIListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerROIListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewerControllerROIListRequest::IsInitialized() const {
  return true;
}

void ViewerControllerROIListRequest::InternalSwap(ViewerControllerROIListRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ViewerControllerROIListRequest, movie_idx_)
      + sizeof(ViewerControllerROIListRequest::movie_idx_)
      - PROTOBUF_FIELD_OFFSET(ViewerControllerROIListRequest, viewer_controller_)>(
          reinterpret_cast<char*>(&viewer_controller_),
          reinterpret_cast<char*>(&other->viewer_controller_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ViewerControllerROIListRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ViewerControllerNewROIRequest_Buffer::_Internal {
 public:
};

ViewerControllerNewROIRequest_Buffer::ViewerControllerNewROIRequest_Buffer(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  buffer_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerNewROIRequest.Buffer)
}
ViewerControllerNewROIRequest_Buffer::ViewerControllerNewROIRequest_Buffer(const ViewerControllerNewROIRequest_Buffer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      buffer_(from.buffer_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&rows_, &from.rows_,
    static_cast<size_t>(reinterpret_cast<char*>(&columns_) -
    reinterpret_cast<char*>(&rows_)) + sizeof(columns_));
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerNewROIRequest.Buffer)
}

void ViewerControllerNewROIRequest_Buffer::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&rows_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&columns_) -
      reinterpret_cast<char*>(&rows_)) + sizeof(columns_));
}

ViewerControllerNewROIRequest_Buffer::~ViewerControllerNewROIRequest_Buffer() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerNewROIRequest.Buffer)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ViewerControllerNewROIRequest_Buffer::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ViewerControllerNewROIRequest_Buffer::ArenaDtor(void* object) {
  ViewerControllerNewROIRequest_Buffer* _this = reinterpret_cast< ViewerControllerNewROIRequest_Buffer* >(object);
  (void)_this;
}
void ViewerControllerNewROIRequest_Buffer::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ViewerControllerNewROIRequest_Buffer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ViewerControllerNewROIRequest_Buffer& ViewerControllerNewROIRequest_Buffer::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ViewerControllerNewROIRequest_Buffer_viewercontroller_2eproto.base);
  return *internal_default_instance();
}


void ViewerControllerNewROIRequest_Buffer::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerNewROIRequest.Buffer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  buffer_.Clear();
  ::memset(&rows_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&columns_) -
      reinterpret_cast<char*>(&rows_)) + sizeof(columns_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ViewerControllerNewROIRequest_Buffer::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated bool buffer = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedBoolParser(_internal_mutable_buffer(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8) {
          _internal_add_buffer(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 rows = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          rows_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 columns = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          columns_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ViewerControllerNewROIRequest_Buffer::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerNewROIRequest.Buffer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bool buffer = 1;
  if (this->_internal_buffer_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_buffer(), target);
  }

  // int32 rows = 2;
  if (this->rows() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_rows(), target);
  }

  // int32 columns = 3;
  if (this->columns() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_columns(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerNewROIRequest.Buffer)
  return target;
}

size_t ViewerControllerNewROIRequest_Buffer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerNewROIRequest.Buffer)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bool buffer = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_buffer_size());
    size_t data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _buffer_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // int32 rows = 2;
  if (this->rows() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_rows());
  }

  // int32 columns = 3;
  if (this->columns() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_columns());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ViewerControllerNewROIRequest_Buffer::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.ViewerControllerNewROIRequest.Buffer)
  GOOGLE_DCHECK_NE(&from, this);
  const ViewerControllerNewROIRequest_Buffer* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ViewerControllerNewROIRequest_Buffer>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.ViewerControllerNewROIRequest.Buffer)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.ViewerControllerNewROIRequest.Buffer)
    MergeFrom(*source);
  }
}

void ViewerControllerNewROIRequest_Buffer::MergeFrom(const ViewerControllerNewROIRequest_Buffer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerNewROIRequest.Buffer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  buffer_.MergeFrom(from.buffer_);
  if (from.rows() != 0) {
    _internal_set_rows(from._internal_rows());
  }
  if (from.columns() != 0) {
    _internal_set_columns(from._internal_columns());
  }
}

void ViewerControllerNewROIRequest_Buffer::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.ViewerControllerNewROIRequest.Buffer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ViewerControllerNewROIRequest_Buffer::CopyFrom(const ViewerControllerNewROIRequest_Buffer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerNewROIRequest.Buffer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewerControllerNewROIRequest_Buffer::IsInitialized() const {
  return true;
}

void ViewerControllerNewROIRequest_Buffer::InternalSwap(ViewerControllerNewROIRequest_Buffer* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  buffer_.InternalSwap(&other->buffer_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest_Buffer, columns_)
      + sizeof(ViewerControllerNewROIRequest_Buffer::columns_)
      - PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest_Buffer, rows_)>(
          reinterpret_cast<char*>(&rows_),
          reinterpret_cast<char*>(&other->rows_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ViewerControllerNewROIRequest_Buffer::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ViewerControllerNewROIRequest_Point2D::_Internal {
 public:
};

ViewerControllerNewROIRequest_Point2D::ViewerControllerNewROIRequest_Point2D(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerNewROIRequest.Point2D)
}
ViewerControllerNewROIRequest_Point2D::ViewerControllerNewROIRequest_Point2D(const ViewerControllerNewROIRequest_Point2D& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerNewROIRequest.Point2D)
}

void ViewerControllerNewROIRequest_Point2D::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&x_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
}

ViewerControllerNewROIRequest_Point2D::~ViewerControllerNewROIRequest_Point2D() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerNewROIRequest.Point2D)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ViewerControllerNewROIRequest_Point2D::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ViewerControllerNewROIRequest_Point2D::ArenaDtor(void* object) {
  ViewerControllerNewROIRequest_Point2D* _this = reinterpret_cast< ViewerControllerNewROIRequest_Point2D* >(object);
  (void)_this;
}
void ViewerControllerNewROIRequest_Point2D::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ViewerControllerNewROIRequest_Point2D::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ViewerControllerNewROIRequest_Point2D& ViewerControllerNewROIRequest_Point2D::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ViewerControllerNewROIRequest_Point2D_viewercontroller_2eproto.base);
  return *internal_default_instance();
}


void ViewerControllerNewROIRequest_Point2D::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerNewROIRequest.Point2D)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ViewerControllerNewROIRequest_Point2D::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // float x = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13)) {
          x_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float y = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          y_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ViewerControllerNewROIRequest_Point2D::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerNewROIRequest.Point2D)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (!(this->x() <= 0 && this->x() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1, this->_internal_x(), target);
  }

  // float y = 2;
  if (!(this->y() <= 0 && this->y() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_y(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerNewROIRequest.Point2D)
  return target;
}

size_t ViewerControllerNewROIRequest_Point2D::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerNewROIRequest.Point2D)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float x = 1;
  if (!(this->x() <= 0 && this->x() >= 0)) {
    total_size += 1 + 4;
  }

  // float y = 2;
  if (!(this->y() <= 0 && this->y() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ViewerControllerNewROIRequest_Point2D::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.ViewerControllerNewROIRequest.Point2D)
  GOOGLE_DCHECK_NE(&from, this);
  const ViewerControllerNewROIRequest_Point2D* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ViewerControllerNewROIRequest_Point2D>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.ViewerControllerNewROIRequest.Point2D)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.ViewerControllerNewROIRequest.Point2D)
    MergeFrom(*source);
  }
}

void ViewerControllerNewROIRequest_Point2D::MergeFrom(const ViewerControllerNewROIRequest_Point2D& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerNewROIRequest.Point2D)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.x() <= 0 && from.x() >= 0)) {
    _internal_set_x(from._internal_x());
  }
  if (!(from.y() <= 0 && from.y() >= 0)) {
    _internal_set_y(from._internal_y());
  }
}

void ViewerControllerNewROIRequest_Point2D::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.ViewerControllerNewROIRequest.Point2D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ViewerControllerNewROIRequest_Point2D::CopyFrom(const ViewerControllerNewROIRequest_Point2D& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerNewROIRequest.Point2D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewerControllerNewROIRequest_Point2D::IsInitialized() const {
  return true;
}

void ViewerControllerNewROIRequest_Point2D::InternalSwap(ViewerControllerNewROIRequest_Point2D* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest_Point2D, y_)
      + sizeof(ViewerControllerNewROIRequest_Point2D::y_)
      - PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest_Point2D, x_)>(
          reinterpret_cast<char*>(&x_),
          reinterpret_cast<char*>(&other->x_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ViewerControllerNewROIRequest_Point2D::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ViewerControllerNewROIRequest_Color::_Internal {
 public:
};

ViewerControllerNewROIRequest_Color::ViewerControllerNewROIRequest_Color(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerNewROIRequest.Color)
}
ViewerControllerNewROIRequest_Color::ViewerControllerNewROIRequest_Color(const ViewerControllerNewROIRequest_Color& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&r_, &from.r_,
    static_cast<size_t>(reinterpret_cast<char*>(&b_) -
    reinterpret_cast<char*>(&r_)) + sizeof(b_));
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerNewROIRequest.Color)
}

void ViewerControllerNewROIRequest_Color::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&r_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&b_) -
      reinterpret_cast<char*>(&r_)) + sizeof(b_));
}

ViewerControllerNewROIRequest_Color::~ViewerControllerNewROIRequest_Color() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerNewROIRequest.Color)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ViewerControllerNewROIRequest_Color::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ViewerControllerNewROIRequest_Color::ArenaDtor(void* object) {
  ViewerControllerNewROIRequest_Color* _this = reinterpret_cast< ViewerControllerNewROIRequest_Color* >(object);
  (void)_this;
}
void ViewerControllerNewROIRequest_Color::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ViewerControllerNewROIRequest_Color::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ViewerControllerNewROIRequest_Color& ViewerControllerNewROIRequest_Color::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ViewerControllerNewROIRequest_Color_viewercontroller_2eproto.base);
  return *internal_default_instance();
}


void ViewerControllerNewROIRequest_Color::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerNewROIRequest.Color)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&r_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&b_) -
      reinterpret_cast<char*>(&r_)) + sizeof(b_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ViewerControllerNewROIRequest_Color::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 r = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          r_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 g = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          g_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 b = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          b_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ViewerControllerNewROIRequest_Color::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerNewROIRequest.Color)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 r = 1;
  if (this->r() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_r(), target);
  }

  // int32 g = 2;
  if (this->g() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_g(), target);
  }

  // int32 b = 3;
  if (this->b() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_b(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerNewROIRequest.Color)
  return target;
}

size_t ViewerControllerNewROIRequest_Color::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerNewROIRequest.Color)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 r = 1;
  if (this->r() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_r());
  }

  // int32 g = 2;
  if (this->g() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_g());
  }

  // int32 b = 3;
  if (this->b() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_b());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ViewerControllerNewROIRequest_Color::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.ViewerControllerNewROIRequest.Color)
  GOOGLE_DCHECK_NE(&from, this);
  const ViewerControllerNewROIRequest_Color* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ViewerControllerNewROIRequest_Color>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.ViewerControllerNewROIRequest.Color)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.ViewerControllerNewROIRequest.Color)
    MergeFrom(*source);
  }
}

void ViewerControllerNewROIRequest_Color::MergeFrom(const ViewerControllerNewROIRequest_Color& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerNewROIRequest.Color)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.r() != 0) {
    _internal_set_r(from._internal_r());
  }
  if (from.g() != 0) {
    _internal_set_g(from._internal_g());
  }
  if (from.b() != 0) {
    _internal_set_b(from._internal_b());
  }
}

void ViewerControllerNewROIRequest_Color::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.ViewerControllerNewROIRequest.Color)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ViewerControllerNewROIRequest_Color::CopyFrom(const ViewerControllerNewROIRequest_Color& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerNewROIRequest.Color)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewerControllerNewROIRequest_Color::IsInitialized() const {
  return true;
}

void ViewerControllerNewROIRequest_Color::InternalSwap(ViewerControllerNewROIRequest_Color* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest_Color, b_)
      + sizeof(ViewerControllerNewROIRequest_Color::b_)
      - PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest_Color, r_)>(
          reinterpret_cast<char*>(&r_),
          reinterpret_cast<char*>(&other->r_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ViewerControllerNewROIRequest_Color::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ViewerControllerNewROIRequest_Rect::_Internal {
 public:
};

ViewerControllerNewROIRequest_Rect::ViewerControllerNewROIRequest_Rect(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerNewROIRequest.Rect)
}
ViewerControllerNewROIRequest_Rect::ViewerControllerNewROIRequest_Rect(const ViewerControllerNewROIRequest_Rect& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&origin_x_, &from.origin_x_,
    static_cast<size_t>(reinterpret_cast<char*>(&width_) -
    reinterpret_cast<char*>(&origin_x_)) + sizeof(width_));
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerNewROIRequest.Rect)
}

void ViewerControllerNewROIRequest_Rect::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&origin_x_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&width_) -
      reinterpret_cast<char*>(&origin_x_)) + sizeof(width_));
}

ViewerControllerNewROIRequest_Rect::~ViewerControllerNewROIRequest_Rect() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerNewROIRequest.Rect)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ViewerControllerNewROIRequest_Rect::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ViewerControllerNewROIRequest_Rect::ArenaDtor(void* object) {
  ViewerControllerNewROIRequest_Rect* _this = reinterpret_cast< ViewerControllerNewROIRequest_Rect* >(object);
  (void)_this;
}
void ViewerControllerNewROIRequest_Rect::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ViewerControllerNewROIRequest_Rect::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ViewerControllerNewROIRequest_Rect& ViewerControllerNewROIRequest_Rect::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ViewerControllerNewROIRequest_Rect_viewercontroller_2eproto.base);
  return *internal_default_instance();
}


void ViewerControllerNewROIRequest_Rect::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerNewROIRequest.Rect)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&origin_x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&width_) -
      reinterpret_cast<char*>(&origin_x_)) + sizeof(width_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ViewerControllerNewROIRequest_Rect::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // float origin_x = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13)) {
          origin_x_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float origin_y = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          origin_y_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float height = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29)) {
          height_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float width = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 37)) {
          width_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ViewerControllerNewROIRequest_Rect::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerNewROIRequest.Rect)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float origin_x = 1;
  if (!(this->origin_x() <= 0 && this->origin_x() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1, this->_internal_origin_x(), target);
  }

  // float origin_y = 2;
  if (!(this->origin_y() <= 0 && this->origin_y() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_origin_y(), target);
  }

  // float height = 3;
  if (!(this->height() <= 0 && this->height() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3, this->_internal_height(), target);
  }

  // float width = 4;
  if (!(this->width() <= 0 && this->width() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(4, this->_internal_width(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerNewROIRequest.Rect)
  return target;
}

size_t ViewerControllerNewROIRequest_Rect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerNewROIRequest.Rect)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float origin_x = 1;
  if (!(this->origin_x() <= 0 && this->origin_x() >= 0)) {
    total_size += 1 + 4;
  }

  // float origin_y = 2;
  if (!(this->origin_y() <= 0 && this->origin_y() >= 0)) {
    total_size += 1 + 4;
  }

  // float height = 3;
  if (!(this->height() <= 0 && this->height() >= 0)) {
    total_size += 1 + 4;
  }

  // float width = 4;
  if (!(this->width() <= 0 && this->width() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ViewerControllerNewROIRequest_Rect::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.ViewerControllerNewROIRequest.Rect)
  GOOGLE_DCHECK_NE(&from, this);
  const ViewerControllerNewROIRequest_Rect* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ViewerControllerNewROIRequest_Rect>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.ViewerControllerNewROIRequest.Rect)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.ViewerControllerNewROIRequest.Rect)
    MergeFrom(*source);
  }
}

void ViewerControllerNewROIRequest_Rect::MergeFrom(const ViewerControllerNewROIRequest_Rect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerNewROIRequest.Rect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.origin_x() <= 0 && from.origin_x() >= 0)) {
    _internal_set_origin_x(from._internal_origin_x());
  }
  if (!(from.origin_y() <= 0 && from.origin_y() >= 0)) {
    _internal_set_origin_y(from._internal_origin_y());
  }
  if (!(from.height() <= 0 && from.height() >= 0)) {
    _internal_set_height(from._internal_height());
  }
  if (!(from.width() <= 0 && from.width() >= 0)) {
    _internal_set_width(from._internal_width());
  }
}

void ViewerControllerNewROIRequest_Rect::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.ViewerControllerNewROIRequest.Rect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ViewerControllerNewROIRequest_Rect::CopyFrom(const ViewerControllerNewROIRequest_Rect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerNewROIRequest.Rect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewerControllerNewROIRequest_Rect::IsInitialized() const {
  return true;
}

void ViewerControllerNewROIRequest_Rect::InternalSwap(ViewerControllerNewROIRequest_Rect* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest_Rect, width_)
      + sizeof(ViewerControllerNewROIRequest_Rect::width_)
      - PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest_Rect, origin_x_)>(
          reinterpret_cast<char*>(&origin_x_),
          reinterpret_cast<char*>(&other->origin_x_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ViewerControllerNewROIRequest_Rect::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ViewerControllerNewROIRequest::_Internal {
 public:
  static const ::osirixgrpc::ViewerController& viewer_controller(const ViewerControllerNewROIRequest* msg);
  static const ::osirixgrpc::ViewerControllerNewROIRequest_Color& color(const ViewerControllerNewROIRequest* msg);
  static const ::osirixgrpc::ViewerControllerNewROIRequest_Buffer& buffer(const ViewerControllerNewROIRequest* msg);
  static const ::osirixgrpc::ViewerControllerNewROIRequest_Rect& rectangle(const ViewerControllerNewROIRequest* msg);
};

const ::osirixgrpc::ViewerController&
ViewerControllerNewROIRequest::_Internal::viewer_controller(const ViewerControllerNewROIRequest* msg) {
  return *msg->viewer_controller_;
}
const ::osirixgrpc::ViewerControllerNewROIRequest_Color&
ViewerControllerNewROIRequest::_Internal::color(const ViewerControllerNewROIRequest* msg) {
  return *msg->color_;
}
const ::osirixgrpc::ViewerControllerNewROIRequest_Buffer&
ViewerControllerNewROIRequest::_Internal::buffer(const ViewerControllerNewROIRequest* msg) {
  return *msg->buffer_;
}
const ::osirixgrpc::ViewerControllerNewROIRequest_Rect&
ViewerControllerNewROIRequest::_Internal::rectangle(const ViewerControllerNewROIRequest* msg) {
  return *msg->rectangle_;
}
void ViewerControllerNewROIRequest::clear_viewer_controller() {
  if (GetArena() == nullptr && viewer_controller_ != nullptr) {
    delete viewer_controller_;
  }
  viewer_controller_ = nullptr;
}
ViewerControllerNewROIRequest::ViewerControllerNewROIRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  points_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerNewROIRequest)
}
ViewerControllerNewROIRequest::ViewerControllerNewROIRequest(const ViewerControllerNewROIRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      points_(from.points_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  if (from._internal_has_viewer_controller()) {
    viewer_controller_ = new ::osirixgrpc::ViewerController(*from.viewer_controller_);
  } else {
    viewer_controller_ = nullptr;
  }
  if (from._internal_has_color()) {
    color_ = new ::osirixgrpc::ViewerControllerNewROIRequest_Color(*from.color_);
  } else {
    color_ = nullptr;
  }
  if (from._internal_has_buffer()) {
    buffer_ = new ::osirixgrpc::ViewerControllerNewROIRequest_Buffer(*from.buffer_);
  } else {
    buffer_ = nullptr;
  }
  if (from._internal_has_rectangle()) {
    rectangle_ = new ::osirixgrpc::ViewerControllerNewROIRequest_Rect(*from.rectangle_);
  } else {
    rectangle_ = nullptr;
  }
  ::memcpy(&itype_, &from.itype_,
    static_cast<size_t>(reinterpret_cast<char*>(&opacity_) -
    reinterpret_cast<char*>(&itype_)) + sizeof(opacity_));
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerNewROIRequest)
}

void ViewerControllerNewROIRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ViewerControllerNewROIRequest_viewercontroller_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&viewer_controller_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&opacity_) -
      reinterpret_cast<char*>(&viewer_controller_)) + sizeof(opacity_));
}

ViewerControllerNewROIRequest::~ViewerControllerNewROIRequest() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerNewROIRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ViewerControllerNewROIRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete viewer_controller_;
  if (this != internal_default_instance()) delete color_;
  if (this != internal_default_instance()) delete buffer_;
  if (this != internal_default_instance()) delete rectangle_;
}

void ViewerControllerNewROIRequest::ArenaDtor(void* object) {
  ViewerControllerNewROIRequest* _this = reinterpret_cast< ViewerControllerNewROIRequest* >(object);
  (void)_this;
}
void ViewerControllerNewROIRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ViewerControllerNewROIRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ViewerControllerNewROIRequest& ViewerControllerNewROIRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ViewerControllerNewROIRequest_viewercontroller_2eproto.base);
  return *internal_default_instance();
}


void ViewerControllerNewROIRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerNewROIRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  points_.Clear();
  name_.ClearToEmpty();
  if (GetArena() == nullptr && viewer_controller_ != nullptr) {
    delete viewer_controller_;
  }
  viewer_controller_ = nullptr;
  if (GetArena() == nullptr && color_ != nullptr) {
    delete color_;
  }
  color_ = nullptr;
  if (GetArena() == nullptr && buffer_ != nullptr) {
    delete buffer_;
  }
  buffer_ = nullptr;
  if (GetArena() == nullptr && rectangle_ != nullptr) {
    delete rectangle_;
  }
  rectangle_ = nullptr;
  ::memset(&itype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&opacity_) -
      reinterpret_cast<char*>(&itype_)) + sizeof(opacity_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ViewerControllerNewROIRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.ViewerController viewer_controller = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_viewer_controller(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 itype = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          itype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "osirixgrpc.ViewerControllerNewROIRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 position = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          position_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 movie_idx = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          movie_idx_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 buffer_position_x = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          buffer_position_x_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 buffer_position_y = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          buffer_position_y_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .osirixgrpc.ViewerControllerNewROIRequest.Color color = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_color(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float thickness = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 77)) {
          thickness_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float opacity = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 85)) {
          opacity_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // .osirixgrpc.ViewerControllerNewROIRequest.Buffer buffer = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_buffer(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .osirixgrpc.ViewerControllerNewROIRequest.Point2D points = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_points(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<98>(ptr));
        } else goto handle_unusual;
        continue;
      // .osirixgrpc.ViewerControllerNewROIRequest.Rect rectangle = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_rectangle(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ViewerControllerNewROIRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerNewROIRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.ViewerController viewer_controller = 1;
  if (this->has_viewer_controller()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::viewer_controller(this), target, stream);
  }

  // int32 itype = 2;
  if (this->itype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_itype(), target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "osirixgrpc.ViewerControllerNewROIRequest.name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_name(), target);
  }

  // int32 position = 4;
  if (this->position() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_position(), target);
  }

  // int32 movie_idx = 5;
  if (this->movie_idx() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_movie_idx(), target);
  }

  // int32 buffer_position_x = 6;
  if (this->buffer_position_x() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_buffer_position_x(), target);
  }

  // int32 buffer_position_y = 7;
  if (this->buffer_position_y() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_buffer_position_y(), target);
  }

  // .osirixgrpc.ViewerControllerNewROIRequest.Color color = 8;
  if (this->has_color()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::color(this), target, stream);
  }

  // float thickness = 9;
  if (!(this->thickness() <= 0 && this->thickness() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(9, this->_internal_thickness(), target);
  }

  // float opacity = 10;
  if (!(this->opacity() <= 0 && this->opacity() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(10, this->_internal_opacity(), target);
  }

  // .osirixgrpc.ViewerControllerNewROIRequest.Buffer buffer = 11;
  if (this->has_buffer()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        11, _Internal::buffer(this), target, stream);
  }

  // repeated .osirixgrpc.ViewerControllerNewROIRequest.Point2D points = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_points_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(12, this->_internal_points(i), target, stream);
  }

  // .osirixgrpc.ViewerControllerNewROIRequest.Rect rectangle = 13;
  if (this->has_rectangle()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        13, _Internal::rectangle(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerNewROIRequest)
  return target;
}

size_t ViewerControllerNewROIRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerNewROIRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .osirixgrpc.ViewerControllerNewROIRequest.Point2D points = 12;
  total_size += 1UL * this->_internal_points_size();
  for (const auto& msg : this->points_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .osirixgrpc.ViewerController viewer_controller = 1;
  if (this->has_viewer_controller()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *viewer_controller_);
  }

  // .osirixgrpc.ViewerControllerNewROIRequest.Color color = 8;
  if (this->has_color()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *color_);
  }

  // .osirixgrpc.ViewerControllerNewROIRequest.Buffer buffer = 11;
  if (this->has_buffer()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *buffer_);
  }

  // .osirixgrpc.ViewerControllerNewROIRequest.Rect rectangle = 13;
  if (this->has_rectangle()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *rectangle_);
  }

  // int32 itype = 2;
  if (this->itype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_itype());
  }

  // int32 position = 4;
  if (this->position() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_position());
  }

  // int32 movie_idx = 5;
  if (this->movie_idx() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_movie_idx());
  }

  // int32 buffer_position_x = 6;
  if (this->buffer_position_x() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_buffer_position_x());
  }

  // int32 buffer_position_y = 7;
  if (this->buffer_position_y() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_buffer_position_y());
  }

  // float thickness = 9;
  if (!(this->thickness() <= 0 && this->thickness() >= 0)) {
    total_size += 1 + 4;
  }

  // float opacity = 10;
  if (!(this->opacity() <= 0 && this->opacity() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ViewerControllerNewROIRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.ViewerControllerNewROIRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ViewerControllerNewROIRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ViewerControllerNewROIRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.ViewerControllerNewROIRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.ViewerControllerNewROIRequest)
    MergeFrom(*source);
  }
}

void ViewerControllerNewROIRequest::MergeFrom(const ViewerControllerNewROIRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerNewROIRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  points_.MergeFrom(from.points_);
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.has_viewer_controller()) {
    _internal_mutable_viewer_controller()->::osirixgrpc::ViewerController::MergeFrom(from._internal_viewer_controller());
  }
  if (from.has_color()) {
    _internal_mutable_color()->::osirixgrpc::ViewerControllerNewROIRequest_Color::MergeFrom(from._internal_color());
  }
  if (from.has_buffer()) {
    _internal_mutable_buffer()->::osirixgrpc::ViewerControllerNewROIRequest_Buffer::MergeFrom(from._internal_buffer());
  }
  if (from.has_rectangle()) {
    _internal_mutable_rectangle()->::osirixgrpc::ViewerControllerNewROIRequest_Rect::MergeFrom(from._internal_rectangle());
  }
  if (from.itype() != 0) {
    _internal_set_itype(from._internal_itype());
  }
  if (from.position() != 0) {
    _internal_set_position(from._internal_position());
  }
  if (from.movie_idx() != 0) {
    _internal_set_movie_idx(from._internal_movie_idx());
  }
  if (from.buffer_position_x() != 0) {
    _internal_set_buffer_position_x(from._internal_buffer_position_x());
  }
  if (from.buffer_position_y() != 0) {
    _internal_set_buffer_position_y(from._internal_buffer_position_y());
  }
  if (!(from.thickness() <= 0 && from.thickness() >= 0)) {
    _internal_set_thickness(from._internal_thickness());
  }
  if (!(from.opacity() <= 0 && from.opacity() >= 0)) {
    _internal_set_opacity(from._internal_opacity());
  }
}

void ViewerControllerNewROIRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.ViewerControllerNewROIRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ViewerControllerNewROIRequest::CopyFrom(const ViewerControllerNewROIRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerNewROIRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewerControllerNewROIRequest::IsInitialized() const {
  return true;
}

void ViewerControllerNewROIRequest::InternalSwap(ViewerControllerNewROIRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  points_.InternalSwap(&other->points_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest, opacity_)
      + sizeof(ViewerControllerNewROIRequest::opacity_)
      - PROTOBUF_FIELD_OFFSET(ViewerControllerNewROIRequest, viewer_controller_)>(
          reinterpret_cast<char*>(&viewer_controller_),
          reinterpret_cast<char*>(&other->viewer_controller_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ViewerControllerNewROIRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ViewerControllerROIsWithNameRequest::_Internal {
 public:
  static const ::osirixgrpc::ViewerController& viewer_controller(const ViewerControllerROIsWithNameRequest* msg);
};

const ::osirixgrpc::ViewerController&
ViewerControllerROIsWithNameRequest::_Internal::viewer_controller(const ViewerControllerROIsWithNameRequest* msg) {
  return *msg->viewer_controller_;
}
void ViewerControllerROIsWithNameRequest::clear_viewer_controller() {
  if (GetArena() == nullptr && viewer_controller_ != nullptr) {
    delete viewer_controller_;
  }
  viewer_controller_ = nullptr;
}
ViewerControllerROIsWithNameRequest::ViewerControllerROIsWithNameRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerROIsWithNameRequest)
}
ViewerControllerROIsWithNameRequest::ViewerControllerROIsWithNameRequest(const ViewerControllerROIsWithNameRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  if (from._internal_has_viewer_controller()) {
    viewer_controller_ = new ::osirixgrpc::ViewerController(*from.viewer_controller_);
  } else {
    viewer_controller_ = nullptr;
  }
  ::memcpy(&movie_idx_, &from.movie_idx_,
    static_cast<size_t>(reinterpret_cast<char*>(&in_4d_) -
    reinterpret_cast<char*>(&movie_idx_)) + sizeof(in_4d_));
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerROIsWithNameRequest)
}

void ViewerControllerROIsWithNameRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ViewerControllerROIsWithNameRequest_viewercontroller_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&viewer_controller_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&in_4d_) -
      reinterpret_cast<char*>(&viewer_controller_)) + sizeof(in_4d_));
}

ViewerControllerROIsWithNameRequest::~ViewerControllerROIsWithNameRequest() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerROIsWithNameRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ViewerControllerROIsWithNameRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete viewer_controller_;
}

void ViewerControllerROIsWithNameRequest::ArenaDtor(void* object) {
  ViewerControllerROIsWithNameRequest* _this = reinterpret_cast< ViewerControllerROIsWithNameRequest* >(object);
  (void)_this;
}
void ViewerControllerROIsWithNameRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ViewerControllerROIsWithNameRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ViewerControllerROIsWithNameRequest& ViewerControllerROIsWithNameRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ViewerControllerROIsWithNameRequest_viewercontroller_2eproto.base);
  return *internal_default_instance();
}


void ViewerControllerROIsWithNameRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerROIsWithNameRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  if (GetArena() == nullptr && viewer_controller_ != nullptr) {
    delete viewer_controller_;
  }
  viewer_controller_ = nullptr;
  ::memset(&movie_idx_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&in_4d_) -
      reinterpret_cast<char*>(&movie_idx_)) + sizeof(in_4d_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ViewerControllerROIsWithNameRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.ViewerController viewer_controller = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_viewer_controller(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "osirixgrpc.ViewerControllerROIsWithNameRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 movie_idx = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          movie_idx_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool in_4d = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          in_4d_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ViewerControllerROIsWithNameRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerROIsWithNameRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.ViewerController viewer_controller = 1;
  if (this->has_viewer_controller()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::viewer_controller(this), target, stream);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "osirixgrpc.ViewerControllerROIsWithNameRequest.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // int32 movie_idx = 3;
  if (this->movie_idx() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_movie_idx(), target);
  }

  // bool in_4d = 4;
  if (this->in_4d() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_in_4d(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerROIsWithNameRequest)
  return target;
}

size_t ViewerControllerROIsWithNameRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerROIsWithNameRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .osirixgrpc.ViewerController viewer_controller = 1;
  if (this->has_viewer_controller()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *viewer_controller_);
  }

  // int32 movie_idx = 3;
  if (this->movie_idx() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_movie_idx());
  }

  // bool in_4d = 4;
  if (this->in_4d() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ViewerControllerROIsWithNameRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.ViewerControllerROIsWithNameRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ViewerControllerROIsWithNameRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ViewerControllerROIsWithNameRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.ViewerControllerROIsWithNameRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.ViewerControllerROIsWithNameRequest)
    MergeFrom(*source);
  }
}

void ViewerControllerROIsWithNameRequest::MergeFrom(const ViewerControllerROIsWithNameRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerROIsWithNameRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.has_viewer_controller()) {
    _internal_mutable_viewer_controller()->::osirixgrpc::ViewerController::MergeFrom(from._internal_viewer_controller());
  }
  if (from.movie_idx() != 0) {
    _internal_set_movie_idx(from._internal_movie_idx());
  }
  if (from.in_4d() != 0) {
    _internal_set_in_4d(from._internal_in_4d());
  }
}

void ViewerControllerROIsWithNameRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.ViewerControllerROIsWithNameRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ViewerControllerROIsWithNameRequest::CopyFrom(const ViewerControllerROIsWithNameRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerROIsWithNameRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewerControllerROIsWithNameRequest::IsInitialized() const {
  return true;
}

void ViewerControllerROIsWithNameRequest::InternalSwap(ViewerControllerROIsWithNameRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ViewerControllerROIsWithNameRequest, in_4d_)
      + sizeof(ViewerControllerROIsWithNameRequest::in_4d_)
      - PROTOBUF_FIELD_OFFSET(ViewerControllerROIsWithNameRequest, viewer_controller_)>(
          reinterpret_cast<char*>(&viewer_controller_),
          reinterpret_cast<char*>(&other->viewer_controller_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ViewerControllerROIsWithNameRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ViewerControllerResampleViewerControllerRequest::_Internal {
 public:
  static const ::osirixgrpc::ViewerController& viewer_controller(const ViewerControllerResampleViewerControllerRequest* msg);
  static const ::osirixgrpc::ViewerController& fixed_viewer_controller(const ViewerControllerResampleViewerControllerRequest* msg);
};

const ::osirixgrpc::ViewerController&
ViewerControllerResampleViewerControllerRequest::_Internal::viewer_controller(const ViewerControllerResampleViewerControllerRequest* msg) {
  return *msg->viewer_controller_;
}
const ::osirixgrpc::ViewerController&
ViewerControllerResampleViewerControllerRequest::_Internal::fixed_viewer_controller(const ViewerControllerResampleViewerControllerRequest* msg) {
  return *msg->fixed_viewer_controller_;
}
void ViewerControllerResampleViewerControllerRequest::clear_viewer_controller() {
  if (GetArena() == nullptr && viewer_controller_ != nullptr) {
    delete viewer_controller_;
  }
  viewer_controller_ = nullptr;
}
void ViewerControllerResampleViewerControllerRequest::clear_fixed_viewer_controller() {
  if (GetArena() == nullptr && fixed_viewer_controller_ != nullptr) {
    delete fixed_viewer_controller_;
  }
  fixed_viewer_controller_ = nullptr;
}
ViewerControllerResampleViewerControllerRequest::ViewerControllerResampleViewerControllerRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerResampleViewerControllerRequest)
}
ViewerControllerResampleViewerControllerRequest::ViewerControllerResampleViewerControllerRequest(const ViewerControllerResampleViewerControllerRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_viewer_controller()) {
    viewer_controller_ = new ::osirixgrpc::ViewerController(*from.viewer_controller_);
  } else {
    viewer_controller_ = nullptr;
  }
  if (from._internal_has_fixed_viewer_controller()) {
    fixed_viewer_controller_ = new ::osirixgrpc::ViewerController(*from.fixed_viewer_controller_);
  } else {
    fixed_viewer_controller_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerResampleViewerControllerRequest)
}

void ViewerControllerResampleViewerControllerRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ViewerControllerResampleViewerControllerRequest_viewercontroller_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&viewer_controller_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&fixed_viewer_controller_) -
      reinterpret_cast<char*>(&viewer_controller_)) + sizeof(fixed_viewer_controller_));
}

ViewerControllerResampleViewerControllerRequest::~ViewerControllerResampleViewerControllerRequest() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerResampleViewerControllerRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ViewerControllerResampleViewerControllerRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete viewer_controller_;
  if (this != internal_default_instance()) delete fixed_viewer_controller_;
}

void ViewerControllerResampleViewerControllerRequest::ArenaDtor(void* object) {
  ViewerControllerResampleViewerControllerRequest* _this = reinterpret_cast< ViewerControllerResampleViewerControllerRequest* >(object);
  (void)_this;
}
void ViewerControllerResampleViewerControllerRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ViewerControllerResampleViewerControllerRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ViewerControllerResampleViewerControllerRequest& ViewerControllerResampleViewerControllerRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ViewerControllerResampleViewerControllerRequest_viewercontroller_2eproto.base);
  return *internal_default_instance();
}


void ViewerControllerResampleViewerControllerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerResampleViewerControllerRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && viewer_controller_ != nullptr) {
    delete viewer_controller_;
  }
  viewer_controller_ = nullptr;
  if (GetArena() == nullptr && fixed_viewer_controller_ != nullptr) {
    delete fixed_viewer_controller_;
  }
  fixed_viewer_controller_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ViewerControllerResampleViewerControllerRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.ViewerController viewer_controller = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_viewer_controller(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .osirixgrpc.ViewerController fixed_viewer_controller = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_fixed_viewer_controller(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ViewerControllerResampleViewerControllerRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerResampleViewerControllerRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.ViewerController viewer_controller = 1;
  if (this->has_viewer_controller()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::viewer_controller(this), target, stream);
  }

  // .osirixgrpc.ViewerController fixed_viewer_controller = 2;
  if (this->has_fixed_viewer_controller()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::fixed_viewer_controller(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerResampleViewerControllerRequest)
  return target;
}

size_t ViewerControllerResampleViewerControllerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerResampleViewerControllerRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .osirixgrpc.ViewerController viewer_controller = 1;
  if (this->has_viewer_controller()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *viewer_controller_);
  }

  // .osirixgrpc.ViewerController fixed_viewer_controller = 2;
  if (this->has_fixed_viewer_controller()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *fixed_viewer_controller_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ViewerControllerResampleViewerControllerRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.ViewerControllerResampleViewerControllerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ViewerControllerResampleViewerControllerRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ViewerControllerResampleViewerControllerRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.ViewerControllerResampleViewerControllerRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.ViewerControllerResampleViewerControllerRequest)
    MergeFrom(*source);
  }
}

void ViewerControllerResampleViewerControllerRequest::MergeFrom(const ViewerControllerResampleViewerControllerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerResampleViewerControllerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_viewer_controller()) {
    _internal_mutable_viewer_controller()->::osirixgrpc::ViewerController::MergeFrom(from._internal_viewer_controller());
  }
  if (from.has_fixed_viewer_controller()) {
    _internal_mutable_fixed_viewer_controller()->::osirixgrpc::ViewerController::MergeFrom(from._internal_fixed_viewer_controller());
  }
}

void ViewerControllerResampleViewerControllerRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.ViewerControllerResampleViewerControllerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ViewerControllerResampleViewerControllerRequest::CopyFrom(const ViewerControllerResampleViewerControllerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerResampleViewerControllerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewerControllerResampleViewerControllerRequest::IsInitialized() const {
  return true;
}

void ViewerControllerResampleViewerControllerRequest::InternalSwap(ViewerControllerResampleViewerControllerRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ViewerControllerResampleViewerControllerRequest, fixed_viewer_controller_)
      + sizeof(ViewerControllerResampleViewerControllerRequest::fixed_viewer_controller_)
      - PROTOBUF_FIELD_OFFSET(ViewerControllerResampleViewerControllerRequest, viewer_controller_)>(
          reinterpret_cast<char*>(&viewer_controller_),
          reinterpret_cast<char*>(&other->viewer_controller_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ViewerControllerResampleViewerControllerRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ViewerControllerCopyViewerWindowRequest::_Internal {
 public:
  static const ::osirixgrpc::ViewerController& viewer_controller(const ViewerControllerCopyViewerWindowRequest* msg);
};

const ::osirixgrpc::ViewerController&
ViewerControllerCopyViewerWindowRequest::_Internal::viewer_controller(const ViewerControllerCopyViewerWindowRequest* msg) {
  return *msg->viewer_controller_;
}
void ViewerControllerCopyViewerWindowRequest::clear_viewer_controller() {
  if (GetArena() == nullptr && viewer_controller_ != nullptr) {
    delete viewer_controller_;
  }
  viewer_controller_ = nullptr;
}
ViewerControllerCopyViewerWindowRequest::ViewerControllerCopyViewerWindowRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerCopyViewerWindowRequest)
}
ViewerControllerCopyViewerWindowRequest::ViewerControllerCopyViewerWindowRequest(const ViewerControllerCopyViewerWindowRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_viewer_controller()) {
    viewer_controller_ = new ::osirixgrpc::ViewerController(*from.viewer_controller_);
  } else {
    viewer_controller_ = nullptr;
  }
  in_4d_ = from.in_4d_;
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerCopyViewerWindowRequest)
}

void ViewerControllerCopyViewerWindowRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ViewerControllerCopyViewerWindowRequest_viewercontroller_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&viewer_controller_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&in_4d_) -
      reinterpret_cast<char*>(&viewer_controller_)) + sizeof(in_4d_));
}

ViewerControllerCopyViewerWindowRequest::~ViewerControllerCopyViewerWindowRequest() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerCopyViewerWindowRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ViewerControllerCopyViewerWindowRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete viewer_controller_;
}

void ViewerControllerCopyViewerWindowRequest::ArenaDtor(void* object) {
  ViewerControllerCopyViewerWindowRequest* _this = reinterpret_cast< ViewerControllerCopyViewerWindowRequest* >(object);
  (void)_this;
}
void ViewerControllerCopyViewerWindowRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ViewerControllerCopyViewerWindowRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ViewerControllerCopyViewerWindowRequest& ViewerControllerCopyViewerWindowRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ViewerControllerCopyViewerWindowRequest_viewercontroller_2eproto.base);
  return *internal_default_instance();
}


void ViewerControllerCopyViewerWindowRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerCopyViewerWindowRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && viewer_controller_ != nullptr) {
    delete viewer_controller_;
  }
  viewer_controller_ = nullptr;
  in_4d_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ViewerControllerCopyViewerWindowRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.ViewerController viewer_controller = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_viewer_controller(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool in_4d = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          in_4d_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ViewerControllerCopyViewerWindowRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerCopyViewerWindowRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.ViewerController viewer_controller = 1;
  if (this->has_viewer_controller()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::viewer_controller(this), target, stream);
  }

  // bool in_4d = 2;
  if (this->in_4d() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_in_4d(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerCopyViewerWindowRequest)
  return target;
}

size_t ViewerControllerCopyViewerWindowRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerCopyViewerWindowRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .osirixgrpc.ViewerController viewer_controller = 1;
  if (this->has_viewer_controller()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *viewer_controller_);
  }

  // bool in_4d = 2;
  if (this->in_4d() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ViewerControllerCopyViewerWindowRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.ViewerControllerCopyViewerWindowRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ViewerControllerCopyViewerWindowRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ViewerControllerCopyViewerWindowRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.ViewerControllerCopyViewerWindowRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.ViewerControllerCopyViewerWindowRequest)
    MergeFrom(*source);
  }
}

void ViewerControllerCopyViewerWindowRequest::MergeFrom(const ViewerControllerCopyViewerWindowRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerCopyViewerWindowRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_viewer_controller()) {
    _internal_mutable_viewer_controller()->::osirixgrpc::ViewerController::MergeFrom(from._internal_viewer_controller());
  }
  if (from.in_4d() != 0) {
    _internal_set_in_4d(from._internal_in_4d());
  }
}

void ViewerControllerCopyViewerWindowRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.ViewerControllerCopyViewerWindowRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ViewerControllerCopyViewerWindowRequest::CopyFrom(const ViewerControllerCopyViewerWindowRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerCopyViewerWindowRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewerControllerCopyViewerWindowRequest::IsInitialized() const {
  return true;
}

void ViewerControllerCopyViewerWindowRequest::InternalSwap(ViewerControllerCopyViewerWindowRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ViewerControllerCopyViewerWindowRequest, in_4d_)
      + sizeof(ViewerControllerCopyViewerWindowRequest::in_4d_)
      - PROTOBUF_FIELD_OFFSET(ViewerControllerCopyViewerWindowRequest, viewer_controller_)>(
          reinterpret_cast<char*>(&viewer_controller_),
          reinterpret_cast<char*>(&other->viewer_controller_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ViewerControllerCopyViewerWindowRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ViewerControllerSetMovieIdxRequest::_Internal {
 public:
  static const ::osirixgrpc::ViewerController& viewer_controller(const ViewerControllerSetMovieIdxRequest* msg);
};

const ::osirixgrpc::ViewerController&
ViewerControllerSetMovieIdxRequest::_Internal::viewer_controller(const ViewerControllerSetMovieIdxRequest* msg) {
  return *msg->viewer_controller_;
}
void ViewerControllerSetMovieIdxRequest::clear_viewer_controller() {
  if (GetArena() == nullptr && viewer_controller_ != nullptr) {
    delete viewer_controller_;
  }
  viewer_controller_ = nullptr;
}
ViewerControllerSetMovieIdxRequest::ViewerControllerSetMovieIdxRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerSetMovieIdxRequest)
}
ViewerControllerSetMovieIdxRequest::ViewerControllerSetMovieIdxRequest(const ViewerControllerSetMovieIdxRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_viewer_controller()) {
    viewer_controller_ = new ::osirixgrpc::ViewerController(*from.viewer_controller_);
  } else {
    viewer_controller_ = nullptr;
  }
  movie_idx_ = from.movie_idx_;
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerSetMovieIdxRequest)
}

void ViewerControllerSetMovieIdxRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ViewerControllerSetMovieIdxRequest_viewercontroller_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&viewer_controller_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&movie_idx_) -
      reinterpret_cast<char*>(&viewer_controller_)) + sizeof(movie_idx_));
}

ViewerControllerSetMovieIdxRequest::~ViewerControllerSetMovieIdxRequest() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerSetMovieIdxRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ViewerControllerSetMovieIdxRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete viewer_controller_;
}

void ViewerControllerSetMovieIdxRequest::ArenaDtor(void* object) {
  ViewerControllerSetMovieIdxRequest* _this = reinterpret_cast< ViewerControllerSetMovieIdxRequest* >(object);
  (void)_this;
}
void ViewerControllerSetMovieIdxRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ViewerControllerSetMovieIdxRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ViewerControllerSetMovieIdxRequest& ViewerControllerSetMovieIdxRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ViewerControllerSetMovieIdxRequest_viewercontroller_2eproto.base);
  return *internal_default_instance();
}


void ViewerControllerSetMovieIdxRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerSetMovieIdxRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && viewer_controller_ != nullptr) {
    delete viewer_controller_;
  }
  viewer_controller_ = nullptr;
  movie_idx_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ViewerControllerSetMovieIdxRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.ViewerController viewer_controller = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_viewer_controller(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 movie_idx = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          movie_idx_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ViewerControllerSetMovieIdxRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerSetMovieIdxRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.ViewerController viewer_controller = 1;
  if (this->has_viewer_controller()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::viewer_controller(this), target, stream);
  }

  // int32 movie_idx = 2;
  if (this->movie_idx() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_movie_idx(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerSetMovieIdxRequest)
  return target;
}

size_t ViewerControllerSetMovieIdxRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerSetMovieIdxRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .osirixgrpc.ViewerController viewer_controller = 1;
  if (this->has_viewer_controller()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *viewer_controller_);
  }

  // int32 movie_idx = 2;
  if (this->movie_idx() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_movie_idx());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ViewerControllerSetMovieIdxRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.ViewerControllerSetMovieIdxRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ViewerControllerSetMovieIdxRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ViewerControllerSetMovieIdxRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.ViewerControllerSetMovieIdxRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.ViewerControllerSetMovieIdxRequest)
    MergeFrom(*source);
  }
}

void ViewerControllerSetMovieIdxRequest::MergeFrom(const ViewerControllerSetMovieIdxRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerSetMovieIdxRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_viewer_controller()) {
    _internal_mutable_viewer_controller()->::osirixgrpc::ViewerController::MergeFrom(from._internal_viewer_controller());
  }
  if (from.movie_idx() != 0) {
    _internal_set_movie_idx(from._internal_movie_idx());
  }
}

void ViewerControllerSetMovieIdxRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.ViewerControllerSetMovieIdxRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ViewerControllerSetMovieIdxRequest::CopyFrom(const ViewerControllerSetMovieIdxRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerSetMovieIdxRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewerControllerSetMovieIdxRequest::IsInitialized() const {
  return true;
}

void ViewerControllerSetMovieIdxRequest::InternalSwap(ViewerControllerSetMovieIdxRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ViewerControllerSetMovieIdxRequest, movie_idx_)
      + sizeof(ViewerControllerSetMovieIdxRequest::movie_idx_)
      - PROTOBUF_FIELD_OFFSET(ViewerControllerSetMovieIdxRequest, viewer_controller_)>(
          reinterpret_cast<char*>(&viewer_controller_),
          reinterpret_cast<char*>(&other->viewer_controller_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ViewerControllerSetMovieIdxRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ViewerControllerIsDataVolumicRequest::_Internal {
 public:
  static const ::osirixgrpc::ViewerController& viewer_controller(const ViewerControllerIsDataVolumicRequest* msg);
};

const ::osirixgrpc::ViewerController&
ViewerControllerIsDataVolumicRequest::_Internal::viewer_controller(const ViewerControllerIsDataVolumicRequest* msg) {
  return *msg->viewer_controller_;
}
void ViewerControllerIsDataVolumicRequest::clear_viewer_controller() {
  if (GetArena() == nullptr && viewer_controller_ != nullptr) {
    delete viewer_controller_;
  }
  viewer_controller_ = nullptr;
}
ViewerControllerIsDataVolumicRequest::ViewerControllerIsDataVolumicRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerIsDataVolumicRequest)
}
ViewerControllerIsDataVolumicRequest::ViewerControllerIsDataVolumicRequest(const ViewerControllerIsDataVolumicRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_viewer_controller()) {
    viewer_controller_ = new ::osirixgrpc::ViewerController(*from.viewer_controller_);
  } else {
    viewer_controller_ = nullptr;
  }
  in_4d_ = from.in_4d_;
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerIsDataVolumicRequest)
}

void ViewerControllerIsDataVolumicRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ViewerControllerIsDataVolumicRequest_viewercontroller_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&viewer_controller_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&in_4d_) -
      reinterpret_cast<char*>(&viewer_controller_)) + sizeof(in_4d_));
}

ViewerControllerIsDataVolumicRequest::~ViewerControllerIsDataVolumicRequest() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerIsDataVolumicRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ViewerControllerIsDataVolumicRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete viewer_controller_;
}

void ViewerControllerIsDataVolumicRequest::ArenaDtor(void* object) {
  ViewerControllerIsDataVolumicRequest* _this = reinterpret_cast< ViewerControllerIsDataVolumicRequest* >(object);
  (void)_this;
}
void ViewerControllerIsDataVolumicRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ViewerControllerIsDataVolumicRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ViewerControllerIsDataVolumicRequest& ViewerControllerIsDataVolumicRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ViewerControllerIsDataVolumicRequest_viewercontroller_2eproto.base);
  return *internal_default_instance();
}


void ViewerControllerIsDataVolumicRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerIsDataVolumicRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && viewer_controller_ != nullptr) {
    delete viewer_controller_;
  }
  viewer_controller_ = nullptr;
  in_4d_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ViewerControllerIsDataVolumicRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.ViewerController viewer_controller = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_viewer_controller(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool in_4d = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          in_4d_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ViewerControllerIsDataVolumicRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerIsDataVolumicRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.ViewerController viewer_controller = 1;
  if (this->has_viewer_controller()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::viewer_controller(this), target, stream);
  }

  // bool in_4d = 2;
  if (this->in_4d() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_in_4d(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerIsDataVolumicRequest)
  return target;
}

size_t ViewerControllerIsDataVolumicRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerIsDataVolumicRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .osirixgrpc.ViewerController viewer_controller = 1;
  if (this->has_viewer_controller()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *viewer_controller_);
  }

  // bool in_4d = 2;
  if (this->in_4d() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ViewerControllerIsDataVolumicRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.ViewerControllerIsDataVolumicRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ViewerControllerIsDataVolumicRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ViewerControllerIsDataVolumicRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.ViewerControllerIsDataVolumicRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.ViewerControllerIsDataVolumicRequest)
    MergeFrom(*source);
  }
}

void ViewerControllerIsDataVolumicRequest::MergeFrom(const ViewerControllerIsDataVolumicRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerIsDataVolumicRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_viewer_controller()) {
    _internal_mutable_viewer_controller()->::osirixgrpc::ViewerController::MergeFrom(from._internal_viewer_controller());
  }
  if (from.in_4d() != 0) {
    _internal_set_in_4d(from._internal_in_4d());
  }
}

void ViewerControllerIsDataVolumicRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.ViewerControllerIsDataVolumicRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ViewerControllerIsDataVolumicRequest::CopyFrom(const ViewerControllerIsDataVolumicRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerIsDataVolumicRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewerControllerIsDataVolumicRequest::IsInitialized() const {
  return true;
}

void ViewerControllerIsDataVolumicRequest::InternalSwap(ViewerControllerIsDataVolumicRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ViewerControllerIsDataVolumicRequest, in_4d_)
      + sizeof(ViewerControllerIsDataVolumicRequest::in_4d_)
      - PROTOBUF_FIELD_OFFSET(ViewerControllerIsDataVolumicRequest, viewer_controller_)>(
          reinterpret_cast<char*>(&viewer_controller_),
          reinterpret_cast<char*>(&other->viewer_controller_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ViewerControllerIsDataVolumicRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ViewerControllerSetIdxRequest::_Internal {
 public:
  static const ::osirixgrpc::ViewerController& viewer_controller(const ViewerControllerSetIdxRequest* msg);
};

const ::osirixgrpc::ViewerController&
ViewerControllerSetIdxRequest::_Internal::viewer_controller(const ViewerControllerSetIdxRequest* msg) {
  return *msg->viewer_controller_;
}
void ViewerControllerSetIdxRequest::clear_viewer_controller() {
  if (GetArena() == nullptr && viewer_controller_ != nullptr) {
    delete viewer_controller_;
  }
  viewer_controller_ = nullptr;
}
ViewerControllerSetIdxRequest::ViewerControllerSetIdxRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerSetIdxRequest)
}
ViewerControllerSetIdxRequest::ViewerControllerSetIdxRequest(const ViewerControllerSetIdxRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_viewer_controller()) {
    viewer_controller_ = new ::osirixgrpc::ViewerController(*from.viewer_controller_);
  } else {
    viewer_controller_ = nullptr;
  }
  idx_ = from.idx_;
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerSetIdxRequest)
}

void ViewerControllerSetIdxRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ViewerControllerSetIdxRequest_viewercontroller_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&viewer_controller_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&idx_) -
      reinterpret_cast<char*>(&viewer_controller_)) + sizeof(idx_));
}

ViewerControllerSetIdxRequest::~ViewerControllerSetIdxRequest() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerSetIdxRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ViewerControllerSetIdxRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete viewer_controller_;
}

void ViewerControllerSetIdxRequest::ArenaDtor(void* object) {
  ViewerControllerSetIdxRequest* _this = reinterpret_cast< ViewerControllerSetIdxRequest* >(object);
  (void)_this;
}
void ViewerControllerSetIdxRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ViewerControllerSetIdxRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ViewerControllerSetIdxRequest& ViewerControllerSetIdxRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ViewerControllerSetIdxRequest_viewercontroller_2eproto.base);
  return *internal_default_instance();
}


void ViewerControllerSetIdxRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerSetIdxRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && viewer_controller_ != nullptr) {
    delete viewer_controller_;
  }
  viewer_controller_ = nullptr;
  idx_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ViewerControllerSetIdxRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.ViewerController viewer_controller = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_viewer_controller(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 idx = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          idx_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ViewerControllerSetIdxRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerSetIdxRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.ViewerController viewer_controller = 1;
  if (this->has_viewer_controller()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::viewer_controller(this), target, stream);
  }

  // int32 idx = 2;
  if (this->idx() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_idx(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerSetIdxRequest)
  return target;
}

size_t ViewerControllerSetIdxRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerSetIdxRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .osirixgrpc.ViewerController viewer_controller = 1;
  if (this->has_viewer_controller()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *viewer_controller_);
  }

  // int32 idx = 2;
  if (this->idx() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_idx());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ViewerControllerSetIdxRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.ViewerControllerSetIdxRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ViewerControllerSetIdxRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ViewerControllerSetIdxRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.ViewerControllerSetIdxRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.ViewerControllerSetIdxRequest)
    MergeFrom(*source);
  }
}

void ViewerControllerSetIdxRequest::MergeFrom(const ViewerControllerSetIdxRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerSetIdxRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_viewer_controller()) {
    _internal_mutable_viewer_controller()->::osirixgrpc::ViewerController::MergeFrom(from._internal_viewer_controller());
  }
  if (from.idx() != 0) {
    _internal_set_idx(from._internal_idx());
  }
}

void ViewerControllerSetIdxRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.ViewerControllerSetIdxRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ViewerControllerSetIdxRequest::CopyFrom(const ViewerControllerSetIdxRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerSetIdxRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewerControllerSetIdxRequest::IsInitialized() const {
  return true;
}

void ViewerControllerSetIdxRequest::InternalSwap(ViewerControllerSetIdxRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ViewerControllerSetIdxRequest, idx_)
      + sizeof(ViewerControllerSetIdxRequest::idx_)
      - PROTOBUF_FIELD_OFFSET(ViewerControllerSetIdxRequest, viewer_controller_)>(
          reinterpret_cast<char*>(&viewer_controller_),
          reinterpret_cast<char*>(&other->viewer_controller_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ViewerControllerSetIdxRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ViewerControllerSetWLWWRequest::_Internal {
 public:
  static const ::osirixgrpc::ViewerController& viewer_controller(const ViewerControllerSetWLWWRequest* msg);
};

const ::osirixgrpc::ViewerController&
ViewerControllerSetWLWWRequest::_Internal::viewer_controller(const ViewerControllerSetWLWWRequest* msg) {
  return *msg->viewer_controller_;
}
void ViewerControllerSetWLWWRequest::clear_viewer_controller() {
  if (GetArena() == nullptr && viewer_controller_ != nullptr) {
    delete viewer_controller_;
  }
  viewer_controller_ = nullptr;
}
ViewerControllerSetWLWWRequest::ViewerControllerSetWLWWRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerSetWLWWRequest)
}
ViewerControllerSetWLWWRequest::ViewerControllerSetWLWWRequest(const ViewerControllerSetWLWWRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_viewer_controller()) {
    viewer_controller_ = new ::osirixgrpc::ViewerController(*from.viewer_controller_);
  } else {
    viewer_controller_ = nullptr;
  }
  ::memcpy(&wl_, &from.wl_,
    static_cast<size_t>(reinterpret_cast<char*>(&ww_) -
    reinterpret_cast<char*>(&wl_)) + sizeof(ww_));
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerSetWLWWRequest)
}

void ViewerControllerSetWLWWRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ViewerControllerSetWLWWRequest_viewercontroller_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&viewer_controller_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&ww_) -
      reinterpret_cast<char*>(&viewer_controller_)) + sizeof(ww_));
}

ViewerControllerSetWLWWRequest::~ViewerControllerSetWLWWRequest() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerSetWLWWRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ViewerControllerSetWLWWRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete viewer_controller_;
}

void ViewerControllerSetWLWWRequest::ArenaDtor(void* object) {
  ViewerControllerSetWLWWRequest* _this = reinterpret_cast< ViewerControllerSetWLWWRequest* >(object);
  (void)_this;
}
void ViewerControllerSetWLWWRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ViewerControllerSetWLWWRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ViewerControllerSetWLWWRequest& ViewerControllerSetWLWWRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ViewerControllerSetWLWWRequest_viewercontroller_2eproto.base);
  return *internal_default_instance();
}


void ViewerControllerSetWLWWRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerSetWLWWRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && viewer_controller_ != nullptr) {
    delete viewer_controller_;
  }
  viewer_controller_ = nullptr;
  ::memset(&wl_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ww_) -
      reinterpret_cast<char*>(&wl_)) + sizeof(ww_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ViewerControllerSetWLWWRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.ViewerController viewer_controller = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_viewer_controller(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float wl = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          wl_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float ww = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29)) {
          ww_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ViewerControllerSetWLWWRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerSetWLWWRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.ViewerController viewer_controller = 1;
  if (this->has_viewer_controller()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::viewer_controller(this), target, stream);
  }

  // float wl = 2;
  if (!(this->wl() <= 0 && this->wl() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_wl(), target);
  }

  // float ww = 3;
  if (!(this->ww() <= 0 && this->ww() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3, this->_internal_ww(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerSetWLWWRequest)
  return target;
}

size_t ViewerControllerSetWLWWRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerSetWLWWRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .osirixgrpc.ViewerController viewer_controller = 1;
  if (this->has_viewer_controller()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *viewer_controller_);
  }

  // float wl = 2;
  if (!(this->wl() <= 0 && this->wl() >= 0)) {
    total_size += 1 + 4;
  }

  // float ww = 3;
  if (!(this->ww() <= 0 && this->ww() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ViewerControllerSetWLWWRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.ViewerControllerSetWLWWRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ViewerControllerSetWLWWRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ViewerControllerSetWLWWRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.ViewerControllerSetWLWWRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.ViewerControllerSetWLWWRequest)
    MergeFrom(*source);
  }
}

void ViewerControllerSetWLWWRequest::MergeFrom(const ViewerControllerSetWLWWRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerSetWLWWRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_viewer_controller()) {
    _internal_mutable_viewer_controller()->::osirixgrpc::ViewerController::MergeFrom(from._internal_viewer_controller());
  }
  if (!(from.wl() <= 0 && from.wl() >= 0)) {
    _internal_set_wl(from._internal_wl());
  }
  if (!(from.ww() <= 0 && from.ww() >= 0)) {
    _internal_set_ww(from._internal_ww());
  }
}

void ViewerControllerSetWLWWRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.ViewerControllerSetWLWWRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ViewerControllerSetWLWWRequest::CopyFrom(const ViewerControllerSetWLWWRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerSetWLWWRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewerControllerSetWLWWRequest::IsInitialized() const {
  return true;
}

void ViewerControllerSetWLWWRequest::InternalSwap(ViewerControllerSetWLWWRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ViewerControllerSetWLWWRequest, ww_)
      + sizeof(ViewerControllerSetWLWWRequest::ww_)
      - PROTOBUF_FIELD_OFFSET(ViewerControllerSetWLWWRequest, viewer_controller_)>(
          reinterpret_cast<char*>(&viewer_controller_),
          reinterpret_cast<char*>(&other->viewer_controller_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ViewerControllerSetWLWWRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ViewerControllerOpenVRViewerForModeRequest::_Internal {
 public:
  static const ::osirixgrpc::ViewerController& viewer_controller(const ViewerControllerOpenVRViewerForModeRequest* msg);
};

const ::osirixgrpc::ViewerController&
ViewerControllerOpenVRViewerForModeRequest::_Internal::viewer_controller(const ViewerControllerOpenVRViewerForModeRequest* msg) {
  return *msg->viewer_controller_;
}
void ViewerControllerOpenVRViewerForModeRequest::clear_viewer_controller() {
  if (GetArena() == nullptr && viewer_controller_ != nullptr) {
    delete viewer_controller_;
  }
  viewer_controller_ = nullptr;
}
ViewerControllerOpenVRViewerForModeRequest::ViewerControllerOpenVRViewerForModeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ViewerControllerOpenVRViewerForModeRequest)
}
ViewerControllerOpenVRViewerForModeRequest::ViewerControllerOpenVRViewerForModeRequest(const ViewerControllerOpenVRViewerForModeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  mode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mode().empty()) {
    mode_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_mode(), 
      GetArena());
  }
  if (from._internal_has_viewer_controller()) {
    viewer_controller_ = new ::osirixgrpc::ViewerController(*from.viewer_controller_);
  } else {
    viewer_controller_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ViewerControllerOpenVRViewerForModeRequest)
}

void ViewerControllerOpenVRViewerForModeRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ViewerControllerOpenVRViewerForModeRequest_viewercontroller_2eproto.base);
  mode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  viewer_controller_ = nullptr;
}

ViewerControllerOpenVRViewerForModeRequest::~ViewerControllerOpenVRViewerForModeRequest() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ViewerControllerOpenVRViewerForModeRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ViewerControllerOpenVRViewerForModeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  mode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete viewer_controller_;
}

void ViewerControllerOpenVRViewerForModeRequest::ArenaDtor(void* object) {
  ViewerControllerOpenVRViewerForModeRequest* _this = reinterpret_cast< ViewerControllerOpenVRViewerForModeRequest* >(object);
  (void)_this;
}
void ViewerControllerOpenVRViewerForModeRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ViewerControllerOpenVRViewerForModeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ViewerControllerOpenVRViewerForModeRequest& ViewerControllerOpenVRViewerForModeRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ViewerControllerOpenVRViewerForModeRequest_viewercontroller_2eproto.base);
  return *internal_default_instance();
}


void ViewerControllerOpenVRViewerForModeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ViewerControllerOpenVRViewerForModeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mode_.ClearToEmpty();
  if (GetArena() == nullptr && viewer_controller_ != nullptr) {
    delete viewer_controller_;
  }
  viewer_controller_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ViewerControllerOpenVRViewerForModeRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.ViewerController viewer_controller = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_viewer_controller(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string mode = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_mode();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "osirixgrpc.ViewerControllerOpenVRViewerForModeRequest.mode"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ViewerControllerOpenVRViewerForModeRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ViewerControllerOpenVRViewerForModeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.ViewerController viewer_controller = 1;
  if (this->has_viewer_controller()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::viewer_controller(this), target, stream);
  }

  // string mode = 2;
  if (this->mode().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mode().data(), static_cast<int>(this->_internal_mode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "osirixgrpc.ViewerControllerOpenVRViewerForModeRequest.mode");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_mode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ViewerControllerOpenVRViewerForModeRequest)
  return target;
}

size_t ViewerControllerOpenVRViewerForModeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ViewerControllerOpenVRViewerForModeRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string mode = 2;
  if (this->mode().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mode());
  }

  // .osirixgrpc.ViewerController viewer_controller = 1;
  if (this->has_viewer_controller()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *viewer_controller_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ViewerControllerOpenVRViewerForModeRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.ViewerControllerOpenVRViewerForModeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ViewerControllerOpenVRViewerForModeRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ViewerControllerOpenVRViewerForModeRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.ViewerControllerOpenVRViewerForModeRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.ViewerControllerOpenVRViewerForModeRequest)
    MergeFrom(*source);
  }
}

void ViewerControllerOpenVRViewerForModeRequest::MergeFrom(const ViewerControllerOpenVRViewerForModeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ViewerControllerOpenVRViewerForModeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mode().size() > 0) {
    _internal_set_mode(from._internal_mode());
  }
  if (from.has_viewer_controller()) {
    _internal_mutable_viewer_controller()->::osirixgrpc::ViewerController::MergeFrom(from._internal_viewer_controller());
  }
}

void ViewerControllerOpenVRViewerForModeRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.ViewerControllerOpenVRViewerForModeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ViewerControllerOpenVRViewerForModeRequest::CopyFrom(const ViewerControllerOpenVRViewerForModeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ViewerControllerOpenVRViewerForModeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewerControllerOpenVRViewerForModeRequest::IsInitialized() const {
  return true;
}

void ViewerControllerOpenVRViewerForModeRequest::InternalSwap(ViewerControllerOpenVRViewerForModeRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  mode_.Swap(&other->mode_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(viewer_controller_, other->viewer_controller_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ViewerControllerOpenVRViewerForModeRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace osirixgrpc
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::osirixgrpc::ViewerControllerPixListResponse* Arena::CreateMaybeMessage< ::osirixgrpc::ViewerControllerPixListResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::ViewerControllerPixListResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::ViewerControllerROIListResponse_ROISlice* Arena::CreateMaybeMessage< ::osirixgrpc::ViewerControllerROIListResponse_ROISlice >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::ViewerControllerROIListResponse_ROISlice >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::ViewerControllerROIListResponse* Arena::CreateMaybeMessage< ::osirixgrpc::ViewerControllerROIListResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::ViewerControllerROIListResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::ViewerControllerNewROIResponse* Arena::CreateMaybeMessage< ::osirixgrpc::ViewerControllerNewROIResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::ViewerControllerNewROIResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::ViewerControllerCurDCMResponse* Arena::CreateMaybeMessage< ::osirixgrpc::ViewerControllerCurDCMResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::ViewerControllerCurDCMResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::ViewerControllerROIsWithNameResponse* Arena::CreateMaybeMessage< ::osirixgrpc::ViewerControllerROIsWithNameResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::ViewerControllerROIsWithNameResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::ViewerControllerSelectedROIsResponse* Arena::CreateMaybeMessage< ::osirixgrpc::ViewerControllerSelectedROIsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::ViewerControllerSelectedROIsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::ViewerControllerIsDataVolumicResponse* Arena::CreateMaybeMessage< ::osirixgrpc::ViewerControllerIsDataVolumicResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::ViewerControllerIsDataVolumicResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::ViewerControllerBlendingControllerResponse* Arena::CreateMaybeMessage< ::osirixgrpc::ViewerControllerBlendingControllerResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::ViewerControllerBlendingControllerResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::ViewerControllerVRControllersResponse* Arena::CreateMaybeMessage< ::osirixgrpc::ViewerControllerVRControllersResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::ViewerControllerVRControllersResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::ViewerControllerTitleResponse* Arena::CreateMaybeMessage< ::osirixgrpc::ViewerControllerTitleResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::ViewerControllerTitleResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::ViewerControllerModalityResponse* Arena::CreateMaybeMessage< ::osirixgrpc::ViewerControllerModalityResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::ViewerControllerModalityResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::ViewerControllerMovieIdxResponse* Arena::CreateMaybeMessage< ::osirixgrpc::ViewerControllerMovieIdxResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::ViewerControllerMovieIdxResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::ViewerControllerMaxMovieIdxResponse* Arena::CreateMaybeMessage< ::osirixgrpc::ViewerControllerMaxMovieIdxResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::ViewerControllerMaxMovieIdxResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::ViewerControllerIdxResponse* Arena::CreateMaybeMessage< ::osirixgrpc::ViewerControllerIdxResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::ViewerControllerIdxResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::ViewerControllerWLWWResponse* Arena::CreateMaybeMessage< ::osirixgrpc::ViewerControllerWLWWResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::ViewerControllerWLWWResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::ViewerControllerOpenVRViewerForModeResponse* Arena::CreateMaybeMessage< ::osirixgrpc::ViewerControllerOpenVRViewerForModeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::ViewerControllerOpenVRViewerForModeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::ViewerControllerPixListRequest* Arena::CreateMaybeMessage< ::osirixgrpc::ViewerControllerPixListRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::ViewerControllerPixListRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::ViewerControllerROIListRequest* Arena::CreateMaybeMessage< ::osirixgrpc::ViewerControllerROIListRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::ViewerControllerROIListRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::ViewerControllerNewROIRequest_Buffer* Arena::CreateMaybeMessage< ::osirixgrpc::ViewerControllerNewROIRequest_Buffer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::ViewerControllerNewROIRequest_Buffer >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::ViewerControllerNewROIRequest_Point2D* Arena::CreateMaybeMessage< ::osirixgrpc::ViewerControllerNewROIRequest_Point2D >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::ViewerControllerNewROIRequest_Point2D >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::ViewerControllerNewROIRequest_Color* Arena::CreateMaybeMessage< ::osirixgrpc::ViewerControllerNewROIRequest_Color >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::ViewerControllerNewROIRequest_Color >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::ViewerControllerNewROIRequest_Rect* Arena::CreateMaybeMessage< ::osirixgrpc::ViewerControllerNewROIRequest_Rect >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::ViewerControllerNewROIRequest_Rect >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::ViewerControllerNewROIRequest* Arena::CreateMaybeMessage< ::osirixgrpc::ViewerControllerNewROIRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::ViewerControllerNewROIRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::ViewerControllerROIsWithNameRequest* Arena::CreateMaybeMessage< ::osirixgrpc::ViewerControllerROIsWithNameRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::ViewerControllerROIsWithNameRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::ViewerControllerResampleViewerControllerRequest* Arena::CreateMaybeMessage< ::osirixgrpc::ViewerControllerResampleViewerControllerRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::ViewerControllerResampleViewerControllerRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::ViewerControllerCopyViewerWindowRequest* Arena::CreateMaybeMessage< ::osirixgrpc::ViewerControllerCopyViewerWindowRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::ViewerControllerCopyViewerWindowRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::ViewerControllerSetMovieIdxRequest* Arena::CreateMaybeMessage< ::osirixgrpc::ViewerControllerSetMovieIdxRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::ViewerControllerSetMovieIdxRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::ViewerControllerIsDataVolumicRequest* Arena::CreateMaybeMessage< ::osirixgrpc::ViewerControllerIsDataVolumicRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::ViewerControllerIsDataVolumicRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::ViewerControllerSetIdxRequest* Arena::CreateMaybeMessage< ::osirixgrpc::ViewerControllerSetIdxRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::ViewerControllerSetIdxRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::ViewerControllerSetWLWWRequest* Arena::CreateMaybeMessage< ::osirixgrpc::ViewerControllerSetWLWWRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::ViewerControllerSetWLWWRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::ViewerControllerOpenVRViewerForModeRequest* Arena::CreateMaybeMessage< ::osirixgrpc::ViewerControllerOpenVRViewerForModeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::ViewerControllerOpenVRViewerForModeRequest >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
