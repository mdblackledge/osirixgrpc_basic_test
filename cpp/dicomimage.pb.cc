// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dicomimage.proto

#include "dicomimage.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_types_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DicomSeries_types_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_utilities_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Status_utilities_2eproto;
namespace osirixgrpc {
class DicomImageWidthResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DicomImageWidthResponse> _instance;
} _DicomImageWidthResponse_default_instance_;
class DicomImageHeightResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DicomImageHeightResponse> _instance;
} _DicomImageHeightResponse_default_instance_;
class DicomImageSOPInstanceUIDResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DicomImageSOPInstanceUIDResponse> _instance;
} _DicomImageSOPInstanceUIDResponse_default_instance_;
class DicomImageCompletePathResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DicomImageCompletePathResponse> _instance;
} _DicomImageCompletePathResponse_default_instance_;
class DicomImageDateResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DicomImageDateResponse> _instance;
} _DicomImageDateResponse_default_instance_;
class DicomImageNumberOfFramesResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DicomImageNumberOfFramesResponse> _instance;
} _DicomImageNumberOfFramesResponse_default_instance_;
class DicomImageModalityResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DicomImageModalityResponse> _instance;
} _DicomImageModalityResponse_default_instance_;
class DicomImageSeriesResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DicomImageSeriesResponse> _instance;
} _DicomImageSeriesResponse_default_instance_;
class DicomImageSliceLocationResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DicomImageSliceLocationResponse> _instance;
} _DicomImageSliceLocationResponse_default_instance_;
class DicomImageInstanceNumberResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DicomImageInstanceNumberResponse> _instance;
} _DicomImageInstanceNumberResponse_default_instance_;
}  // namespace osirixgrpc
static void InitDefaultsscc_info_DicomImageCompletePathResponse_dicomimage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_DicomImageCompletePathResponse_default_instance_;
    new (ptr) ::osirixgrpc::DicomImageCompletePathResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DicomImageCompletePathResponse_dicomimage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DicomImageCompletePathResponse_dicomimage_2eproto}, {
      &scc_info_Status_utilities_2eproto.base,}};

static void InitDefaultsscc_info_DicomImageDateResponse_dicomimage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_DicomImageDateResponse_default_instance_;
    new (ptr) ::osirixgrpc::DicomImageDateResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DicomImageDateResponse_dicomimage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DicomImageDateResponse_dicomimage_2eproto}, {
      &scc_info_Status_utilities_2eproto.base,}};

static void InitDefaultsscc_info_DicomImageHeightResponse_dicomimage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_DicomImageHeightResponse_default_instance_;
    new (ptr) ::osirixgrpc::DicomImageHeightResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DicomImageHeightResponse_dicomimage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DicomImageHeightResponse_dicomimage_2eproto}, {
      &scc_info_Status_utilities_2eproto.base,}};

static void InitDefaultsscc_info_DicomImageInstanceNumberResponse_dicomimage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_DicomImageInstanceNumberResponse_default_instance_;
    new (ptr) ::osirixgrpc::DicomImageInstanceNumberResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DicomImageInstanceNumberResponse_dicomimage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DicomImageInstanceNumberResponse_dicomimage_2eproto}, {
      &scc_info_Status_utilities_2eproto.base,}};

static void InitDefaultsscc_info_DicomImageModalityResponse_dicomimage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_DicomImageModalityResponse_default_instance_;
    new (ptr) ::osirixgrpc::DicomImageModalityResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DicomImageModalityResponse_dicomimage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DicomImageModalityResponse_dicomimage_2eproto}, {
      &scc_info_Status_utilities_2eproto.base,}};

static void InitDefaultsscc_info_DicomImageNumberOfFramesResponse_dicomimage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_DicomImageNumberOfFramesResponse_default_instance_;
    new (ptr) ::osirixgrpc::DicomImageNumberOfFramesResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DicomImageNumberOfFramesResponse_dicomimage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DicomImageNumberOfFramesResponse_dicomimage_2eproto}, {
      &scc_info_Status_utilities_2eproto.base,}};

static void InitDefaultsscc_info_DicomImageSOPInstanceUIDResponse_dicomimage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_DicomImageSOPInstanceUIDResponse_default_instance_;
    new (ptr) ::osirixgrpc::DicomImageSOPInstanceUIDResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DicomImageSOPInstanceUIDResponse_dicomimage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DicomImageSOPInstanceUIDResponse_dicomimage_2eproto}, {
      &scc_info_Status_utilities_2eproto.base,}};

static void InitDefaultsscc_info_DicomImageSeriesResponse_dicomimage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_DicomImageSeriesResponse_default_instance_;
    new (ptr) ::osirixgrpc::DicomImageSeriesResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_DicomImageSeriesResponse_dicomimage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_DicomImageSeriesResponse_dicomimage_2eproto}, {
      &scc_info_Status_utilities_2eproto.base,
      &scc_info_DicomSeries_types_2eproto.base,}};

static void InitDefaultsscc_info_DicomImageSliceLocationResponse_dicomimage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_DicomImageSliceLocationResponse_default_instance_;
    new (ptr) ::osirixgrpc::DicomImageSliceLocationResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DicomImageSliceLocationResponse_dicomimage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DicomImageSliceLocationResponse_dicomimage_2eproto}, {
      &scc_info_Status_utilities_2eproto.base,}};

static void InitDefaultsscc_info_DicomImageWidthResponse_dicomimage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_DicomImageWidthResponse_default_instance_;
    new (ptr) ::osirixgrpc::DicomImageWidthResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DicomImageWidthResponse_dicomimage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DicomImageWidthResponse_dicomimage_2eproto}, {
      &scc_info_Status_utilities_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_dicomimage_2eproto[10];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_dicomimage_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_dicomimage_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_dicomimage_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomImageWidthResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomImageWidthResponse, status_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomImageWidthResponse, width_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomImageHeightResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomImageHeightResponse, status_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomImageHeightResponse, height_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomImageSOPInstanceUIDResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomImageSOPInstanceUIDResponse, status_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomImageSOPInstanceUIDResponse, sop_instance_uid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomImageCompletePathResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomImageCompletePathResponse, status_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomImageCompletePathResponse, path_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomImageDateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomImageDateResponse, status_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomImageDateResponse, year_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomImageDateResponse, month_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomImageDateResponse, day_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomImageDateResponse, hour_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomImageDateResponse, minute_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomImageDateResponse, second_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomImageDateResponse, millisecond_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomImageNumberOfFramesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomImageNumberOfFramesResponse, status_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomImageNumberOfFramesResponse, number_of_frames_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomImageModalityResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomImageModalityResponse, status_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomImageModalityResponse, modality_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomImageSeriesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomImageSeriesResponse, status_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomImageSeriesResponse, series_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomImageSliceLocationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomImageSliceLocationResponse, status_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomImageSliceLocationResponse, slice_locations_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomImageInstanceNumberResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomImageInstanceNumberResponse, status_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomImageInstanceNumberResponse, instance_number_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::osirixgrpc::DicomImageWidthResponse)},
  { 7, -1, sizeof(::osirixgrpc::DicomImageHeightResponse)},
  { 14, -1, sizeof(::osirixgrpc::DicomImageSOPInstanceUIDResponse)},
  { 21, -1, sizeof(::osirixgrpc::DicomImageCompletePathResponse)},
  { 28, -1, sizeof(::osirixgrpc::DicomImageDateResponse)},
  { 41, -1, sizeof(::osirixgrpc::DicomImageNumberOfFramesResponse)},
  { 48, -1, sizeof(::osirixgrpc::DicomImageModalityResponse)},
  { 55, -1, sizeof(::osirixgrpc::DicomImageSeriesResponse)},
  { 62, -1, sizeof(::osirixgrpc::DicomImageSliceLocationResponse)},
  { 69, -1, sizeof(::osirixgrpc::DicomImageInstanceNumberResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_DicomImageWidthResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_DicomImageHeightResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_DicomImageSOPInstanceUIDResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_DicomImageCompletePathResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_DicomImageDateResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_DicomImageNumberOfFramesResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_DicomImageModalityResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_DicomImageSeriesResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_DicomImageSliceLocationResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_DicomImageInstanceNumberResponse_default_instance_),
};

const char descriptor_table_protodef_dicomimage_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\020dicomimage.proto\022\nosirixgrpc\032\017utilitie"
  "s.proto\032\013types.proto\"L\n\027DicomImageWidthR"
  "esponse\022\"\n\006status\030\001 \001(\0132\022.osirixgrpc.Sta"
  "tus\022\r\n\005width\030\002 \001(\r\"N\n\030DicomImageHeightRe"
  "sponse\022\"\n\006status\030\001 \001(\0132\022.osirixgrpc.Stat"
  "us\022\016\n\006height\030\002 \001(\r\"`\n DicomImageSOPInsta"
  "nceUIDResponse\022\"\n\006status\030\001 \001(\0132\022.osirixg"
  "rpc.Status\022\030\n\020sop_instance_uid\030\002 \001(\t\"W\n\036"
  "DicomImageCompletePathResponse\022\"\n\006status"
  "\030\001 \001(\0132\022.osirixgrpc.Status\022\021\n\tpath_name\030"
  "\002 \001(\t\"\251\001\n\026DicomImageDateResponse\022\"\n\006stat"
  "us\030\001 \001(\0132\022.osirixgrpc.Status\022\014\n\004year\030\002 \001"
  "(\005\022\r\n\005month\030\003 \001(\005\022\013\n\003day\030\004 \001(\005\022\014\n\004hour\030\005"
  " \001(\005\022\016\n\006minute\030\006 \001(\005\022\016\n\006second\030\007 \001(\005\022\023\n\013"
  "millisecond\030\010 \001(\005\"`\n DicomImageNumberOfF"
  "ramesResponse\022\"\n\006status\030\001 \001(\0132\022.osirixgr"
  "pc.Status\022\030\n\020number_of_frames\030\002 \001(\r\"R\n\032D"
  "icomImageModalityResponse\022\"\n\006status\030\001 \001("
  "\0132\022.osirixgrpc.Status\022\020\n\010modality\030\002 \001(\t\""
  "g\n\030DicomImageSeriesResponse\022\"\n\006status\030\001 "
  "\001(\0132\022.osirixgrpc.Status\022\'\n\006series\030\002 \001(\0132"
  "\027.osirixgrpc.DicomSeries\"^\n\037DicomImageSl"
  "iceLocationResponse\022\"\n\006status\030\001 \001(\0132\022.os"
  "irixgrpc.Status\022\027\n\017slice_locations\030\002 \001(\002"
  "\"_\n DicomImageInstanceNumberResponse\022\"\n\006"
  "status\030\001 \001(\0132\022.osirixgrpc.Status\022\027\n\017inst"
  "ance_number\030\002 \001(\rb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_dicomimage_2eproto_deps[2] = {
  &::descriptor_table_types_2eproto,
  &::descriptor_table_utilities_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_dicomimage_2eproto_sccs[10] = {
  &scc_info_DicomImageCompletePathResponse_dicomimage_2eproto.base,
  &scc_info_DicomImageDateResponse_dicomimage_2eproto.base,
  &scc_info_DicomImageHeightResponse_dicomimage_2eproto.base,
  &scc_info_DicomImageInstanceNumberResponse_dicomimage_2eproto.base,
  &scc_info_DicomImageModalityResponse_dicomimage_2eproto.base,
  &scc_info_DicomImageNumberOfFramesResponse_dicomimage_2eproto.base,
  &scc_info_DicomImageSOPInstanceUIDResponse_dicomimage_2eproto.base,
  &scc_info_DicomImageSeriesResponse_dicomimage_2eproto.base,
  &scc_info_DicomImageSliceLocationResponse_dicomimage_2eproto.base,
  &scc_info_DicomImageWidthResponse_dicomimage_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_dicomimage_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_dicomimage_2eproto = {
  false, false, descriptor_table_protodef_dicomimage_2eproto, "dicomimage.proto", 1065,
  &descriptor_table_dicomimage_2eproto_once, descriptor_table_dicomimage_2eproto_sccs, descriptor_table_dicomimage_2eproto_deps, 10, 2,
  schemas, file_default_instances, TableStruct_dicomimage_2eproto::offsets,
  file_level_metadata_dicomimage_2eproto, 10, file_level_enum_descriptors_dicomimage_2eproto, file_level_service_descriptors_dicomimage_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_dicomimage_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_dicomimage_2eproto)), true);
namespace osirixgrpc {

// ===================================================================

class DicomImageWidthResponse::_Internal {
 public:
  static const ::osirixgrpc::Status& status(const DicomImageWidthResponse* msg);
};

const ::osirixgrpc::Status&
DicomImageWidthResponse::_Internal::status(const DicomImageWidthResponse* msg) {
  return *msg->status_;
}
void DicomImageWidthResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
DicomImageWidthResponse::DicomImageWidthResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.DicomImageWidthResponse)
}
DicomImageWidthResponse::DicomImageWidthResponse(const DicomImageWidthResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::osirixgrpc::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  width_ = from.width_;
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.DicomImageWidthResponse)
}

void DicomImageWidthResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DicomImageWidthResponse_dicomimage_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&width_) -
      reinterpret_cast<char*>(&status_)) + sizeof(width_));
}

DicomImageWidthResponse::~DicomImageWidthResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.DicomImageWidthResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DicomImageWidthResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void DicomImageWidthResponse::ArenaDtor(void* object) {
  DicomImageWidthResponse* _this = reinterpret_cast< DicomImageWidthResponse* >(object);
  (void)_this;
}
void DicomImageWidthResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DicomImageWidthResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DicomImageWidthResponse& DicomImageWidthResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DicomImageWidthResponse_dicomimage_2eproto.base);
  return *internal_default_instance();
}


void DicomImageWidthResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.DicomImageWidthResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  width_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DicomImageWidthResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 width = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          width_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DicomImageWidthResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.DicomImageWidthResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // uint32 width = 2;
  if (this->width() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_width(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.DicomImageWidthResponse)
  return target;
}

size_t DicomImageWidthResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.DicomImageWidthResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // uint32 width = 2;
  if (this->width() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_width());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DicomImageWidthResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.DicomImageWidthResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DicomImageWidthResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DicomImageWidthResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.DicomImageWidthResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.DicomImageWidthResponse)
    MergeFrom(*source);
  }
}

void DicomImageWidthResponse::MergeFrom(const DicomImageWidthResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.DicomImageWidthResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::osirixgrpc::Status::MergeFrom(from._internal_status());
  }
  if (from.width() != 0) {
    _internal_set_width(from._internal_width());
  }
}

void DicomImageWidthResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.DicomImageWidthResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DicomImageWidthResponse::CopyFrom(const DicomImageWidthResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.DicomImageWidthResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DicomImageWidthResponse::IsInitialized() const {
  return true;
}

void DicomImageWidthResponse::InternalSwap(DicomImageWidthResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DicomImageWidthResponse, width_)
      + sizeof(DicomImageWidthResponse::width_)
      - PROTOBUF_FIELD_OFFSET(DicomImageWidthResponse, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DicomImageWidthResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DicomImageHeightResponse::_Internal {
 public:
  static const ::osirixgrpc::Status& status(const DicomImageHeightResponse* msg);
};

const ::osirixgrpc::Status&
DicomImageHeightResponse::_Internal::status(const DicomImageHeightResponse* msg) {
  return *msg->status_;
}
void DicomImageHeightResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
DicomImageHeightResponse::DicomImageHeightResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.DicomImageHeightResponse)
}
DicomImageHeightResponse::DicomImageHeightResponse(const DicomImageHeightResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::osirixgrpc::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  height_ = from.height_;
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.DicomImageHeightResponse)
}

void DicomImageHeightResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DicomImageHeightResponse_dicomimage_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&status_)) + sizeof(height_));
}

DicomImageHeightResponse::~DicomImageHeightResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.DicomImageHeightResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DicomImageHeightResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void DicomImageHeightResponse::ArenaDtor(void* object) {
  DicomImageHeightResponse* _this = reinterpret_cast< DicomImageHeightResponse* >(object);
  (void)_this;
}
void DicomImageHeightResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DicomImageHeightResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DicomImageHeightResponse& DicomImageHeightResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DicomImageHeightResponse_dicomimage_2eproto.base);
  return *internal_default_instance();
}


void DicomImageHeightResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.DicomImageHeightResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  height_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DicomImageHeightResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 height = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DicomImageHeightResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.DicomImageHeightResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // uint32 height = 2;
  if (this->height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_height(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.DicomImageHeightResponse)
  return target;
}

size_t DicomImageHeightResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.DicomImageHeightResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // uint32 height = 2;
  if (this->height() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_height());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DicomImageHeightResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.DicomImageHeightResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DicomImageHeightResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DicomImageHeightResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.DicomImageHeightResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.DicomImageHeightResponse)
    MergeFrom(*source);
  }
}

void DicomImageHeightResponse::MergeFrom(const DicomImageHeightResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.DicomImageHeightResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::osirixgrpc::Status::MergeFrom(from._internal_status());
  }
  if (from.height() != 0) {
    _internal_set_height(from._internal_height());
  }
}

void DicomImageHeightResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.DicomImageHeightResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DicomImageHeightResponse::CopyFrom(const DicomImageHeightResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.DicomImageHeightResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DicomImageHeightResponse::IsInitialized() const {
  return true;
}

void DicomImageHeightResponse::InternalSwap(DicomImageHeightResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DicomImageHeightResponse, height_)
      + sizeof(DicomImageHeightResponse::height_)
      - PROTOBUF_FIELD_OFFSET(DicomImageHeightResponse, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DicomImageHeightResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DicomImageSOPInstanceUIDResponse::_Internal {
 public:
  static const ::osirixgrpc::Status& status(const DicomImageSOPInstanceUIDResponse* msg);
};

const ::osirixgrpc::Status&
DicomImageSOPInstanceUIDResponse::_Internal::status(const DicomImageSOPInstanceUIDResponse* msg) {
  return *msg->status_;
}
void DicomImageSOPInstanceUIDResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
DicomImageSOPInstanceUIDResponse::DicomImageSOPInstanceUIDResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.DicomImageSOPInstanceUIDResponse)
}
DicomImageSOPInstanceUIDResponse::DicomImageSOPInstanceUIDResponse(const DicomImageSOPInstanceUIDResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  sop_instance_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sop_instance_uid().empty()) {
    sop_instance_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sop_instance_uid(), 
      GetArena());
  }
  if (from._internal_has_status()) {
    status_ = new ::osirixgrpc::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.DicomImageSOPInstanceUIDResponse)
}

void DicomImageSOPInstanceUIDResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DicomImageSOPInstanceUIDResponse_dicomimage_2eproto.base);
  sop_instance_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_ = nullptr;
}

DicomImageSOPInstanceUIDResponse::~DicomImageSOPInstanceUIDResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.DicomImageSOPInstanceUIDResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DicomImageSOPInstanceUIDResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  sop_instance_uid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete status_;
}

void DicomImageSOPInstanceUIDResponse::ArenaDtor(void* object) {
  DicomImageSOPInstanceUIDResponse* _this = reinterpret_cast< DicomImageSOPInstanceUIDResponse* >(object);
  (void)_this;
}
void DicomImageSOPInstanceUIDResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DicomImageSOPInstanceUIDResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DicomImageSOPInstanceUIDResponse& DicomImageSOPInstanceUIDResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DicomImageSOPInstanceUIDResponse_dicomimage_2eproto.base);
  return *internal_default_instance();
}


void DicomImageSOPInstanceUIDResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.DicomImageSOPInstanceUIDResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sop_instance_uid_.ClearToEmpty();
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DicomImageSOPInstanceUIDResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string sop_instance_uid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_sop_instance_uid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "osirixgrpc.DicomImageSOPInstanceUIDResponse.sop_instance_uid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DicomImageSOPInstanceUIDResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.DicomImageSOPInstanceUIDResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // string sop_instance_uid = 2;
  if (this->sop_instance_uid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sop_instance_uid().data(), static_cast<int>(this->_internal_sop_instance_uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "osirixgrpc.DicomImageSOPInstanceUIDResponse.sop_instance_uid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_sop_instance_uid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.DicomImageSOPInstanceUIDResponse)
  return target;
}

size_t DicomImageSOPInstanceUIDResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.DicomImageSOPInstanceUIDResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string sop_instance_uid = 2;
  if (this->sop_instance_uid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sop_instance_uid());
  }

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DicomImageSOPInstanceUIDResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.DicomImageSOPInstanceUIDResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DicomImageSOPInstanceUIDResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DicomImageSOPInstanceUIDResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.DicomImageSOPInstanceUIDResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.DicomImageSOPInstanceUIDResponse)
    MergeFrom(*source);
  }
}

void DicomImageSOPInstanceUIDResponse::MergeFrom(const DicomImageSOPInstanceUIDResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.DicomImageSOPInstanceUIDResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sop_instance_uid().size() > 0) {
    _internal_set_sop_instance_uid(from._internal_sop_instance_uid());
  }
  if (from.has_status()) {
    _internal_mutable_status()->::osirixgrpc::Status::MergeFrom(from._internal_status());
  }
}

void DicomImageSOPInstanceUIDResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.DicomImageSOPInstanceUIDResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DicomImageSOPInstanceUIDResponse::CopyFrom(const DicomImageSOPInstanceUIDResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.DicomImageSOPInstanceUIDResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DicomImageSOPInstanceUIDResponse::IsInitialized() const {
  return true;
}

void DicomImageSOPInstanceUIDResponse::InternalSwap(DicomImageSOPInstanceUIDResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  sop_instance_uid_.Swap(&other->sop_instance_uid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DicomImageSOPInstanceUIDResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DicomImageCompletePathResponse::_Internal {
 public:
  static const ::osirixgrpc::Status& status(const DicomImageCompletePathResponse* msg);
};

const ::osirixgrpc::Status&
DicomImageCompletePathResponse::_Internal::status(const DicomImageCompletePathResponse* msg) {
  return *msg->status_;
}
void DicomImageCompletePathResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
DicomImageCompletePathResponse::DicomImageCompletePathResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.DicomImageCompletePathResponse)
}
DicomImageCompletePathResponse::DicomImageCompletePathResponse(const DicomImageCompletePathResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_path_name().empty()) {
    path_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path_name(), 
      GetArena());
  }
  if (from._internal_has_status()) {
    status_ = new ::osirixgrpc::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.DicomImageCompletePathResponse)
}

void DicomImageCompletePathResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DicomImageCompletePathResponse_dicomimage_2eproto.base);
  path_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_ = nullptr;
}

DicomImageCompletePathResponse::~DicomImageCompletePathResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.DicomImageCompletePathResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DicomImageCompletePathResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete status_;
}

void DicomImageCompletePathResponse::ArenaDtor(void* object) {
  DicomImageCompletePathResponse* _this = reinterpret_cast< DicomImageCompletePathResponse* >(object);
  (void)_this;
}
void DicomImageCompletePathResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DicomImageCompletePathResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DicomImageCompletePathResponse& DicomImageCompletePathResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DicomImageCompletePathResponse_dicomimage_2eproto.base);
  return *internal_default_instance();
}


void DicomImageCompletePathResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.DicomImageCompletePathResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_name_.ClearToEmpty();
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DicomImageCompletePathResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string path_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_path_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "osirixgrpc.DicomImageCompletePathResponse.path_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DicomImageCompletePathResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.DicomImageCompletePathResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // string path_name = 2;
  if (this->path_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path_name().data(), static_cast<int>(this->_internal_path_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "osirixgrpc.DicomImageCompletePathResponse.path_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_path_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.DicomImageCompletePathResponse)
  return target;
}

size_t DicomImageCompletePathResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.DicomImageCompletePathResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path_name = 2;
  if (this->path_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path_name());
  }

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DicomImageCompletePathResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.DicomImageCompletePathResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DicomImageCompletePathResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DicomImageCompletePathResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.DicomImageCompletePathResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.DicomImageCompletePathResponse)
    MergeFrom(*source);
  }
}

void DicomImageCompletePathResponse::MergeFrom(const DicomImageCompletePathResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.DicomImageCompletePathResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path_name().size() > 0) {
    _internal_set_path_name(from._internal_path_name());
  }
  if (from.has_status()) {
    _internal_mutable_status()->::osirixgrpc::Status::MergeFrom(from._internal_status());
  }
}

void DicomImageCompletePathResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.DicomImageCompletePathResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DicomImageCompletePathResponse::CopyFrom(const DicomImageCompletePathResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.DicomImageCompletePathResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DicomImageCompletePathResponse::IsInitialized() const {
  return true;
}

void DicomImageCompletePathResponse::InternalSwap(DicomImageCompletePathResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  path_name_.Swap(&other->path_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DicomImageCompletePathResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DicomImageDateResponse::_Internal {
 public:
  static const ::osirixgrpc::Status& status(const DicomImageDateResponse* msg);
};

const ::osirixgrpc::Status&
DicomImageDateResponse::_Internal::status(const DicomImageDateResponse* msg) {
  return *msg->status_;
}
void DicomImageDateResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
DicomImageDateResponse::DicomImageDateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.DicomImageDateResponse)
}
DicomImageDateResponse::DicomImageDateResponse(const DicomImageDateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::osirixgrpc::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  ::memcpy(&year_, &from.year_,
    static_cast<size_t>(reinterpret_cast<char*>(&millisecond_) -
    reinterpret_cast<char*>(&year_)) + sizeof(millisecond_));
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.DicomImageDateResponse)
}

void DicomImageDateResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DicomImageDateResponse_dicomimage_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&millisecond_) -
      reinterpret_cast<char*>(&status_)) + sizeof(millisecond_));
}

DicomImageDateResponse::~DicomImageDateResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.DicomImageDateResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DicomImageDateResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void DicomImageDateResponse::ArenaDtor(void* object) {
  DicomImageDateResponse* _this = reinterpret_cast< DicomImageDateResponse* >(object);
  (void)_this;
}
void DicomImageDateResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DicomImageDateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DicomImageDateResponse& DicomImageDateResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DicomImageDateResponse_dicomimage_2eproto.base);
  return *internal_default_instance();
}


void DicomImageDateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.DicomImageDateResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  ::memset(&year_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&millisecond_) -
      reinterpret_cast<char*>(&year_)) + sizeof(millisecond_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DicomImageDateResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 year = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          year_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 month = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          month_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 day = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          day_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 hour = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          hour_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 minute = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          minute_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 second = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          second_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 millisecond = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          millisecond_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DicomImageDateResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.DicomImageDateResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // int32 year = 2;
  if (this->year() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_year(), target);
  }

  // int32 month = 3;
  if (this->month() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_month(), target);
  }

  // int32 day = 4;
  if (this->day() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_day(), target);
  }

  // int32 hour = 5;
  if (this->hour() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_hour(), target);
  }

  // int32 minute = 6;
  if (this->minute() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_minute(), target);
  }

  // int32 second = 7;
  if (this->second() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_second(), target);
  }

  // int32 millisecond = 8;
  if (this->millisecond() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->_internal_millisecond(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.DicomImageDateResponse)
  return target;
}

size_t DicomImageDateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.DicomImageDateResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // int32 year = 2;
  if (this->year() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_year());
  }

  // int32 month = 3;
  if (this->month() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_month());
  }

  // int32 day = 4;
  if (this->day() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_day());
  }

  // int32 hour = 5;
  if (this->hour() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_hour());
  }

  // int32 minute = 6;
  if (this->minute() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_minute());
  }

  // int32 second = 7;
  if (this->second() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_second());
  }

  // int32 millisecond = 8;
  if (this->millisecond() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_millisecond());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DicomImageDateResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.DicomImageDateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DicomImageDateResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DicomImageDateResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.DicomImageDateResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.DicomImageDateResponse)
    MergeFrom(*source);
  }
}

void DicomImageDateResponse::MergeFrom(const DicomImageDateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.DicomImageDateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::osirixgrpc::Status::MergeFrom(from._internal_status());
  }
  if (from.year() != 0) {
    _internal_set_year(from._internal_year());
  }
  if (from.month() != 0) {
    _internal_set_month(from._internal_month());
  }
  if (from.day() != 0) {
    _internal_set_day(from._internal_day());
  }
  if (from.hour() != 0) {
    _internal_set_hour(from._internal_hour());
  }
  if (from.minute() != 0) {
    _internal_set_minute(from._internal_minute());
  }
  if (from.second() != 0) {
    _internal_set_second(from._internal_second());
  }
  if (from.millisecond() != 0) {
    _internal_set_millisecond(from._internal_millisecond());
  }
}

void DicomImageDateResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.DicomImageDateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DicomImageDateResponse::CopyFrom(const DicomImageDateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.DicomImageDateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DicomImageDateResponse::IsInitialized() const {
  return true;
}

void DicomImageDateResponse::InternalSwap(DicomImageDateResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DicomImageDateResponse, millisecond_)
      + sizeof(DicomImageDateResponse::millisecond_)
      - PROTOBUF_FIELD_OFFSET(DicomImageDateResponse, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DicomImageDateResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DicomImageNumberOfFramesResponse::_Internal {
 public:
  static const ::osirixgrpc::Status& status(const DicomImageNumberOfFramesResponse* msg);
};

const ::osirixgrpc::Status&
DicomImageNumberOfFramesResponse::_Internal::status(const DicomImageNumberOfFramesResponse* msg) {
  return *msg->status_;
}
void DicomImageNumberOfFramesResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
DicomImageNumberOfFramesResponse::DicomImageNumberOfFramesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.DicomImageNumberOfFramesResponse)
}
DicomImageNumberOfFramesResponse::DicomImageNumberOfFramesResponse(const DicomImageNumberOfFramesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::osirixgrpc::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  number_of_frames_ = from.number_of_frames_;
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.DicomImageNumberOfFramesResponse)
}

void DicomImageNumberOfFramesResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DicomImageNumberOfFramesResponse_dicomimage_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&number_of_frames_) -
      reinterpret_cast<char*>(&status_)) + sizeof(number_of_frames_));
}

DicomImageNumberOfFramesResponse::~DicomImageNumberOfFramesResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.DicomImageNumberOfFramesResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DicomImageNumberOfFramesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void DicomImageNumberOfFramesResponse::ArenaDtor(void* object) {
  DicomImageNumberOfFramesResponse* _this = reinterpret_cast< DicomImageNumberOfFramesResponse* >(object);
  (void)_this;
}
void DicomImageNumberOfFramesResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DicomImageNumberOfFramesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DicomImageNumberOfFramesResponse& DicomImageNumberOfFramesResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DicomImageNumberOfFramesResponse_dicomimage_2eproto.base);
  return *internal_default_instance();
}


void DicomImageNumberOfFramesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.DicomImageNumberOfFramesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  number_of_frames_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DicomImageNumberOfFramesResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 number_of_frames = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          number_of_frames_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DicomImageNumberOfFramesResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.DicomImageNumberOfFramesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // uint32 number_of_frames = 2;
  if (this->number_of_frames() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_number_of_frames(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.DicomImageNumberOfFramesResponse)
  return target;
}

size_t DicomImageNumberOfFramesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.DicomImageNumberOfFramesResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // uint32 number_of_frames = 2;
  if (this->number_of_frames() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_number_of_frames());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DicomImageNumberOfFramesResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.DicomImageNumberOfFramesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DicomImageNumberOfFramesResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DicomImageNumberOfFramesResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.DicomImageNumberOfFramesResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.DicomImageNumberOfFramesResponse)
    MergeFrom(*source);
  }
}

void DicomImageNumberOfFramesResponse::MergeFrom(const DicomImageNumberOfFramesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.DicomImageNumberOfFramesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::osirixgrpc::Status::MergeFrom(from._internal_status());
  }
  if (from.number_of_frames() != 0) {
    _internal_set_number_of_frames(from._internal_number_of_frames());
  }
}

void DicomImageNumberOfFramesResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.DicomImageNumberOfFramesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DicomImageNumberOfFramesResponse::CopyFrom(const DicomImageNumberOfFramesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.DicomImageNumberOfFramesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DicomImageNumberOfFramesResponse::IsInitialized() const {
  return true;
}

void DicomImageNumberOfFramesResponse::InternalSwap(DicomImageNumberOfFramesResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DicomImageNumberOfFramesResponse, number_of_frames_)
      + sizeof(DicomImageNumberOfFramesResponse::number_of_frames_)
      - PROTOBUF_FIELD_OFFSET(DicomImageNumberOfFramesResponse, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DicomImageNumberOfFramesResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DicomImageModalityResponse::_Internal {
 public:
  static const ::osirixgrpc::Status& status(const DicomImageModalityResponse* msg);
};

const ::osirixgrpc::Status&
DicomImageModalityResponse::_Internal::status(const DicomImageModalityResponse* msg) {
  return *msg->status_;
}
void DicomImageModalityResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
DicomImageModalityResponse::DicomImageModalityResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.DicomImageModalityResponse)
}
DicomImageModalityResponse::DicomImageModalityResponse(const DicomImageModalityResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  modality_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_modality().empty()) {
    modality_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_modality(), 
      GetArena());
  }
  if (from._internal_has_status()) {
    status_ = new ::osirixgrpc::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.DicomImageModalityResponse)
}

void DicomImageModalityResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DicomImageModalityResponse_dicomimage_2eproto.base);
  modality_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_ = nullptr;
}

DicomImageModalityResponse::~DicomImageModalityResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.DicomImageModalityResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DicomImageModalityResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  modality_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete status_;
}

void DicomImageModalityResponse::ArenaDtor(void* object) {
  DicomImageModalityResponse* _this = reinterpret_cast< DicomImageModalityResponse* >(object);
  (void)_this;
}
void DicomImageModalityResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DicomImageModalityResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DicomImageModalityResponse& DicomImageModalityResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DicomImageModalityResponse_dicomimage_2eproto.base);
  return *internal_default_instance();
}


void DicomImageModalityResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.DicomImageModalityResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  modality_.ClearToEmpty();
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DicomImageModalityResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string modality = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_modality();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "osirixgrpc.DicomImageModalityResponse.modality"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DicomImageModalityResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.DicomImageModalityResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // string modality = 2;
  if (this->modality().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_modality().data(), static_cast<int>(this->_internal_modality().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "osirixgrpc.DicomImageModalityResponse.modality");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_modality(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.DicomImageModalityResponse)
  return target;
}

size_t DicomImageModalityResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.DicomImageModalityResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string modality = 2;
  if (this->modality().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_modality());
  }

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DicomImageModalityResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.DicomImageModalityResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DicomImageModalityResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DicomImageModalityResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.DicomImageModalityResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.DicomImageModalityResponse)
    MergeFrom(*source);
  }
}

void DicomImageModalityResponse::MergeFrom(const DicomImageModalityResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.DicomImageModalityResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.modality().size() > 0) {
    _internal_set_modality(from._internal_modality());
  }
  if (from.has_status()) {
    _internal_mutable_status()->::osirixgrpc::Status::MergeFrom(from._internal_status());
  }
}

void DicomImageModalityResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.DicomImageModalityResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DicomImageModalityResponse::CopyFrom(const DicomImageModalityResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.DicomImageModalityResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DicomImageModalityResponse::IsInitialized() const {
  return true;
}

void DicomImageModalityResponse::InternalSwap(DicomImageModalityResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  modality_.Swap(&other->modality_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DicomImageModalityResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DicomImageSeriesResponse::_Internal {
 public:
  static const ::osirixgrpc::Status& status(const DicomImageSeriesResponse* msg);
  static const ::osirixgrpc::DicomSeries& series(const DicomImageSeriesResponse* msg);
};

const ::osirixgrpc::Status&
DicomImageSeriesResponse::_Internal::status(const DicomImageSeriesResponse* msg) {
  return *msg->status_;
}
const ::osirixgrpc::DicomSeries&
DicomImageSeriesResponse::_Internal::series(const DicomImageSeriesResponse* msg) {
  return *msg->series_;
}
void DicomImageSeriesResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
void DicomImageSeriesResponse::clear_series() {
  if (GetArena() == nullptr && series_ != nullptr) {
    delete series_;
  }
  series_ = nullptr;
}
DicomImageSeriesResponse::DicomImageSeriesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.DicomImageSeriesResponse)
}
DicomImageSeriesResponse::DicomImageSeriesResponse(const DicomImageSeriesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::osirixgrpc::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  if (from._internal_has_series()) {
    series_ = new ::osirixgrpc::DicomSeries(*from.series_);
  } else {
    series_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.DicomImageSeriesResponse)
}

void DicomImageSeriesResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DicomImageSeriesResponse_dicomimage_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&series_) -
      reinterpret_cast<char*>(&status_)) + sizeof(series_));
}

DicomImageSeriesResponse::~DicomImageSeriesResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.DicomImageSeriesResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DicomImageSeriesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete series_;
}

void DicomImageSeriesResponse::ArenaDtor(void* object) {
  DicomImageSeriesResponse* _this = reinterpret_cast< DicomImageSeriesResponse* >(object);
  (void)_this;
}
void DicomImageSeriesResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DicomImageSeriesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DicomImageSeriesResponse& DicomImageSeriesResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DicomImageSeriesResponse_dicomimage_2eproto.base);
  return *internal_default_instance();
}


void DicomImageSeriesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.DicomImageSeriesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  if (GetArena() == nullptr && series_ != nullptr) {
    delete series_;
  }
  series_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DicomImageSeriesResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .osirixgrpc.DicomSeries series = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_series(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DicomImageSeriesResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.DicomImageSeriesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // .osirixgrpc.DicomSeries series = 2;
  if (this->has_series()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::series(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.DicomImageSeriesResponse)
  return target;
}

size_t DicomImageSeriesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.DicomImageSeriesResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .osirixgrpc.DicomSeries series = 2;
  if (this->has_series()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *series_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DicomImageSeriesResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.DicomImageSeriesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DicomImageSeriesResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DicomImageSeriesResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.DicomImageSeriesResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.DicomImageSeriesResponse)
    MergeFrom(*source);
  }
}

void DicomImageSeriesResponse::MergeFrom(const DicomImageSeriesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.DicomImageSeriesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::osirixgrpc::Status::MergeFrom(from._internal_status());
  }
  if (from.has_series()) {
    _internal_mutable_series()->::osirixgrpc::DicomSeries::MergeFrom(from._internal_series());
  }
}

void DicomImageSeriesResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.DicomImageSeriesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DicomImageSeriesResponse::CopyFrom(const DicomImageSeriesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.DicomImageSeriesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DicomImageSeriesResponse::IsInitialized() const {
  return true;
}

void DicomImageSeriesResponse::InternalSwap(DicomImageSeriesResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DicomImageSeriesResponse, series_)
      + sizeof(DicomImageSeriesResponse::series_)
      - PROTOBUF_FIELD_OFFSET(DicomImageSeriesResponse, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DicomImageSeriesResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DicomImageSliceLocationResponse::_Internal {
 public:
  static const ::osirixgrpc::Status& status(const DicomImageSliceLocationResponse* msg);
};

const ::osirixgrpc::Status&
DicomImageSliceLocationResponse::_Internal::status(const DicomImageSliceLocationResponse* msg) {
  return *msg->status_;
}
void DicomImageSliceLocationResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
DicomImageSliceLocationResponse::DicomImageSliceLocationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.DicomImageSliceLocationResponse)
}
DicomImageSliceLocationResponse::DicomImageSliceLocationResponse(const DicomImageSliceLocationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::osirixgrpc::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  slice_locations_ = from.slice_locations_;
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.DicomImageSliceLocationResponse)
}

void DicomImageSliceLocationResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DicomImageSliceLocationResponse_dicomimage_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&slice_locations_) -
      reinterpret_cast<char*>(&status_)) + sizeof(slice_locations_));
}

DicomImageSliceLocationResponse::~DicomImageSliceLocationResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.DicomImageSliceLocationResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DicomImageSliceLocationResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void DicomImageSliceLocationResponse::ArenaDtor(void* object) {
  DicomImageSliceLocationResponse* _this = reinterpret_cast< DicomImageSliceLocationResponse* >(object);
  (void)_this;
}
void DicomImageSliceLocationResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DicomImageSliceLocationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DicomImageSliceLocationResponse& DicomImageSliceLocationResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DicomImageSliceLocationResponse_dicomimage_2eproto.base);
  return *internal_default_instance();
}


void DicomImageSliceLocationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.DicomImageSliceLocationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  slice_locations_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DicomImageSliceLocationResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float slice_locations = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          slice_locations_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DicomImageSliceLocationResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.DicomImageSliceLocationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // float slice_locations = 2;
  if (!(this->slice_locations() <= 0 && this->slice_locations() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_slice_locations(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.DicomImageSliceLocationResponse)
  return target;
}

size_t DicomImageSliceLocationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.DicomImageSliceLocationResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // float slice_locations = 2;
  if (!(this->slice_locations() <= 0 && this->slice_locations() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DicomImageSliceLocationResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.DicomImageSliceLocationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DicomImageSliceLocationResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DicomImageSliceLocationResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.DicomImageSliceLocationResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.DicomImageSliceLocationResponse)
    MergeFrom(*source);
  }
}

void DicomImageSliceLocationResponse::MergeFrom(const DicomImageSliceLocationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.DicomImageSliceLocationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::osirixgrpc::Status::MergeFrom(from._internal_status());
  }
  if (!(from.slice_locations() <= 0 && from.slice_locations() >= 0)) {
    _internal_set_slice_locations(from._internal_slice_locations());
  }
}

void DicomImageSliceLocationResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.DicomImageSliceLocationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DicomImageSliceLocationResponse::CopyFrom(const DicomImageSliceLocationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.DicomImageSliceLocationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DicomImageSliceLocationResponse::IsInitialized() const {
  return true;
}

void DicomImageSliceLocationResponse::InternalSwap(DicomImageSliceLocationResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DicomImageSliceLocationResponse, slice_locations_)
      + sizeof(DicomImageSliceLocationResponse::slice_locations_)
      - PROTOBUF_FIELD_OFFSET(DicomImageSliceLocationResponse, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DicomImageSliceLocationResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DicomImageInstanceNumberResponse::_Internal {
 public:
  static const ::osirixgrpc::Status& status(const DicomImageInstanceNumberResponse* msg);
};

const ::osirixgrpc::Status&
DicomImageInstanceNumberResponse::_Internal::status(const DicomImageInstanceNumberResponse* msg) {
  return *msg->status_;
}
void DicomImageInstanceNumberResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
DicomImageInstanceNumberResponse::DicomImageInstanceNumberResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.DicomImageInstanceNumberResponse)
}
DicomImageInstanceNumberResponse::DicomImageInstanceNumberResponse(const DicomImageInstanceNumberResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::osirixgrpc::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  instance_number_ = from.instance_number_;
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.DicomImageInstanceNumberResponse)
}

void DicomImageInstanceNumberResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DicomImageInstanceNumberResponse_dicomimage_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&instance_number_) -
      reinterpret_cast<char*>(&status_)) + sizeof(instance_number_));
}

DicomImageInstanceNumberResponse::~DicomImageInstanceNumberResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.DicomImageInstanceNumberResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DicomImageInstanceNumberResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void DicomImageInstanceNumberResponse::ArenaDtor(void* object) {
  DicomImageInstanceNumberResponse* _this = reinterpret_cast< DicomImageInstanceNumberResponse* >(object);
  (void)_this;
}
void DicomImageInstanceNumberResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DicomImageInstanceNumberResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DicomImageInstanceNumberResponse& DicomImageInstanceNumberResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DicomImageInstanceNumberResponse_dicomimage_2eproto.base);
  return *internal_default_instance();
}


void DicomImageInstanceNumberResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.DicomImageInstanceNumberResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  instance_number_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DicomImageInstanceNumberResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 instance_number = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          instance_number_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DicomImageInstanceNumberResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.DicomImageInstanceNumberResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // uint32 instance_number = 2;
  if (this->instance_number() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_instance_number(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.DicomImageInstanceNumberResponse)
  return target;
}

size_t DicomImageInstanceNumberResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.DicomImageInstanceNumberResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // uint32 instance_number = 2;
  if (this->instance_number() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_instance_number());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DicomImageInstanceNumberResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.DicomImageInstanceNumberResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DicomImageInstanceNumberResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DicomImageInstanceNumberResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.DicomImageInstanceNumberResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.DicomImageInstanceNumberResponse)
    MergeFrom(*source);
  }
}

void DicomImageInstanceNumberResponse::MergeFrom(const DicomImageInstanceNumberResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.DicomImageInstanceNumberResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::osirixgrpc::Status::MergeFrom(from._internal_status());
  }
  if (from.instance_number() != 0) {
    _internal_set_instance_number(from._internal_instance_number());
  }
}

void DicomImageInstanceNumberResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.DicomImageInstanceNumberResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DicomImageInstanceNumberResponse::CopyFrom(const DicomImageInstanceNumberResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.DicomImageInstanceNumberResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DicomImageInstanceNumberResponse::IsInitialized() const {
  return true;
}

void DicomImageInstanceNumberResponse::InternalSwap(DicomImageInstanceNumberResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DicomImageInstanceNumberResponse, instance_number_)
      + sizeof(DicomImageInstanceNumberResponse::instance_number_)
      - PROTOBUF_FIELD_OFFSET(DicomImageInstanceNumberResponse, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DicomImageInstanceNumberResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace osirixgrpc
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::osirixgrpc::DicomImageWidthResponse* Arena::CreateMaybeMessage< ::osirixgrpc::DicomImageWidthResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::DicomImageWidthResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::DicomImageHeightResponse* Arena::CreateMaybeMessage< ::osirixgrpc::DicomImageHeightResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::DicomImageHeightResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::DicomImageSOPInstanceUIDResponse* Arena::CreateMaybeMessage< ::osirixgrpc::DicomImageSOPInstanceUIDResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::DicomImageSOPInstanceUIDResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::DicomImageCompletePathResponse* Arena::CreateMaybeMessage< ::osirixgrpc::DicomImageCompletePathResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::DicomImageCompletePathResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::DicomImageDateResponse* Arena::CreateMaybeMessage< ::osirixgrpc::DicomImageDateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::DicomImageDateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::DicomImageNumberOfFramesResponse* Arena::CreateMaybeMessage< ::osirixgrpc::DicomImageNumberOfFramesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::DicomImageNumberOfFramesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::DicomImageModalityResponse* Arena::CreateMaybeMessage< ::osirixgrpc::DicomImageModalityResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::DicomImageModalityResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::DicomImageSeriesResponse* Arena::CreateMaybeMessage< ::osirixgrpc::DicomImageSeriesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::DicomImageSeriesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::DicomImageSliceLocationResponse* Arena::CreateMaybeMessage< ::osirixgrpc::DicomImageSliceLocationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::DicomImageSliceLocationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::DicomImageInstanceNumberResponse* Arena::CreateMaybeMessage< ::osirixgrpc::DicomImageInstanceNumberResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::DicomImageInstanceNumberResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
