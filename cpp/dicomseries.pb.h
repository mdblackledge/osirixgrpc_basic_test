// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dicomseries.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_dicomseries_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_dicomseries_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "utilities.pb.h"
#include "types.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_dicomseries_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_dicomseries_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[13]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_dicomseries_2eproto;
namespace osirixgrpc {
class DicomSeriesDateResponse;
class DicomSeriesDateResponseDefaultTypeInternal;
extern DicomSeriesDateResponseDefaultTypeInternal _DicomSeriesDateResponse_default_instance_;
class DicomSeriesImagesResponse;
class DicomSeriesImagesResponseDefaultTypeInternal;
extern DicomSeriesImagesResponseDefaultTypeInternal _DicomSeriesImagesResponse_default_instance_;
class DicomSeriesModalityResponse;
class DicomSeriesModalityResponseDefaultTypeInternal;
extern DicomSeriesModalityResponseDefaultTypeInternal _DicomSeriesModalityResponse_default_instance_;
class DicomSeriesNameResponse;
class DicomSeriesNameResponseDefaultTypeInternal;
extern DicomSeriesNameResponseDefaultTypeInternal _DicomSeriesNameResponse_default_instance_;
class DicomSeriesNextSeriesResponse;
class DicomSeriesNextSeriesResponseDefaultTypeInternal;
extern DicomSeriesNextSeriesResponseDefaultTypeInternal _DicomSeriesNextSeriesResponse_default_instance_;
class DicomSeriesNumberOfImagesResponse;
class DicomSeriesNumberOfImagesResponseDefaultTypeInternal;
extern DicomSeriesNumberOfImagesResponseDefaultTypeInternal _DicomSeriesNumberOfImagesResponse_default_instance_;
class DicomSeriesPathsResponse;
class DicomSeriesPathsResponseDefaultTypeInternal;
extern DicomSeriesPathsResponseDefaultTypeInternal _DicomSeriesPathsResponse_default_instance_;
class DicomSeriesPreviousSeriesResponse;
class DicomSeriesPreviousSeriesResponseDefaultTypeInternal;
extern DicomSeriesPreviousSeriesResponseDefaultTypeInternal _DicomSeriesPreviousSeriesResponse_default_instance_;
class DicomSeriesSeriesDescriptionResponse;
class DicomSeriesSeriesDescriptionResponseDefaultTypeInternal;
extern DicomSeriesSeriesDescriptionResponseDefaultTypeInternal _DicomSeriesSeriesDescriptionResponse_default_instance_;
class DicomSeriesSeriesInstanceUIDResponse;
class DicomSeriesSeriesInstanceUIDResponseDefaultTypeInternal;
extern DicomSeriesSeriesInstanceUIDResponseDefaultTypeInternal _DicomSeriesSeriesInstanceUIDResponse_default_instance_;
class DicomSeriesSeriesSOPClassUIDResponse;
class DicomSeriesSeriesSOPClassUIDResponseDefaultTypeInternal;
extern DicomSeriesSeriesSOPClassUIDResponseDefaultTypeInternal _DicomSeriesSeriesSOPClassUIDResponse_default_instance_;
class DicomSeriesSortedImagesResponse;
class DicomSeriesSortedImagesResponseDefaultTypeInternal;
extern DicomSeriesSortedImagesResponseDefaultTypeInternal _DicomSeriesSortedImagesResponse_default_instance_;
class DicomSeriesStudyResponse;
class DicomSeriesStudyResponseDefaultTypeInternal;
extern DicomSeriesStudyResponseDefaultTypeInternal _DicomSeriesStudyResponse_default_instance_;
}  // namespace osirixgrpc
PROTOBUF_NAMESPACE_OPEN
template<> ::osirixgrpc::DicomSeriesDateResponse* Arena::CreateMaybeMessage<::osirixgrpc::DicomSeriesDateResponse>(Arena*);
template<> ::osirixgrpc::DicomSeriesImagesResponse* Arena::CreateMaybeMessage<::osirixgrpc::DicomSeriesImagesResponse>(Arena*);
template<> ::osirixgrpc::DicomSeriesModalityResponse* Arena::CreateMaybeMessage<::osirixgrpc::DicomSeriesModalityResponse>(Arena*);
template<> ::osirixgrpc::DicomSeriesNameResponse* Arena::CreateMaybeMessage<::osirixgrpc::DicomSeriesNameResponse>(Arena*);
template<> ::osirixgrpc::DicomSeriesNextSeriesResponse* Arena::CreateMaybeMessage<::osirixgrpc::DicomSeriesNextSeriesResponse>(Arena*);
template<> ::osirixgrpc::DicomSeriesNumberOfImagesResponse* Arena::CreateMaybeMessage<::osirixgrpc::DicomSeriesNumberOfImagesResponse>(Arena*);
template<> ::osirixgrpc::DicomSeriesPathsResponse* Arena::CreateMaybeMessage<::osirixgrpc::DicomSeriesPathsResponse>(Arena*);
template<> ::osirixgrpc::DicomSeriesPreviousSeriesResponse* Arena::CreateMaybeMessage<::osirixgrpc::DicomSeriesPreviousSeriesResponse>(Arena*);
template<> ::osirixgrpc::DicomSeriesSeriesDescriptionResponse* Arena::CreateMaybeMessage<::osirixgrpc::DicomSeriesSeriesDescriptionResponse>(Arena*);
template<> ::osirixgrpc::DicomSeriesSeriesInstanceUIDResponse* Arena::CreateMaybeMessage<::osirixgrpc::DicomSeriesSeriesInstanceUIDResponse>(Arena*);
template<> ::osirixgrpc::DicomSeriesSeriesSOPClassUIDResponse* Arena::CreateMaybeMessage<::osirixgrpc::DicomSeriesSeriesSOPClassUIDResponse>(Arena*);
template<> ::osirixgrpc::DicomSeriesSortedImagesResponse* Arena::CreateMaybeMessage<::osirixgrpc::DicomSeriesSortedImagesResponse>(Arena*);
template<> ::osirixgrpc::DicomSeriesStudyResponse* Arena::CreateMaybeMessage<::osirixgrpc::DicomSeriesStudyResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace osirixgrpc {

// ===================================================================

class DicomSeriesPathsResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DicomSeriesPathsResponse) */ {
 public:
  inline DicomSeriesPathsResponse() : DicomSeriesPathsResponse(nullptr) {}
  virtual ~DicomSeriesPathsResponse();

  DicomSeriesPathsResponse(const DicomSeriesPathsResponse& from);
  DicomSeriesPathsResponse(DicomSeriesPathsResponse&& from) noexcept
    : DicomSeriesPathsResponse() {
    *this = ::std::move(from);
  }

  inline DicomSeriesPathsResponse& operator=(const DicomSeriesPathsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DicomSeriesPathsResponse& operator=(DicomSeriesPathsResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DicomSeriesPathsResponse& default_instance();

  static inline const DicomSeriesPathsResponse* internal_default_instance() {
    return reinterpret_cast<const DicomSeriesPathsResponse*>(
               &_DicomSeriesPathsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(DicomSeriesPathsResponse& a, DicomSeriesPathsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DicomSeriesPathsResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DicomSeriesPathsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DicomSeriesPathsResponse* New() const final {
    return CreateMaybeMessage<DicomSeriesPathsResponse>(nullptr);
  }

  DicomSeriesPathsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DicomSeriesPathsResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DicomSeriesPathsResponse& from);
  void MergeFrom(const DicomSeriesPathsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DicomSeriesPathsResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "osirixgrpc.DicomSeriesPathsResponse";
  }
  protected:
  explicit DicomSeriesPathsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dicomseries_2eproto);
    return ::descriptor_table_dicomseries_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPathsFieldNumber = 2,
    kStatusFieldNumber = 1,
  };
  // repeated string paths = 2;
  int paths_size() const;
  private:
  int _internal_paths_size() const;
  public:
  void clear_paths();
  const std::string& paths(int index) const;
  std::string* mutable_paths(int index);
  void set_paths(int index, const std::string& value);
  void set_paths(int index, std::string&& value);
  void set_paths(int index, const char* value);
  void set_paths(int index, const char* value, size_t size);
  std::string* add_paths();
  void add_paths(const std::string& value);
  void add_paths(std::string&& value);
  void add_paths(const char* value);
  void add_paths(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& paths() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_paths();
  private:
  const std::string& _internal_paths(int index) const;
  std::string* _internal_add_paths();
  public:

  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  const ::osirixgrpc::Status& status() const;
  ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  // @@protoc_insertion_point(class_scope:osirixgrpc.DicomSeriesPathsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> paths_;
  ::osirixgrpc::Status* status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dicomseries_2eproto;
};
// -------------------------------------------------------------------

class DicomSeriesPreviousSeriesResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DicomSeriesPreviousSeriesResponse) */ {
 public:
  inline DicomSeriesPreviousSeriesResponse() : DicomSeriesPreviousSeriesResponse(nullptr) {}
  virtual ~DicomSeriesPreviousSeriesResponse();

  DicomSeriesPreviousSeriesResponse(const DicomSeriesPreviousSeriesResponse& from);
  DicomSeriesPreviousSeriesResponse(DicomSeriesPreviousSeriesResponse&& from) noexcept
    : DicomSeriesPreviousSeriesResponse() {
    *this = ::std::move(from);
  }

  inline DicomSeriesPreviousSeriesResponse& operator=(const DicomSeriesPreviousSeriesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DicomSeriesPreviousSeriesResponse& operator=(DicomSeriesPreviousSeriesResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DicomSeriesPreviousSeriesResponse& default_instance();

  static inline const DicomSeriesPreviousSeriesResponse* internal_default_instance() {
    return reinterpret_cast<const DicomSeriesPreviousSeriesResponse*>(
               &_DicomSeriesPreviousSeriesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(DicomSeriesPreviousSeriesResponse& a, DicomSeriesPreviousSeriesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DicomSeriesPreviousSeriesResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DicomSeriesPreviousSeriesResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DicomSeriesPreviousSeriesResponse* New() const final {
    return CreateMaybeMessage<DicomSeriesPreviousSeriesResponse>(nullptr);
  }

  DicomSeriesPreviousSeriesResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DicomSeriesPreviousSeriesResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DicomSeriesPreviousSeriesResponse& from);
  void MergeFrom(const DicomSeriesPreviousSeriesResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DicomSeriesPreviousSeriesResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "osirixgrpc.DicomSeriesPreviousSeriesResponse";
  }
  protected:
  explicit DicomSeriesPreviousSeriesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dicomseries_2eproto);
    return ::descriptor_table_dicomseries_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
    kPreviousSeriesFieldNumber = 2,
  };
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  const ::osirixgrpc::Status& status() const;
  ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  // .osirixgrpc.DicomSeries previous_series = 2;
  bool has_previous_series() const;
  private:
  bool _internal_has_previous_series() const;
  public:
  void clear_previous_series();
  const ::osirixgrpc::DicomSeries& previous_series() const;
  ::osirixgrpc::DicomSeries* release_previous_series();
  ::osirixgrpc::DicomSeries* mutable_previous_series();
  void set_allocated_previous_series(::osirixgrpc::DicomSeries* previous_series);
  private:
  const ::osirixgrpc::DicomSeries& _internal_previous_series() const;
  ::osirixgrpc::DicomSeries* _internal_mutable_previous_series();
  public:
  void unsafe_arena_set_allocated_previous_series(
      ::osirixgrpc::DicomSeries* previous_series);
  ::osirixgrpc::DicomSeries* unsafe_arena_release_previous_series();

  // @@protoc_insertion_point(class_scope:osirixgrpc.DicomSeriesPreviousSeriesResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::osirixgrpc::Status* status_;
  ::osirixgrpc::DicomSeries* previous_series_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dicomseries_2eproto;
};
// -------------------------------------------------------------------

class DicomSeriesNextSeriesResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DicomSeriesNextSeriesResponse) */ {
 public:
  inline DicomSeriesNextSeriesResponse() : DicomSeriesNextSeriesResponse(nullptr) {}
  virtual ~DicomSeriesNextSeriesResponse();

  DicomSeriesNextSeriesResponse(const DicomSeriesNextSeriesResponse& from);
  DicomSeriesNextSeriesResponse(DicomSeriesNextSeriesResponse&& from) noexcept
    : DicomSeriesNextSeriesResponse() {
    *this = ::std::move(from);
  }

  inline DicomSeriesNextSeriesResponse& operator=(const DicomSeriesNextSeriesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DicomSeriesNextSeriesResponse& operator=(DicomSeriesNextSeriesResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DicomSeriesNextSeriesResponse& default_instance();

  static inline const DicomSeriesNextSeriesResponse* internal_default_instance() {
    return reinterpret_cast<const DicomSeriesNextSeriesResponse*>(
               &_DicomSeriesNextSeriesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(DicomSeriesNextSeriesResponse& a, DicomSeriesNextSeriesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DicomSeriesNextSeriesResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DicomSeriesNextSeriesResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DicomSeriesNextSeriesResponse* New() const final {
    return CreateMaybeMessage<DicomSeriesNextSeriesResponse>(nullptr);
  }

  DicomSeriesNextSeriesResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DicomSeriesNextSeriesResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DicomSeriesNextSeriesResponse& from);
  void MergeFrom(const DicomSeriesNextSeriesResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DicomSeriesNextSeriesResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "osirixgrpc.DicomSeriesNextSeriesResponse";
  }
  protected:
  explicit DicomSeriesNextSeriesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dicomseries_2eproto);
    return ::descriptor_table_dicomseries_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
    kNextSeriesFieldNumber = 2,
  };
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  const ::osirixgrpc::Status& status() const;
  ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  // .osirixgrpc.DicomSeries next_series = 2;
  bool has_next_series() const;
  private:
  bool _internal_has_next_series() const;
  public:
  void clear_next_series();
  const ::osirixgrpc::DicomSeries& next_series() const;
  ::osirixgrpc::DicomSeries* release_next_series();
  ::osirixgrpc::DicomSeries* mutable_next_series();
  void set_allocated_next_series(::osirixgrpc::DicomSeries* next_series);
  private:
  const ::osirixgrpc::DicomSeries& _internal_next_series() const;
  ::osirixgrpc::DicomSeries* _internal_mutable_next_series();
  public:
  void unsafe_arena_set_allocated_next_series(
      ::osirixgrpc::DicomSeries* next_series);
  ::osirixgrpc::DicomSeries* unsafe_arena_release_next_series();

  // @@protoc_insertion_point(class_scope:osirixgrpc.DicomSeriesNextSeriesResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::osirixgrpc::Status* status_;
  ::osirixgrpc::DicomSeries* next_series_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dicomseries_2eproto;
};
// -------------------------------------------------------------------

class DicomSeriesSortedImagesResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DicomSeriesSortedImagesResponse) */ {
 public:
  inline DicomSeriesSortedImagesResponse() : DicomSeriesSortedImagesResponse(nullptr) {}
  virtual ~DicomSeriesSortedImagesResponse();

  DicomSeriesSortedImagesResponse(const DicomSeriesSortedImagesResponse& from);
  DicomSeriesSortedImagesResponse(DicomSeriesSortedImagesResponse&& from) noexcept
    : DicomSeriesSortedImagesResponse() {
    *this = ::std::move(from);
  }

  inline DicomSeriesSortedImagesResponse& operator=(const DicomSeriesSortedImagesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DicomSeriesSortedImagesResponse& operator=(DicomSeriesSortedImagesResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DicomSeriesSortedImagesResponse& default_instance();

  static inline const DicomSeriesSortedImagesResponse* internal_default_instance() {
    return reinterpret_cast<const DicomSeriesSortedImagesResponse*>(
               &_DicomSeriesSortedImagesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(DicomSeriesSortedImagesResponse& a, DicomSeriesSortedImagesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DicomSeriesSortedImagesResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DicomSeriesSortedImagesResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DicomSeriesSortedImagesResponse* New() const final {
    return CreateMaybeMessage<DicomSeriesSortedImagesResponse>(nullptr);
  }

  DicomSeriesSortedImagesResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DicomSeriesSortedImagesResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DicomSeriesSortedImagesResponse& from);
  void MergeFrom(const DicomSeriesSortedImagesResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DicomSeriesSortedImagesResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "osirixgrpc.DicomSeriesSortedImagesResponse";
  }
  protected:
  explicit DicomSeriesSortedImagesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dicomseries_2eproto);
    return ::descriptor_table_dicomseries_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSortedImagesFieldNumber = 2,
    kStatusFieldNumber = 1,
  };
  // repeated .osirixgrpc.DicomImage sorted_images = 2;
  int sorted_images_size() const;
  private:
  int _internal_sorted_images_size() const;
  public:
  void clear_sorted_images();
  ::osirixgrpc::DicomImage* mutable_sorted_images(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::osirixgrpc::DicomImage >*
      mutable_sorted_images();
  private:
  const ::osirixgrpc::DicomImage& _internal_sorted_images(int index) const;
  ::osirixgrpc::DicomImage* _internal_add_sorted_images();
  public:
  const ::osirixgrpc::DicomImage& sorted_images(int index) const;
  ::osirixgrpc::DicomImage* add_sorted_images();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::osirixgrpc::DicomImage >&
      sorted_images() const;

  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  const ::osirixgrpc::Status& status() const;
  ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  // @@protoc_insertion_point(class_scope:osirixgrpc.DicomSeriesSortedImagesResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::osirixgrpc::DicomImage > sorted_images_;
  ::osirixgrpc::Status* status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dicomseries_2eproto;
};
// -------------------------------------------------------------------

class DicomSeriesStudyResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DicomSeriesStudyResponse) */ {
 public:
  inline DicomSeriesStudyResponse() : DicomSeriesStudyResponse(nullptr) {}
  virtual ~DicomSeriesStudyResponse();

  DicomSeriesStudyResponse(const DicomSeriesStudyResponse& from);
  DicomSeriesStudyResponse(DicomSeriesStudyResponse&& from) noexcept
    : DicomSeriesStudyResponse() {
    *this = ::std::move(from);
  }

  inline DicomSeriesStudyResponse& operator=(const DicomSeriesStudyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DicomSeriesStudyResponse& operator=(DicomSeriesStudyResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DicomSeriesStudyResponse& default_instance();

  static inline const DicomSeriesStudyResponse* internal_default_instance() {
    return reinterpret_cast<const DicomSeriesStudyResponse*>(
               &_DicomSeriesStudyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(DicomSeriesStudyResponse& a, DicomSeriesStudyResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DicomSeriesStudyResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DicomSeriesStudyResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DicomSeriesStudyResponse* New() const final {
    return CreateMaybeMessage<DicomSeriesStudyResponse>(nullptr);
  }

  DicomSeriesStudyResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DicomSeriesStudyResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DicomSeriesStudyResponse& from);
  void MergeFrom(const DicomSeriesStudyResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DicomSeriesStudyResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "osirixgrpc.DicomSeriesStudyResponse";
  }
  protected:
  explicit DicomSeriesStudyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dicomseries_2eproto);
    return ::descriptor_table_dicomseries_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
    kStudyFieldNumber = 2,
  };
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  const ::osirixgrpc::Status& status() const;
  ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  // .osirixgrpc.DicomStudy study = 2;
  bool has_study() const;
  private:
  bool _internal_has_study() const;
  public:
  void clear_study();
  const ::osirixgrpc::DicomStudy& study() const;
  ::osirixgrpc::DicomStudy* release_study();
  ::osirixgrpc::DicomStudy* mutable_study();
  void set_allocated_study(::osirixgrpc::DicomStudy* study);
  private:
  const ::osirixgrpc::DicomStudy& _internal_study() const;
  ::osirixgrpc::DicomStudy* _internal_mutable_study();
  public:
  void unsafe_arena_set_allocated_study(
      ::osirixgrpc::DicomStudy* study);
  ::osirixgrpc::DicomStudy* unsafe_arena_release_study();

  // @@protoc_insertion_point(class_scope:osirixgrpc.DicomSeriesStudyResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::osirixgrpc::Status* status_;
  ::osirixgrpc::DicomStudy* study_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dicomseries_2eproto;
};
// -------------------------------------------------------------------

class DicomSeriesImagesResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DicomSeriesImagesResponse) */ {
 public:
  inline DicomSeriesImagesResponse() : DicomSeriesImagesResponse(nullptr) {}
  virtual ~DicomSeriesImagesResponse();

  DicomSeriesImagesResponse(const DicomSeriesImagesResponse& from);
  DicomSeriesImagesResponse(DicomSeriesImagesResponse&& from) noexcept
    : DicomSeriesImagesResponse() {
    *this = ::std::move(from);
  }

  inline DicomSeriesImagesResponse& operator=(const DicomSeriesImagesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DicomSeriesImagesResponse& operator=(DicomSeriesImagesResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DicomSeriesImagesResponse& default_instance();

  static inline const DicomSeriesImagesResponse* internal_default_instance() {
    return reinterpret_cast<const DicomSeriesImagesResponse*>(
               &_DicomSeriesImagesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(DicomSeriesImagesResponse& a, DicomSeriesImagesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DicomSeriesImagesResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DicomSeriesImagesResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DicomSeriesImagesResponse* New() const final {
    return CreateMaybeMessage<DicomSeriesImagesResponse>(nullptr);
  }

  DicomSeriesImagesResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DicomSeriesImagesResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DicomSeriesImagesResponse& from);
  void MergeFrom(const DicomSeriesImagesResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DicomSeriesImagesResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "osirixgrpc.DicomSeriesImagesResponse";
  }
  protected:
  explicit DicomSeriesImagesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dicomseries_2eproto);
    return ::descriptor_table_dicomseries_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kImagesFieldNumber = 2,
    kStatusFieldNumber = 1,
  };
  // repeated .osirixgrpc.DicomImage images = 2;
  int images_size() const;
  private:
  int _internal_images_size() const;
  public:
  void clear_images();
  ::osirixgrpc::DicomImage* mutable_images(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::osirixgrpc::DicomImage >*
      mutable_images();
  private:
  const ::osirixgrpc::DicomImage& _internal_images(int index) const;
  ::osirixgrpc::DicomImage* _internal_add_images();
  public:
  const ::osirixgrpc::DicomImage& images(int index) const;
  ::osirixgrpc::DicomImage* add_images();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::osirixgrpc::DicomImage >&
      images() const;

  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  const ::osirixgrpc::Status& status() const;
  ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  // @@protoc_insertion_point(class_scope:osirixgrpc.DicomSeriesImagesResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::osirixgrpc::DicomImage > images_;
  ::osirixgrpc::Status* status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dicomseries_2eproto;
};
// -------------------------------------------------------------------

class DicomSeriesSeriesInstanceUIDResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DicomSeriesSeriesInstanceUIDResponse) */ {
 public:
  inline DicomSeriesSeriesInstanceUIDResponse() : DicomSeriesSeriesInstanceUIDResponse(nullptr) {}
  virtual ~DicomSeriesSeriesInstanceUIDResponse();

  DicomSeriesSeriesInstanceUIDResponse(const DicomSeriesSeriesInstanceUIDResponse& from);
  DicomSeriesSeriesInstanceUIDResponse(DicomSeriesSeriesInstanceUIDResponse&& from) noexcept
    : DicomSeriesSeriesInstanceUIDResponse() {
    *this = ::std::move(from);
  }

  inline DicomSeriesSeriesInstanceUIDResponse& operator=(const DicomSeriesSeriesInstanceUIDResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DicomSeriesSeriesInstanceUIDResponse& operator=(DicomSeriesSeriesInstanceUIDResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DicomSeriesSeriesInstanceUIDResponse& default_instance();

  static inline const DicomSeriesSeriesInstanceUIDResponse* internal_default_instance() {
    return reinterpret_cast<const DicomSeriesSeriesInstanceUIDResponse*>(
               &_DicomSeriesSeriesInstanceUIDResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(DicomSeriesSeriesInstanceUIDResponse& a, DicomSeriesSeriesInstanceUIDResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DicomSeriesSeriesInstanceUIDResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DicomSeriesSeriesInstanceUIDResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DicomSeriesSeriesInstanceUIDResponse* New() const final {
    return CreateMaybeMessage<DicomSeriesSeriesInstanceUIDResponse>(nullptr);
  }

  DicomSeriesSeriesInstanceUIDResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DicomSeriesSeriesInstanceUIDResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DicomSeriesSeriesInstanceUIDResponse& from);
  void MergeFrom(const DicomSeriesSeriesInstanceUIDResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DicomSeriesSeriesInstanceUIDResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "osirixgrpc.DicomSeriesSeriesInstanceUIDResponse";
  }
  protected:
  explicit DicomSeriesSeriesInstanceUIDResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dicomseries_2eproto);
    return ::descriptor_table_dicomseries_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSeriesInstanceUidFieldNumber = 2,
    kStatusFieldNumber = 1,
  };
  // string series_instance_uid = 2;
  void clear_series_instance_uid();
  const std::string& series_instance_uid() const;
  void set_series_instance_uid(const std::string& value);
  void set_series_instance_uid(std::string&& value);
  void set_series_instance_uid(const char* value);
  void set_series_instance_uid(const char* value, size_t size);
  std::string* mutable_series_instance_uid();
  std::string* release_series_instance_uid();
  void set_allocated_series_instance_uid(std::string* series_instance_uid);
  private:
  const std::string& _internal_series_instance_uid() const;
  void _internal_set_series_instance_uid(const std::string& value);
  std::string* _internal_mutable_series_instance_uid();
  public:

  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  const ::osirixgrpc::Status& status() const;
  ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  // @@protoc_insertion_point(class_scope:osirixgrpc.DicomSeriesSeriesInstanceUIDResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr series_instance_uid_;
  ::osirixgrpc::Status* status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dicomseries_2eproto;
};
// -------------------------------------------------------------------

class DicomSeriesSeriesSOPClassUIDResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DicomSeriesSeriesSOPClassUIDResponse) */ {
 public:
  inline DicomSeriesSeriesSOPClassUIDResponse() : DicomSeriesSeriesSOPClassUIDResponse(nullptr) {}
  virtual ~DicomSeriesSeriesSOPClassUIDResponse();

  DicomSeriesSeriesSOPClassUIDResponse(const DicomSeriesSeriesSOPClassUIDResponse& from);
  DicomSeriesSeriesSOPClassUIDResponse(DicomSeriesSeriesSOPClassUIDResponse&& from) noexcept
    : DicomSeriesSeriesSOPClassUIDResponse() {
    *this = ::std::move(from);
  }

  inline DicomSeriesSeriesSOPClassUIDResponse& operator=(const DicomSeriesSeriesSOPClassUIDResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DicomSeriesSeriesSOPClassUIDResponse& operator=(DicomSeriesSeriesSOPClassUIDResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DicomSeriesSeriesSOPClassUIDResponse& default_instance();

  static inline const DicomSeriesSeriesSOPClassUIDResponse* internal_default_instance() {
    return reinterpret_cast<const DicomSeriesSeriesSOPClassUIDResponse*>(
               &_DicomSeriesSeriesSOPClassUIDResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(DicomSeriesSeriesSOPClassUIDResponse& a, DicomSeriesSeriesSOPClassUIDResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DicomSeriesSeriesSOPClassUIDResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DicomSeriesSeriesSOPClassUIDResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DicomSeriesSeriesSOPClassUIDResponse* New() const final {
    return CreateMaybeMessage<DicomSeriesSeriesSOPClassUIDResponse>(nullptr);
  }

  DicomSeriesSeriesSOPClassUIDResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DicomSeriesSeriesSOPClassUIDResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DicomSeriesSeriesSOPClassUIDResponse& from);
  void MergeFrom(const DicomSeriesSeriesSOPClassUIDResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DicomSeriesSeriesSOPClassUIDResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "osirixgrpc.DicomSeriesSeriesSOPClassUIDResponse";
  }
  protected:
  explicit DicomSeriesSeriesSOPClassUIDResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dicomseries_2eproto);
    return ::descriptor_table_dicomseries_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSeriesSopClassUidFieldNumber = 2,
    kStatusFieldNumber = 1,
  };
  // string series_sop_class_uid = 2;
  void clear_series_sop_class_uid();
  const std::string& series_sop_class_uid() const;
  void set_series_sop_class_uid(const std::string& value);
  void set_series_sop_class_uid(std::string&& value);
  void set_series_sop_class_uid(const char* value);
  void set_series_sop_class_uid(const char* value, size_t size);
  std::string* mutable_series_sop_class_uid();
  std::string* release_series_sop_class_uid();
  void set_allocated_series_sop_class_uid(std::string* series_sop_class_uid);
  private:
  const std::string& _internal_series_sop_class_uid() const;
  void _internal_set_series_sop_class_uid(const std::string& value);
  std::string* _internal_mutable_series_sop_class_uid();
  public:

  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  const ::osirixgrpc::Status& status() const;
  ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  // @@protoc_insertion_point(class_scope:osirixgrpc.DicomSeriesSeriesSOPClassUIDResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr series_sop_class_uid_;
  ::osirixgrpc::Status* status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dicomseries_2eproto;
};
// -------------------------------------------------------------------

class DicomSeriesSeriesDescriptionResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DicomSeriesSeriesDescriptionResponse) */ {
 public:
  inline DicomSeriesSeriesDescriptionResponse() : DicomSeriesSeriesDescriptionResponse(nullptr) {}
  virtual ~DicomSeriesSeriesDescriptionResponse();

  DicomSeriesSeriesDescriptionResponse(const DicomSeriesSeriesDescriptionResponse& from);
  DicomSeriesSeriesDescriptionResponse(DicomSeriesSeriesDescriptionResponse&& from) noexcept
    : DicomSeriesSeriesDescriptionResponse() {
    *this = ::std::move(from);
  }

  inline DicomSeriesSeriesDescriptionResponse& operator=(const DicomSeriesSeriesDescriptionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DicomSeriesSeriesDescriptionResponse& operator=(DicomSeriesSeriesDescriptionResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DicomSeriesSeriesDescriptionResponse& default_instance();

  static inline const DicomSeriesSeriesDescriptionResponse* internal_default_instance() {
    return reinterpret_cast<const DicomSeriesSeriesDescriptionResponse*>(
               &_DicomSeriesSeriesDescriptionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(DicomSeriesSeriesDescriptionResponse& a, DicomSeriesSeriesDescriptionResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DicomSeriesSeriesDescriptionResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DicomSeriesSeriesDescriptionResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DicomSeriesSeriesDescriptionResponse* New() const final {
    return CreateMaybeMessage<DicomSeriesSeriesDescriptionResponse>(nullptr);
  }

  DicomSeriesSeriesDescriptionResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DicomSeriesSeriesDescriptionResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DicomSeriesSeriesDescriptionResponse& from);
  void MergeFrom(const DicomSeriesSeriesDescriptionResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DicomSeriesSeriesDescriptionResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "osirixgrpc.DicomSeriesSeriesDescriptionResponse";
  }
  protected:
  explicit DicomSeriesSeriesDescriptionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dicomseries_2eproto);
    return ::descriptor_table_dicomseries_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSeriesDescriptionFieldNumber = 2,
    kStatusFieldNumber = 1,
  };
  // string series_description = 2;
  void clear_series_description();
  const std::string& series_description() const;
  void set_series_description(const std::string& value);
  void set_series_description(std::string&& value);
  void set_series_description(const char* value);
  void set_series_description(const char* value, size_t size);
  std::string* mutable_series_description();
  std::string* release_series_description();
  void set_allocated_series_description(std::string* series_description);
  private:
  const std::string& _internal_series_description() const;
  void _internal_set_series_description(const std::string& value);
  std::string* _internal_mutable_series_description();
  public:

  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  const ::osirixgrpc::Status& status() const;
  ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  // @@protoc_insertion_point(class_scope:osirixgrpc.DicomSeriesSeriesDescriptionResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr series_description_;
  ::osirixgrpc::Status* status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dicomseries_2eproto;
};
// -------------------------------------------------------------------

class DicomSeriesModalityResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DicomSeriesModalityResponse) */ {
 public:
  inline DicomSeriesModalityResponse() : DicomSeriesModalityResponse(nullptr) {}
  virtual ~DicomSeriesModalityResponse();

  DicomSeriesModalityResponse(const DicomSeriesModalityResponse& from);
  DicomSeriesModalityResponse(DicomSeriesModalityResponse&& from) noexcept
    : DicomSeriesModalityResponse() {
    *this = ::std::move(from);
  }

  inline DicomSeriesModalityResponse& operator=(const DicomSeriesModalityResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DicomSeriesModalityResponse& operator=(DicomSeriesModalityResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DicomSeriesModalityResponse& default_instance();

  static inline const DicomSeriesModalityResponse* internal_default_instance() {
    return reinterpret_cast<const DicomSeriesModalityResponse*>(
               &_DicomSeriesModalityResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(DicomSeriesModalityResponse& a, DicomSeriesModalityResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DicomSeriesModalityResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DicomSeriesModalityResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DicomSeriesModalityResponse* New() const final {
    return CreateMaybeMessage<DicomSeriesModalityResponse>(nullptr);
  }

  DicomSeriesModalityResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DicomSeriesModalityResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DicomSeriesModalityResponse& from);
  void MergeFrom(const DicomSeriesModalityResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DicomSeriesModalityResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "osirixgrpc.DicomSeriesModalityResponse";
  }
  protected:
  explicit DicomSeriesModalityResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dicomseries_2eproto);
    return ::descriptor_table_dicomseries_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kModalityFieldNumber = 2,
    kStatusFieldNumber = 1,
  };
  // string modality = 2;
  void clear_modality();
  const std::string& modality() const;
  void set_modality(const std::string& value);
  void set_modality(std::string&& value);
  void set_modality(const char* value);
  void set_modality(const char* value, size_t size);
  std::string* mutable_modality();
  std::string* release_modality();
  void set_allocated_modality(std::string* modality);
  private:
  const std::string& _internal_modality() const;
  void _internal_set_modality(const std::string& value);
  std::string* _internal_mutable_modality();
  public:

  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  const ::osirixgrpc::Status& status() const;
  ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  // @@protoc_insertion_point(class_scope:osirixgrpc.DicomSeriesModalityResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr modality_;
  ::osirixgrpc::Status* status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dicomseries_2eproto;
};
// -------------------------------------------------------------------

class DicomSeriesNameResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DicomSeriesNameResponse) */ {
 public:
  inline DicomSeriesNameResponse() : DicomSeriesNameResponse(nullptr) {}
  virtual ~DicomSeriesNameResponse();

  DicomSeriesNameResponse(const DicomSeriesNameResponse& from);
  DicomSeriesNameResponse(DicomSeriesNameResponse&& from) noexcept
    : DicomSeriesNameResponse() {
    *this = ::std::move(from);
  }

  inline DicomSeriesNameResponse& operator=(const DicomSeriesNameResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DicomSeriesNameResponse& operator=(DicomSeriesNameResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DicomSeriesNameResponse& default_instance();

  static inline const DicomSeriesNameResponse* internal_default_instance() {
    return reinterpret_cast<const DicomSeriesNameResponse*>(
               &_DicomSeriesNameResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(DicomSeriesNameResponse& a, DicomSeriesNameResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DicomSeriesNameResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DicomSeriesNameResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DicomSeriesNameResponse* New() const final {
    return CreateMaybeMessage<DicomSeriesNameResponse>(nullptr);
  }

  DicomSeriesNameResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DicomSeriesNameResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DicomSeriesNameResponse& from);
  void MergeFrom(const DicomSeriesNameResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DicomSeriesNameResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "osirixgrpc.DicomSeriesNameResponse";
  }
  protected:
  explicit DicomSeriesNameResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dicomseries_2eproto);
    return ::descriptor_table_dicomseries_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kStatusFieldNumber = 1,
  };
  // string name = 2;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  const ::osirixgrpc::Status& status() const;
  ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  // @@protoc_insertion_point(class_scope:osirixgrpc.DicomSeriesNameResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::osirixgrpc::Status* status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dicomseries_2eproto;
};
// -------------------------------------------------------------------

class DicomSeriesNumberOfImagesResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DicomSeriesNumberOfImagesResponse) */ {
 public:
  inline DicomSeriesNumberOfImagesResponse() : DicomSeriesNumberOfImagesResponse(nullptr) {}
  virtual ~DicomSeriesNumberOfImagesResponse();

  DicomSeriesNumberOfImagesResponse(const DicomSeriesNumberOfImagesResponse& from);
  DicomSeriesNumberOfImagesResponse(DicomSeriesNumberOfImagesResponse&& from) noexcept
    : DicomSeriesNumberOfImagesResponse() {
    *this = ::std::move(from);
  }

  inline DicomSeriesNumberOfImagesResponse& operator=(const DicomSeriesNumberOfImagesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DicomSeriesNumberOfImagesResponse& operator=(DicomSeriesNumberOfImagesResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DicomSeriesNumberOfImagesResponse& default_instance();

  static inline const DicomSeriesNumberOfImagesResponse* internal_default_instance() {
    return reinterpret_cast<const DicomSeriesNumberOfImagesResponse*>(
               &_DicomSeriesNumberOfImagesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(DicomSeriesNumberOfImagesResponse& a, DicomSeriesNumberOfImagesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DicomSeriesNumberOfImagesResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DicomSeriesNumberOfImagesResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DicomSeriesNumberOfImagesResponse* New() const final {
    return CreateMaybeMessage<DicomSeriesNumberOfImagesResponse>(nullptr);
  }

  DicomSeriesNumberOfImagesResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DicomSeriesNumberOfImagesResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DicomSeriesNumberOfImagesResponse& from);
  void MergeFrom(const DicomSeriesNumberOfImagesResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DicomSeriesNumberOfImagesResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "osirixgrpc.DicomSeriesNumberOfImagesResponse";
  }
  protected:
  explicit DicomSeriesNumberOfImagesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dicomseries_2eproto);
    return ::descriptor_table_dicomseries_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
    kNumberOfImagesFieldNumber = 2,
  };
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  const ::osirixgrpc::Status& status() const;
  ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  // int32 number_of_images = 2;
  void clear_number_of_images();
  ::PROTOBUF_NAMESPACE_ID::int32 number_of_images() const;
  void set_number_of_images(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_number_of_images() const;
  void _internal_set_number_of_images(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:osirixgrpc.DicomSeriesNumberOfImagesResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::osirixgrpc::Status* status_;
  ::PROTOBUF_NAMESPACE_ID::int32 number_of_images_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dicomseries_2eproto;
};
// -------------------------------------------------------------------

class DicomSeriesDateResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DicomSeriesDateResponse) */ {
 public:
  inline DicomSeriesDateResponse() : DicomSeriesDateResponse(nullptr) {}
  virtual ~DicomSeriesDateResponse();

  DicomSeriesDateResponse(const DicomSeriesDateResponse& from);
  DicomSeriesDateResponse(DicomSeriesDateResponse&& from) noexcept
    : DicomSeriesDateResponse() {
    *this = ::std::move(from);
  }

  inline DicomSeriesDateResponse& operator=(const DicomSeriesDateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DicomSeriesDateResponse& operator=(DicomSeriesDateResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DicomSeriesDateResponse& default_instance();

  static inline const DicomSeriesDateResponse* internal_default_instance() {
    return reinterpret_cast<const DicomSeriesDateResponse*>(
               &_DicomSeriesDateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(DicomSeriesDateResponse& a, DicomSeriesDateResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DicomSeriesDateResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DicomSeriesDateResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DicomSeriesDateResponse* New() const final {
    return CreateMaybeMessage<DicomSeriesDateResponse>(nullptr);
  }

  DicomSeriesDateResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DicomSeriesDateResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DicomSeriesDateResponse& from);
  void MergeFrom(const DicomSeriesDateResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DicomSeriesDateResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "osirixgrpc.DicomSeriesDateResponse";
  }
  protected:
  explicit DicomSeriesDateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dicomseries_2eproto);
    return ::descriptor_table_dicomseries_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
    kYearFieldNumber = 2,
    kMonthFieldNumber = 3,
    kDayFieldNumber = 4,
    kHourFieldNumber = 5,
    kMinuteFieldNumber = 6,
    kSecondFieldNumber = 7,
    kMillisecondFieldNumber = 8,
  };
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  const ::osirixgrpc::Status& status() const;
  ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  // int32 year = 2;
  void clear_year();
  ::PROTOBUF_NAMESPACE_ID::int32 year() const;
  void set_year(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_year() const;
  void _internal_set_year(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 month = 3;
  void clear_month();
  ::PROTOBUF_NAMESPACE_ID::int32 month() const;
  void set_month(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_month() const;
  void _internal_set_month(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 day = 4;
  void clear_day();
  ::PROTOBUF_NAMESPACE_ID::int32 day() const;
  void set_day(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_day() const;
  void _internal_set_day(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 hour = 5;
  void clear_hour();
  ::PROTOBUF_NAMESPACE_ID::int32 hour() const;
  void set_hour(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_hour() const;
  void _internal_set_hour(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 minute = 6;
  void clear_minute();
  ::PROTOBUF_NAMESPACE_ID::int32 minute() const;
  void set_minute(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_minute() const;
  void _internal_set_minute(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 second = 7;
  void clear_second();
  ::PROTOBUF_NAMESPACE_ID::int32 second() const;
  void set_second(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_second() const;
  void _internal_set_second(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 millisecond = 8;
  void clear_millisecond();
  ::PROTOBUF_NAMESPACE_ID::int32 millisecond() const;
  void set_millisecond(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_millisecond() const;
  void _internal_set_millisecond(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:osirixgrpc.DicomSeriesDateResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::osirixgrpc::Status* status_;
  ::PROTOBUF_NAMESPACE_ID::int32 year_;
  ::PROTOBUF_NAMESPACE_ID::int32 month_;
  ::PROTOBUF_NAMESPACE_ID::int32 day_;
  ::PROTOBUF_NAMESPACE_ID::int32 hour_;
  ::PROTOBUF_NAMESPACE_ID::int32 minute_;
  ::PROTOBUF_NAMESPACE_ID::int32 second_;
  ::PROTOBUF_NAMESPACE_ID::int32 millisecond_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dicomseries_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// DicomSeriesPathsResponse

// .osirixgrpc.Status status = 1;
inline bool DicomSeriesPathsResponse::_internal_has_status() const {
  return this != internal_default_instance() && status_ != nullptr;
}
inline bool DicomSeriesPathsResponse::has_status() const {
  return _internal_has_status();
}
inline const ::osirixgrpc::Status& DicomSeriesPathsResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DicomSeriesPathsResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomSeriesPathsResponse.status)
  return _internal_status();
}
inline void DicomSeriesPathsResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomSeriesPathsResponse.status)
}
inline ::osirixgrpc::Status* DicomSeriesPathsResponse::release_status() {
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::Status* DicomSeriesPathsResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomSeriesPathsResponse.status)
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DicomSeriesPathsResponse::_internal_mutable_status() {
  
  if (status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    status_ = p;
  }
  return status_;
}
inline ::osirixgrpc::Status* DicomSeriesPathsResponse::mutable_status() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomSeriesPathsResponse.status)
  return _internal_mutable_status();
}
inline void DicomSeriesPathsResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status)->GetArena();
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomSeriesPathsResponse.status)
}

// repeated string paths = 2;
inline int DicomSeriesPathsResponse::_internal_paths_size() const {
  return paths_.size();
}
inline int DicomSeriesPathsResponse::paths_size() const {
  return _internal_paths_size();
}
inline void DicomSeriesPathsResponse::clear_paths() {
  paths_.Clear();
}
inline std::string* DicomSeriesPathsResponse::add_paths() {
  // @@protoc_insertion_point(field_add_mutable:osirixgrpc.DicomSeriesPathsResponse.paths)
  return _internal_add_paths();
}
inline const std::string& DicomSeriesPathsResponse::_internal_paths(int index) const {
  return paths_.Get(index);
}
inline const std::string& DicomSeriesPathsResponse::paths(int index) const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomSeriesPathsResponse.paths)
  return _internal_paths(index);
}
inline std::string* DicomSeriesPathsResponse::mutable_paths(int index) {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomSeriesPathsResponse.paths)
  return paths_.Mutable(index);
}
inline void DicomSeriesPathsResponse::set_paths(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomSeriesPathsResponse.paths)
  paths_.Mutable(index)->assign(value);
}
inline void DicomSeriesPathsResponse::set_paths(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomSeriesPathsResponse.paths)
  paths_.Mutable(index)->assign(std::move(value));
}
inline void DicomSeriesPathsResponse::set_paths(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  paths_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:osirixgrpc.DicomSeriesPathsResponse.paths)
}
inline void DicomSeriesPathsResponse::set_paths(int index, const char* value, size_t size) {
  paths_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:osirixgrpc.DicomSeriesPathsResponse.paths)
}
inline std::string* DicomSeriesPathsResponse::_internal_add_paths() {
  return paths_.Add();
}
inline void DicomSeriesPathsResponse::add_paths(const std::string& value) {
  paths_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:osirixgrpc.DicomSeriesPathsResponse.paths)
}
inline void DicomSeriesPathsResponse::add_paths(std::string&& value) {
  paths_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:osirixgrpc.DicomSeriesPathsResponse.paths)
}
inline void DicomSeriesPathsResponse::add_paths(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  paths_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:osirixgrpc.DicomSeriesPathsResponse.paths)
}
inline void DicomSeriesPathsResponse::add_paths(const char* value, size_t size) {
  paths_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:osirixgrpc.DicomSeriesPathsResponse.paths)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
DicomSeriesPathsResponse::paths() const {
  // @@protoc_insertion_point(field_list:osirixgrpc.DicomSeriesPathsResponse.paths)
  return paths_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
DicomSeriesPathsResponse::mutable_paths() {
  // @@protoc_insertion_point(field_mutable_list:osirixgrpc.DicomSeriesPathsResponse.paths)
  return &paths_;
}

// -------------------------------------------------------------------

// DicomSeriesPreviousSeriesResponse

// .osirixgrpc.Status status = 1;
inline bool DicomSeriesPreviousSeriesResponse::_internal_has_status() const {
  return this != internal_default_instance() && status_ != nullptr;
}
inline bool DicomSeriesPreviousSeriesResponse::has_status() const {
  return _internal_has_status();
}
inline const ::osirixgrpc::Status& DicomSeriesPreviousSeriesResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DicomSeriesPreviousSeriesResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomSeriesPreviousSeriesResponse.status)
  return _internal_status();
}
inline void DicomSeriesPreviousSeriesResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomSeriesPreviousSeriesResponse.status)
}
inline ::osirixgrpc::Status* DicomSeriesPreviousSeriesResponse::release_status() {
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::Status* DicomSeriesPreviousSeriesResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomSeriesPreviousSeriesResponse.status)
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DicomSeriesPreviousSeriesResponse::_internal_mutable_status() {
  
  if (status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    status_ = p;
  }
  return status_;
}
inline ::osirixgrpc::Status* DicomSeriesPreviousSeriesResponse::mutable_status() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomSeriesPreviousSeriesResponse.status)
  return _internal_mutable_status();
}
inline void DicomSeriesPreviousSeriesResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status)->GetArena();
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomSeriesPreviousSeriesResponse.status)
}

// .osirixgrpc.DicomSeries previous_series = 2;
inline bool DicomSeriesPreviousSeriesResponse::_internal_has_previous_series() const {
  return this != internal_default_instance() && previous_series_ != nullptr;
}
inline bool DicomSeriesPreviousSeriesResponse::has_previous_series() const {
  return _internal_has_previous_series();
}
inline const ::osirixgrpc::DicomSeries& DicomSeriesPreviousSeriesResponse::_internal_previous_series() const {
  const ::osirixgrpc::DicomSeries* p = previous_series_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::DicomSeries&>(
      ::osirixgrpc::_DicomSeries_default_instance_);
}
inline const ::osirixgrpc::DicomSeries& DicomSeriesPreviousSeriesResponse::previous_series() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomSeriesPreviousSeriesResponse.previous_series)
  return _internal_previous_series();
}
inline void DicomSeriesPreviousSeriesResponse::unsafe_arena_set_allocated_previous_series(
    ::osirixgrpc::DicomSeries* previous_series) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(previous_series_);
  }
  previous_series_ = previous_series;
  if (previous_series) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomSeriesPreviousSeriesResponse.previous_series)
}
inline ::osirixgrpc::DicomSeries* DicomSeriesPreviousSeriesResponse::release_previous_series() {
  
  ::osirixgrpc::DicomSeries* temp = previous_series_;
  previous_series_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::DicomSeries* DicomSeriesPreviousSeriesResponse::unsafe_arena_release_previous_series() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomSeriesPreviousSeriesResponse.previous_series)
  
  ::osirixgrpc::DicomSeries* temp = previous_series_;
  previous_series_ = nullptr;
  return temp;
}
inline ::osirixgrpc::DicomSeries* DicomSeriesPreviousSeriesResponse::_internal_mutable_previous_series() {
  
  if (previous_series_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::DicomSeries>(GetArena());
    previous_series_ = p;
  }
  return previous_series_;
}
inline ::osirixgrpc::DicomSeries* DicomSeriesPreviousSeriesResponse::mutable_previous_series() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomSeriesPreviousSeriesResponse.previous_series)
  return _internal_mutable_previous_series();
}
inline void DicomSeriesPreviousSeriesResponse::set_allocated_previous_series(::osirixgrpc::DicomSeries* previous_series) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(previous_series_);
  }
  if (previous_series) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(previous_series)->GetArena();
    if (message_arena != submessage_arena) {
      previous_series = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, previous_series, submessage_arena);
    }
    
  } else {
    
  }
  previous_series_ = previous_series;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomSeriesPreviousSeriesResponse.previous_series)
}

// -------------------------------------------------------------------

// DicomSeriesNextSeriesResponse

// .osirixgrpc.Status status = 1;
inline bool DicomSeriesNextSeriesResponse::_internal_has_status() const {
  return this != internal_default_instance() && status_ != nullptr;
}
inline bool DicomSeriesNextSeriesResponse::has_status() const {
  return _internal_has_status();
}
inline const ::osirixgrpc::Status& DicomSeriesNextSeriesResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DicomSeriesNextSeriesResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomSeriesNextSeriesResponse.status)
  return _internal_status();
}
inline void DicomSeriesNextSeriesResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomSeriesNextSeriesResponse.status)
}
inline ::osirixgrpc::Status* DicomSeriesNextSeriesResponse::release_status() {
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::Status* DicomSeriesNextSeriesResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomSeriesNextSeriesResponse.status)
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DicomSeriesNextSeriesResponse::_internal_mutable_status() {
  
  if (status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    status_ = p;
  }
  return status_;
}
inline ::osirixgrpc::Status* DicomSeriesNextSeriesResponse::mutable_status() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomSeriesNextSeriesResponse.status)
  return _internal_mutable_status();
}
inline void DicomSeriesNextSeriesResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status)->GetArena();
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomSeriesNextSeriesResponse.status)
}

// .osirixgrpc.DicomSeries next_series = 2;
inline bool DicomSeriesNextSeriesResponse::_internal_has_next_series() const {
  return this != internal_default_instance() && next_series_ != nullptr;
}
inline bool DicomSeriesNextSeriesResponse::has_next_series() const {
  return _internal_has_next_series();
}
inline const ::osirixgrpc::DicomSeries& DicomSeriesNextSeriesResponse::_internal_next_series() const {
  const ::osirixgrpc::DicomSeries* p = next_series_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::DicomSeries&>(
      ::osirixgrpc::_DicomSeries_default_instance_);
}
inline const ::osirixgrpc::DicomSeries& DicomSeriesNextSeriesResponse::next_series() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomSeriesNextSeriesResponse.next_series)
  return _internal_next_series();
}
inline void DicomSeriesNextSeriesResponse::unsafe_arena_set_allocated_next_series(
    ::osirixgrpc::DicomSeries* next_series) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(next_series_);
  }
  next_series_ = next_series;
  if (next_series) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomSeriesNextSeriesResponse.next_series)
}
inline ::osirixgrpc::DicomSeries* DicomSeriesNextSeriesResponse::release_next_series() {
  
  ::osirixgrpc::DicomSeries* temp = next_series_;
  next_series_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::DicomSeries* DicomSeriesNextSeriesResponse::unsafe_arena_release_next_series() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomSeriesNextSeriesResponse.next_series)
  
  ::osirixgrpc::DicomSeries* temp = next_series_;
  next_series_ = nullptr;
  return temp;
}
inline ::osirixgrpc::DicomSeries* DicomSeriesNextSeriesResponse::_internal_mutable_next_series() {
  
  if (next_series_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::DicomSeries>(GetArena());
    next_series_ = p;
  }
  return next_series_;
}
inline ::osirixgrpc::DicomSeries* DicomSeriesNextSeriesResponse::mutable_next_series() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomSeriesNextSeriesResponse.next_series)
  return _internal_mutable_next_series();
}
inline void DicomSeriesNextSeriesResponse::set_allocated_next_series(::osirixgrpc::DicomSeries* next_series) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(next_series_);
  }
  if (next_series) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(next_series)->GetArena();
    if (message_arena != submessage_arena) {
      next_series = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, next_series, submessage_arena);
    }
    
  } else {
    
  }
  next_series_ = next_series;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomSeriesNextSeriesResponse.next_series)
}

// -------------------------------------------------------------------

// DicomSeriesSortedImagesResponse

// .osirixgrpc.Status status = 1;
inline bool DicomSeriesSortedImagesResponse::_internal_has_status() const {
  return this != internal_default_instance() && status_ != nullptr;
}
inline bool DicomSeriesSortedImagesResponse::has_status() const {
  return _internal_has_status();
}
inline const ::osirixgrpc::Status& DicomSeriesSortedImagesResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DicomSeriesSortedImagesResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomSeriesSortedImagesResponse.status)
  return _internal_status();
}
inline void DicomSeriesSortedImagesResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomSeriesSortedImagesResponse.status)
}
inline ::osirixgrpc::Status* DicomSeriesSortedImagesResponse::release_status() {
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::Status* DicomSeriesSortedImagesResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomSeriesSortedImagesResponse.status)
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DicomSeriesSortedImagesResponse::_internal_mutable_status() {
  
  if (status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    status_ = p;
  }
  return status_;
}
inline ::osirixgrpc::Status* DicomSeriesSortedImagesResponse::mutable_status() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomSeriesSortedImagesResponse.status)
  return _internal_mutable_status();
}
inline void DicomSeriesSortedImagesResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status)->GetArena();
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomSeriesSortedImagesResponse.status)
}

// repeated .osirixgrpc.DicomImage sorted_images = 2;
inline int DicomSeriesSortedImagesResponse::_internal_sorted_images_size() const {
  return sorted_images_.size();
}
inline int DicomSeriesSortedImagesResponse::sorted_images_size() const {
  return _internal_sorted_images_size();
}
inline ::osirixgrpc::DicomImage* DicomSeriesSortedImagesResponse::mutable_sorted_images(int index) {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomSeriesSortedImagesResponse.sorted_images)
  return sorted_images_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::osirixgrpc::DicomImage >*
DicomSeriesSortedImagesResponse::mutable_sorted_images() {
  // @@protoc_insertion_point(field_mutable_list:osirixgrpc.DicomSeriesSortedImagesResponse.sorted_images)
  return &sorted_images_;
}
inline const ::osirixgrpc::DicomImage& DicomSeriesSortedImagesResponse::_internal_sorted_images(int index) const {
  return sorted_images_.Get(index);
}
inline const ::osirixgrpc::DicomImage& DicomSeriesSortedImagesResponse::sorted_images(int index) const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomSeriesSortedImagesResponse.sorted_images)
  return _internal_sorted_images(index);
}
inline ::osirixgrpc::DicomImage* DicomSeriesSortedImagesResponse::_internal_add_sorted_images() {
  return sorted_images_.Add();
}
inline ::osirixgrpc::DicomImage* DicomSeriesSortedImagesResponse::add_sorted_images() {
  // @@protoc_insertion_point(field_add:osirixgrpc.DicomSeriesSortedImagesResponse.sorted_images)
  return _internal_add_sorted_images();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::osirixgrpc::DicomImage >&
DicomSeriesSortedImagesResponse::sorted_images() const {
  // @@protoc_insertion_point(field_list:osirixgrpc.DicomSeriesSortedImagesResponse.sorted_images)
  return sorted_images_;
}

// -------------------------------------------------------------------

// DicomSeriesStudyResponse

// .osirixgrpc.Status status = 1;
inline bool DicomSeriesStudyResponse::_internal_has_status() const {
  return this != internal_default_instance() && status_ != nullptr;
}
inline bool DicomSeriesStudyResponse::has_status() const {
  return _internal_has_status();
}
inline const ::osirixgrpc::Status& DicomSeriesStudyResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DicomSeriesStudyResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomSeriesStudyResponse.status)
  return _internal_status();
}
inline void DicomSeriesStudyResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomSeriesStudyResponse.status)
}
inline ::osirixgrpc::Status* DicomSeriesStudyResponse::release_status() {
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::Status* DicomSeriesStudyResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomSeriesStudyResponse.status)
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DicomSeriesStudyResponse::_internal_mutable_status() {
  
  if (status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    status_ = p;
  }
  return status_;
}
inline ::osirixgrpc::Status* DicomSeriesStudyResponse::mutable_status() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomSeriesStudyResponse.status)
  return _internal_mutable_status();
}
inline void DicomSeriesStudyResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status)->GetArena();
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomSeriesStudyResponse.status)
}

// .osirixgrpc.DicomStudy study = 2;
inline bool DicomSeriesStudyResponse::_internal_has_study() const {
  return this != internal_default_instance() && study_ != nullptr;
}
inline bool DicomSeriesStudyResponse::has_study() const {
  return _internal_has_study();
}
inline const ::osirixgrpc::DicomStudy& DicomSeriesStudyResponse::_internal_study() const {
  const ::osirixgrpc::DicomStudy* p = study_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::DicomStudy&>(
      ::osirixgrpc::_DicomStudy_default_instance_);
}
inline const ::osirixgrpc::DicomStudy& DicomSeriesStudyResponse::study() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomSeriesStudyResponse.study)
  return _internal_study();
}
inline void DicomSeriesStudyResponse::unsafe_arena_set_allocated_study(
    ::osirixgrpc::DicomStudy* study) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(study_);
  }
  study_ = study;
  if (study) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomSeriesStudyResponse.study)
}
inline ::osirixgrpc::DicomStudy* DicomSeriesStudyResponse::release_study() {
  
  ::osirixgrpc::DicomStudy* temp = study_;
  study_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::DicomStudy* DicomSeriesStudyResponse::unsafe_arena_release_study() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomSeriesStudyResponse.study)
  
  ::osirixgrpc::DicomStudy* temp = study_;
  study_ = nullptr;
  return temp;
}
inline ::osirixgrpc::DicomStudy* DicomSeriesStudyResponse::_internal_mutable_study() {
  
  if (study_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::DicomStudy>(GetArena());
    study_ = p;
  }
  return study_;
}
inline ::osirixgrpc::DicomStudy* DicomSeriesStudyResponse::mutable_study() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomSeriesStudyResponse.study)
  return _internal_mutable_study();
}
inline void DicomSeriesStudyResponse::set_allocated_study(::osirixgrpc::DicomStudy* study) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(study_);
  }
  if (study) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(study)->GetArena();
    if (message_arena != submessage_arena) {
      study = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, study, submessage_arena);
    }
    
  } else {
    
  }
  study_ = study;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomSeriesStudyResponse.study)
}

// -------------------------------------------------------------------

// DicomSeriesImagesResponse

// .osirixgrpc.Status status = 1;
inline bool DicomSeriesImagesResponse::_internal_has_status() const {
  return this != internal_default_instance() && status_ != nullptr;
}
inline bool DicomSeriesImagesResponse::has_status() const {
  return _internal_has_status();
}
inline const ::osirixgrpc::Status& DicomSeriesImagesResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DicomSeriesImagesResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomSeriesImagesResponse.status)
  return _internal_status();
}
inline void DicomSeriesImagesResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomSeriesImagesResponse.status)
}
inline ::osirixgrpc::Status* DicomSeriesImagesResponse::release_status() {
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::Status* DicomSeriesImagesResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomSeriesImagesResponse.status)
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DicomSeriesImagesResponse::_internal_mutable_status() {
  
  if (status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    status_ = p;
  }
  return status_;
}
inline ::osirixgrpc::Status* DicomSeriesImagesResponse::mutable_status() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomSeriesImagesResponse.status)
  return _internal_mutable_status();
}
inline void DicomSeriesImagesResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status)->GetArena();
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomSeriesImagesResponse.status)
}

// repeated .osirixgrpc.DicomImage images = 2;
inline int DicomSeriesImagesResponse::_internal_images_size() const {
  return images_.size();
}
inline int DicomSeriesImagesResponse::images_size() const {
  return _internal_images_size();
}
inline ::osirixgrpc::DicomImage* DicomSeriesImagesResponse::mutable_images(int index) {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomSeriesImagesResponse.images)
  return images_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::osirixgrpc::DicomImage >*
DicomSeriesImagesResponse::mutable_images() {
  // @@protoc_insertion_point(field_mutable_list:osirixgrpc.DicomSeriesImagesResponse.images)
  return &images_;
}
inline const ::osirixgrpc::DicomImage& DicomSeriesImagesResponse::_internal_images(int index) const {
  return images_.Get(index);
}
inline const ::osirixgrpc::DicomImage& DicomSeriesImagesResponse::images(int index) const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomSeriesImagesResponse.images)
  return _internal_images(index);
}
inline ::osirixgrpc::DicomImage* DicomSeriesImagesResponse::_internal_add_images() {
  return images_.Add();
}
inline ::osirixgrpc::DicomImage* DicomSeriesImagesResponse::add_images() {
  // @@protoc_insertion_point(field_add:osirixgrpc.DicomSeriesImagesResponse.images)
  return _internal_add_images();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::osirixgrpc::DicomImage >&
DicomSeriesImagesResponse::images() const {
  // @@protoc_insertion_point(field_list:osirixgrpc.DicomSeriesImagesResponse.images)
  return images_;
}

// -------------------------------------------------------------------

// DicomSeriesSeriesInstanceUIDResponse

// .osirixgrpc.Status status = 1;
inline bool DicomSeriesSeriesInstanceUIDResponse::_internal_has_status() const {
  return this != internal_default_instance() && status_ != nullptr;
}
inline bool DicomSeriesSeriesInstanceUIDResponse::has_status() const {
  return _internal_has_status();
}
inline const ::osirixgrpc::Status& DicomSeriesSeriesInstanceUIDResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DicomSeriesSeriesInstanceUIDResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomSeriesSeriesInstanceUIDResponse.status)
  return _internal_status();
}
inline void DicomSeriesSeriesInstanceUIDResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomSeriesSeriesInstanceUIDResponse.status)
}
inline ::osirixgrpc::Status* DicomSeriesSeriesInstanceUIDResponse::release_status() {
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::Status* DicomSeriesSeriesInstanceUIDResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomSeriesSeriesInstanceUIDResponse.status)
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DicomSeriesSeriesInstanceUIDResponse::_internal_mutable_status() {
  
  if (status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    status_ = p;
  }
  return status_;
}
inline ::osirixgrpc::Status* DicomSeriesSeriesInstanceUIDResponse::mutable_status() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomSeriesSeriesInstanceUIDResponse.status)
  return _internal_mutable_status();
}
inline void DicomSeriesSeriesInstanceUIDResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status)->GetArena();
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomSeriesSeriesInstanceUIDResponse.status)
}

// string series_instance_uid = 2;
inline void DicomSeriesSeriesInstanceUIDResponse::clear_series_instance_uid() {
  series_instance_uid_.ClearToEmpty();
}
inline const std::string& DicomSeriesSeriesInstanceUIDResponse::series_instance_uid() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomSeriesSeriesInstanceUIDResponse.series_instance_uid)
  return _internal_series_instance_uid();
}
inline void DicomSeriesSeriesInstanceUIDResponse::set_series_instance_uid(const std::string& value) {
  _internal_set_series_instance_uid(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomSeriesSeriesInstanceUIDResponse.series_instance_uid)
}
inline std::string* DicomSeriesSeriesInstanceUIDResponse::mutable_series_instance_uid() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomSeriesSeriesInstanceUIDResponse.series_instance_uid)
  return _internal_mutable_series_instance_uid();
}
inline const std::string& DicomSeriesSeriesInstanceUIDResponse::_internal_series_instance_uid() const {
  return series_instance_uid_.Get();
}
inline void DicomSeriesSeriesInstanceUIDResponse::_internal_set_series_instance_uid(const std::string& value) {
  
  series_instance_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void DicomSeriesSeriesInstanceUIDResponse::set_series_instance_uid(std::string&& value) {
  
  series_instance_uid_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:osirixgrpc.DicomSeriesSeriesInstanceUIDResponse.series_instance_uid)
}
inline void DicomSeriesSeriesInstanceUIDResponse::set_series_instance_uid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  series_instance_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:osirixgrpc.DicomSeriesSeriesInstanceUIDResponse.series_instance_uid)
}
inline void DicomSeriesSeriesInstanceUIDResponse::set_series_instance_uid(const char* value,
    size_t size) {
  
  series_instance_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:osirixgrpc.DicomSeriesSeriesInstanceUIDResponse.series_instance_uid)
}
inline std::string* DicomSeriesSeriesInstanceUIDResponse::_internal_mutable_series_instance_uid() {
  
  return series_instance_uid_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* DicomSeriesSeriesInstanceUIDResponse::release_series_instance_uid() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomSeriesSeriesInstanceUIDResponse.series_instance_uid)
  return series_instance_uid_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void DicomSeriesSeriesInstanceUIDResponse::set_allocated_series_instance_uid(std::string* series_instance_uid) {
  if (series_instance_uid != nullptr) {
    
  } else {
    
  }
  series_instance_uid_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), series_instance_uid,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomSeriesSeriesInstanceUIDResponse.series_instance_uid)
}

// -------------------------------------------------------------------

// DicomSeriesSeriesSOPClassUIDResponse

// .osirixgrpc.Status status = 1;
inline bool DicomSeriesSeriesSOPClassUIDResponse::_internal_has_status() const {
  return this != internal_default_instance() && status_ != nullptr;
}
inline bool DicomSeriesSeriesSOPClassUIDResponse::has_status() const {
  return _internal_has_status();
}
inline const ::osirixgrpc::Status& DicomSeriesSeriesSOPClassUIDResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DicomSeriesSeriesSOPClassUIDResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomSeriesSeriesSOPClassUIDResponse.status)
  return _internal_status();
}
inline void DicomSeriesSeriesSOPClassUIDResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomSeriesSeriesSOPClassUIDResponse.status)
}
inline ::osirixgrpc::Status* DicomSeriesSeriesSOPClassUIDResponse::release_status() {
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::Status* DicomSeriesSeriesSOPClassUIDResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomSeriesSeriesSOPClassUIDResponse.status)
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DicomSeriesSeriesSOPClassUIDResponse::_internal_mutable_status() {
  
  if (status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    status_ = p;
  }
  return status_;
}
inline ::osirixgrpc::Status* DicomSeriesSeriesSOPClassUIDResponse::mutable_status() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomSeriesSeriesSOPClassUIDResponse.status)
  return _internal_mutable_status();
}
inline void DicomSeriesSeriesSOPClassUIDResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status)->GetArena();
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomSeriesSeriesSOPClassUIDResponse.status)
}

// string series_sop_class_uid = 2;
inline void DicomSeriesSeriesSOPClassUIDResponse::clear_series_sop_class_uid() {
  series_sop_class_uid_.ClearToEmpty();
}
inline const std::string& DicomSeriesSeriesSOPClassUIDResponse::series_sop_class_uid() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomSeriesSeriesSOPClassUIDResponse.series_sop_class_uid)
  return _internal_series_sop_class_uid();
}
inline void DicomSeriesSeriesSOPClassUIDResponse::set_series_sop_class_uid(const std::string& value) {
  _internal_set_series_sop_class_uid(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomSeriesSeriesSOPClassUIDResponse.series_sop_class_uid)
}
inline std::string* DicomSeriesSeriesSOPClassUIDResponse::mutable_series_sop_class_uid() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomSeriesSeriesSOPClassUIDResponse.series_sop_class_uid)
  return _internal_mutable_series_sop_class_uid();
}
inline const std::string& DicomSeriesSeriesSOPClassUIDResponse::_internal_series_sop_class_uid() const {
  return series_sop_class_uid_.Get();
}
inline void DicomSeriesSeriesSOPClassUIDResponse::_internal_set_series_sop_class_uid(const std::string& value) {
  
  series_sop_class_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void DicomSeriesSeriesSOPClassUIDResponse::set_series_sop_class_uid(std::string&& value) {
  
  series_sop_class_uid_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:osirixgrpc.DicomSeriesSeriesSOPClassUIDResponse.series_sop_class_uid)
}
inline void DicomSeriesSeriesSOPClassUIDResponse::set_series_sop_class_uid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  series_sop_class_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:osirixgrpc.DicomSeriesSeriesSOPClassUIDResponse.series_sop_class_uid)
}
inline void DicomSeriesSeriesSOPClassUIDResponse::set_series_sop_class_uid(const char* value,
    size_t size) {
  
  series_sop_class_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:osirixgrpc.DicomSeriesSeriesSOPClassUIDResponse.series_sop_class_uid)
}
inline std::string* DicomSeriesSeriesSOPClassUIDResponse::_internal_mutable_series_sop_class_uid() {
  
  return series_sop_class_uid_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* DicomSeriesSeriesSOPClassUIDResponse::release_series_sop_class_uid() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomSeriesSeriesSOPClassUIDResponse.series_sop_class_uid)
  return series_sop_class_uid_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void DicomSeriesSeriesSOPClassUIDResponse::set_allocated_series_sop_class_uid(std::string* series_sop_class_uid) {
  if (series_sop_class_uid != nullptr) {
    
  } else {
    
  }
  series_sop_class_uid_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), series_sop_class_uid,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomSeriesSeriesSOPClassUIDResponse.series_sop_class_uid)
}

// -------------------------------------------------------------------

// DicomSeriesSeriesDescriptionResponse

// .osirixgrpc.Status status = 1;
inline bool DicomSeriesSeriesDescriptionResponse::_internal_has_status() const {
  return this != internal_default_instance() && status_ != nullptr;
}
inline bool DicomSeriesSeriesDescriptionResponse::has_status() const {
  return _internal_has_status();
}
inline const ::osirixgrpc::Status& DicomSeriesSeriesDescriptionResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DicomSeriesSeriesDescriptionResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomSeriesSeriesDescriptionResponse.status)
  return _internal_status();
}
inline void DicomSeriesSeriesDescriptionResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomSeriesSeriesDescriptionResponse.status)
}
inline ::osirixgrpc::Status* DicomSeriesSeriesDescriptionResponse::release_status() {
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::Status* DicomSeriesSeriesDescriptionResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomSeriesSeriesDescriptionResponse.status)
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DicomSeriesSeriesDescriptionResponse::_internal_mutable_status() {
  
  if (status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    status_ = p;
  }
  return status_;
}
inline ::osirixgrpc::Status* DicomSeriesSeriesDescriptionResponse::mutable_status() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomSeriesSeriesDescriptionResponse.status)
  return _internal_mutable_status();
}
inline void DicomSeriesSeriesDescriptionResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status)->GetArena();
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomSeriesSeriesDescriptionResponse.status)
}

// string series_description = 2;
inline void DicomSeriesSeriesDescriptionResponse::clear_series_description() {
  series_description_.ClearToEmpty();
}
inline const std::string& DicomSeriesSeriesDescriptionResponse::series_description() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomSeriesSeriesDescriptionResponse.series_description)
  return _internal_series_description();
}
inline void DicomSeriesSeriesDescriptionResponse::set_series_description(const std::string& value) {
  _internal_set_series_description(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomSeriesSeriesDescriptionResponse.series_description)
}
inline std::string* DicomSeriesSeriesDescriptionResponse::mutable_series_description() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomSeriesSeriesDescriptionResponse.series_description)
  return _internal_mutable_series_description();
}
inline const std::string& DicomSeriesSeriesDescriptionResponse::_internal_series_description() const {
  return series_description_.Get();
}
inline void DicomSeriesSeriesDescriptionResponse::_internal_set_series_description(const std::string& value) {
  
  series_description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void DicomSeriesSeriesDescriptionResponse::set_series_description(std::string&& value) {
  
  series_description_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:osirixgrpc.DicomSeriesSeriesDescriptionResponse.series_description)
}
inline void DicomSeriesSeriesDescriptionResponse::set_series_description(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  series_description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:osirixgrpc.DicomSeriesSeriesDescriptionResponse.series_description)
}
inline void DicomSeriesSeriesDescriptionResponse::set_series_description(const char* value,
    size_t size) {
  
  series_description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:osirixgrpc.DicomSeriesSeriesDescriptionResponse.series_description)
}
inline std::string* DicomSeriesSeriesDescriptionResponse::_internal_mutable_series_description() {
  
  return series_description_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* DicomSeriesSeriesDescriptionResponse::release_series_description() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomSeriesSeriesDescriptionResponse.series_description)
  return series_description_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void DicomSeriesSeriesDescriptionResponse::set_allocated_series_description(std::string* series_description) {
  if (series_description != nullptr) {
    
  } else {
    
  }
  series_description_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), series_description,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomSeriesSeriesDescriptionResponse.series_description)
}

// -------------------------------------------------------------------

// DicomSeriesModalityResponse

// .osirixgrpc.Status status = 1;
inline bool DicomSeriesModalityResponse::_internal_has_status() const {
  return this != internal_default_instance() && status_ != nullptr;
}
inline bool DicomSeriesModalityResponse::has_status() const {
  return _internal_has_status();
}
inline const ::osirixgrpc::Status& DicomSeriesModalityResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DicomSeriesModalityResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomSeriesModalityResponse.status)
  return _internal_status();
}
inline void DicomSeriesModalityResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomSeriesModalityResponse.status)
}
inline ::osirixgrpc::Status* DicomSeriesModalityResponse::release_status() {
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::Status* DicomSeriesModalityResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomSeriesModalityResponse.status)
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DicomSeriesModalityResponse::_internal_mutable_status() {
  
  if (status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    status_ = p;
  }
  return status_;
}
inline ::osirixgrpc::Status* DicomSeriesModalityResponse::mutable_status() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomSeriesModalityResponse.status)
  return _internal_mutable_status();
}
inline void DicomSeriesModalityResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status)->GetArena();
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomSeriesModalityResponse.status)
}

// string modality = 2;
inline void DicomSeriesModalityResponse::clear_modality() {
  modality_.ClearToEmpty();
}
inline const std::string& DicomSeriesModalityResponse::modality() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomSeriesModalityResponse.modality)
  return _internal_modality();
}
inline void DicomSeriesModalityResponse::set_modality(const std::string& value) {
  _internal_set_modality(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomSeriesModalityResponse.modality)
}
inline std::string* DicomSeriesModalityResponse::mutable_modality() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomSeriesModalityResponse.modality)
  return _internal_mutable_modality();
}
inline const std::string& DicomSeriesModalityResponse::_internal_modality() const {
  return modality_.Get();
}
inline void DicomSeriesModalityResponse::_internal_set_modality(const std::string& value) {
  
  modality_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void DicomSeriesModalityResponse::set_modality(std::string&& value) {
  
  modality_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:osirixgrpc.DicomSeriesModalityResponse.modality)
}
inline void DicomSeriesModalityResponse::set_modality(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  modality_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:osirixgrpc.DicomSeriesModalityResponse.modality)
}
inline void DicomSeriesModalityResponse::set_modality(const char* value,
    size_t size) {
  
  modality_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:osirixgrpc.DicomSeriesModalityResponse.modality)
}
inline std::string* DicomSeriesModalityResponse::_internal_mutable_modality() {
  
  return modality_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* DicomSeriesModalityResponse::release_modality() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomSeriesModalityResponse.modality)
  return modality_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void DicomSeriesModalityResponse::set_allocated_modality(std::string* modality) {
  if (modality != nullptr) {
    
  } else {
    
  }
  modality_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), modality,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomSeriesModalityResponse.modality)
}

// -------------------------------------------------------------------

// DicomSeriesNameResponse

// .osirixgrpc.Status status = 1;
inline bool DicomSeriesNameResponse::_internal_has_status() const {
  return this != internal_default_instance() && status_ != nullptr;
}
inline bool DicomSeriesNameResponse::has_status() const {
  return _internal_has_status();
}
inline const ::osirixgrpc::Status& DicomSeriesNameResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DicomSeriesNameResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomSeriesNameResponse.status)
  return _internal_status();
}
inline void DicomSeriesNameResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomSeriesNameResponse.status)
}
inline ::osirixgrpc::Status* DicomSeriesNameResponse::release_status() {
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::Status* DicomSeriesNameResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomSeriesNameResponse.status)
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DicomSeriesNameResponse::_internal_mutable_status() {
  
  if (status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    status_ = p;
  }
  return status_;
}
inline ::osirixgrpc::Status* DicomSeriesNameResponse::mutable_status() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomSeriesNameResponse.status)
  return _internal_mutable_status();
}
inline void DicomSeriesNameResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status)->GetArena();
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomSeriesNameResponse.status)
}

// string name = 2;
inline void DicomSeriesNameResponse::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& DicomSeriesNameResponse::name() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomSeriesNameResponse.name)
  return _internal_name();
}
inline void DicomSeriesNameResponse::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomSeriesNameResponse.name)
}
inline std::string* DicomSeriesNameResponse::mutable_name() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomSeriesNameResponse.name)
  return _internal_mutable_name();
}
inline const std::string& DicomSeriesNameResponse::_internal_name() const {
  return name_.Get();
}
inline void DicomSeriesNameResponse::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void DicomSeriesNameResponse::set_name(std::string&& value) {
  
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:osirixgrpc.DicomSeriesNameResponse.name)
}
inline void DicomSeriesNameResponse::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:osirixgrpc.DicomSeriesNameResponse.name)
}
inline void DicomSeriesNameResponse::set_name(const char* value,
    size_t size) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:osirixgrpc.DicomSeriesNameResponse.name)
}
inline std::string* DicomSeriesNameResponse::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* DicomSeriesNameResponse::release_name() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomSeriesNameResponse.name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void DicomSeriesNameResponse::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomSeriesNameResponse.name)
}

// -------------------------------------------------------------------

// DicomSeriesNumberOfImagesResponse

// .osirixgrpc.Status status = 1;
inline bool DicomSeriesNumberOfImagesResponse::_internal_has_status() const {
  return this != internal_default_instance() && status_ != nullptr;
}
inline bool DicomSeriesNumberOfImagesResponse::has_status() const {
  return _internal_has_status();
}
inline const ::osirixgrpc::Status& DicomSeriesNumberOfImagesResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DicomSeriesNumberOfImagesResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomSeriesNumberOfImagesResponse.status)
  return _internal_status();
}
inline void DicomSeriesNumberOfImagesResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomSeriesNumberOfImagesResponse.status)
}
inline ::osirixgrpc::Status* DicomSeriesNumberOfImagesResponse::release_status() {
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::Status* DicomSeriesNumberOfImagesResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomSeriesNumberOfImagesResponse.status)
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DicomSeriesNumberOfImagesResponse::_internal_mutable_status() {
  
  if (status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    status_ = p;
  }
  return status_;
}
inline ::osirixgrpc::Status* DicomSeriesNumberOfImagesResponse::mutable_status() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomSeriesNumberOfImagesResponse.status)
  return _internal_mutable_status();
}
inline void DicomSeriesNumberOfImagesResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status)->GetArena();
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomSeriesNumberOfImagesResponse.status)
}

// int32 number_of_images = 2;
inline void DicomSeriesNumberOfImagesResponse::clear_number_of_images() {
  number_of_images_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomSeriesNumberOfImagesResponse::_internal_number_of_images() const {
  return number_of_images_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomSeriesNumberOfImagesResponse::number_of_images() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomSeriesNumberOfImagesResponse.number_of_images)
  return _internal_number_of_images();
}
inline void DicomSeriesNumberOfImagesResponse::_internal_set_number_of_images(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  number_of_images_ = value;
}
inline void DicomSeriesNumberOfImagesResponse::set_number_of_images(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_number_of_images(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomSeriesNumberOfImagesResponse.number_of_images)
}

// -------------------------------------------------------------------

// DicomSeriesDateResponse

// .osirixgrpc.Status status = 1;
inline bool DicomSeriesDateResponse::_internal_has_status() const {
  return this != internal_default_instance() && status_ != nullptr;
}
inline bool DicomSeriesDateResponse::has_status() const {
  return _internal_has_status();
}
inline const ::osirixgrpc::Status& DicomSeriesDateResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DicomSeriesDateResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomSeriesDateResponse.status)
  return _internal_status();
}
inline void DicomSeriesDateResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomSeriesDateResponse.status)
}
inline ::osirixgrpc::Status* DicomSeriesDateResponse::release_status() {
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::Status* DicomSeriesDateResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomSeriesDateResponse.status)
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DicomSeriesDateResponse::_internal_mutable_status() {
  
  if (status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    status_ = p;
  }
  return status_;
}
inline ::osirixgrpc::Status* DicomSeriesDateResponse::mutable_status() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomSeriesDateResponse.status)
  return _internal_mutable_status();
}
inline void DicomSeriesDateResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status)->GetArena();
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomSeriesDateResponse.status)
}

// int32 year = 2;
inline void DicomSeriesDateResponse::clear_year() {
  year_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomSeriesDateResponse::_internal_year() const {
  return year_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomSeriesDateResponse::year() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomSeriesDateResponse.year)
  return _internal_year();
}
inline void DicomSeriesDateResponse::_internal_set_year(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  year_ = value;
}
inline void DicomSeriesDateResponse::set_year(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_year(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomSeriesDateResponse.year)
}

// int32 month = 3;
inline void DicomSeriesDateResponse::clear_month() {
  month_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomSeriesDateResponse::_internal_month() const {
  return month_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomSeriesDateResponse::month() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomSeriesDateResponse.month)
  return _internal_month();
}
inline void DicomSeriesDateResponse::_internal_set_month(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  month_ = value;
}
inline void DicomSeriesDateResponse::set_month(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_month(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomSeriesDateResponse.month)
}

// int32 day = 4;
inline void DicomSeriesDateResponse::clear_day() {
  day_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomSeriesDateResponse::_internal_day() const {
  return day_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomSeriesDateResponse::day() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomSeriesDateResponse.day)
  return _internal_day();
}
inline void DicomSeriesDateResponse::_internal_set_day(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  day_ = value;
}
inline void DicomSeriesDateResponse::set_day(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_day(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomSeriesDateResponse.day)
}

// int32 hour = 5;
inline void DicomSeriesDateResponse::clear_hour() {
  hour_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomSeriesDateResponse::_internal_hour() const {
  return hour_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomSeriesDateResponse::hour() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomSeriesDateResponse.hour)
  return _internal_hour();
}
inline void DicomSeriesDateResponse::_internal_set_hour(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  hour_ = value;
}
inline void DicomSeriesDateResponse::set_hour(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_hour(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomSeriesDateResponse.hour)
}

// int32 minute = 6;
inline void DicomSeriesDateResponse::clear_minute() {
  minute_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomSeriesDateResponse::_internal_minute() const {
  return minute_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomSeriesDateResponse::minute() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomSeriesDateResponse.minute)
  return _internal_minute();
}
inline void DicomSeriesDateResponse::_internal_set_minute(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  minute_ = value;
}
inline void DicomSeriesDateResponse::set_minute(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_minute(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomSeriesDateResponse.minute)
}

// int32 second = 7;
inline void DicomSeriesDateResponse::clear_second() {
  second_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomSeriesDateResponse::_internal_second() const {
  return second_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomSeriesDateResponse::second() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomSeriesDateResponse.second)
  return _internal_second();
}
inline void DicomSeriesDateResponse::_internal_set_second(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  second_ = value;
}
inline void DicomSeriesDateResponse::set_second(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_second(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomSeriesDateResponse.second)
}

// int32 millisecond = 8;
inline void DicomSeriesDateResponse::clear_millisecond() {
  millisecond_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomSeriesDateResponse::_internal_millisecond() const {
  return millisecond_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomSeriesDateResponse::millisecond() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomSeriesDateResponse.millisecond)
  return _internal_millisecond();
}
inline void DicomSeriesDateResponse::_internal_set_millisecond(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  millisecond_ = value;
}
inline void DicomSeriesDateResponse::set_millisecond(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_millisecond(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomSeriesDateResponse.millisecond)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace osirixgrpc

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_dicomseries_2eproto
