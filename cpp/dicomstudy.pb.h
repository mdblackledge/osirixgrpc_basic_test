// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dicomstudy.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_dicomstudy_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_dicomstudy_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "utilities.pb.h"
#include "types.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_dicomstudy_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_dicomstudy_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[21]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_dicomstudy_2eproto;
namespace osirixgrpc {
class DicomStudyDateAddedResponse;
class DicomStudyDateAddedResponseDefaultTypeInternal;
extern DicomStudyDateAddedResponseDefaultTypeInternal _DicomStudyDateAddedResponse_default_instance_;
class DicomStudyDateOfBirthResponse;
class DicomStudyDateOfBirthResponseDefaultTypeInternal;
extern DicomStudyDateOfBirthResponseDefaultTypeInternal _DicomStudyDateOfBirthResponse_default_instance_;
class DicomStudyDateResponse;
class DicomStudyDateResponseDefaultTypeInternal;
extern DicomStudyDateResponseDefaultTypeInternal _DicomStudyDateResponse_default_instance_;
class DicomStudyImagesResponse;
class DicomStudyImagesResponseDefaultTypeInternal;
extern DicomStudyImagesResponseDefaultTypeInternal _DicomStudyImagesResponse_default_instance_;
class DicomStudyInstitutionNameResponse;
class DicomStudyInstitutionNameResponseDefaultTypeInternal;
extern DicomStudyInstitutionNameResponseDefaultTypeInternal _DicomStudyInstitutionNameResponse_default_instance_;
class DicomStudyModalitiesResponse;
class DicomStudyModalitiesResponseDefaultTypeInternal;
extern DicomStudyModalitiesResponseDefaultTypeInternal _DicomStudyModalitiesResponse_default_instance_;
class DicomStudyModalityResponse;
class DicomStudyModalityResponseDefaultTypeInternal;
extern DicomStudyModalityResponseDefaultTypeInternal _DicomStudyModalityResponse_default_instance_;
class DicomStudyNameResponse;
class DicomStudyNameResponseDefaultTypeInternal;
extern DicomStudyNameResponseDefaultTypeInternal _DicomStudyNameResponse_default_instance_;
class DicomStudyNoFilesExcludingMultiFramesResponse;
class DicomStudyNoFilesExcludingMultiFramesResponseDefaultTypeInternal;
extern DicomStudyNoFilesExcludingMultiFramesResponseDefaultTypeInternal _DicomStudyNoFilesExcludingMultiFramesResponse_default_instance_;
class DicomStudyNoFilesResponse;
class DicomStudyNoFilesResponseDefaultTypeInternal;
extern DicomStudyNoFilesResponseDefaultTypeInternal _DicomStudyNoFilesResponse_default_instance_;
class DicomStudyNumberOfImagesResponse;
class DicomStudyNumberOfImagesResponseDefaultTypeInternal;
extern DicomStudyNumberOfImagesResponseDefaultTypeInternal _DicomStudyNumberOfImagesResponse_default_instance_;
class DicomStudyPathsResponse;
class DicomStudyPathsResponseDefaultTypeInternal;
extern DicomStudyPathsResponseDefaultTypeInternal _DicomStudyPathsResponse_default_instance_;
class DicomStudyPatientIDResponse;
class DicomStudyPatientIDResponseDefaultTypeInternal;
extern DicomStudyPatientIDResponseDefaultTypeInternal _DicomStudyPatientIDResponse_default_instance_;
class DicomStudyPatientSexResponse;
class DicomStudyPatientSexResponseDefaultTypeInternal;
extern DicomStudyPatientSexResponseDefaultTypeInternal _DicomStudyPatientSexResponse_default_instance_;
class DicomStudyPatientUIDResponse;
class DicomStudyPatientUIDResponseDefaultTypeInternal;
extern DicomStudyPatientUIDResponseDefaultTypeInternal _DicomStudyPatientUIDResponse_default_instance_;
class DicomStudyPerformingPhysicianResponse;
class DicomStudyPerformingPhysicianResponseDefaultTypeInternal;
extern DicomStudyPerformingPhysicianResponseDefaultTypeInternal _DicomStudyPerformingPhysicianResponse_default_instance_;
class DicomStudyRawNoFilesResponse;
class DicomStudyRawNoFilesResponseDefaultTypeInternal;
extern DicomStudyRawNoFilesResponseDefaultTypeInternal _DicomStudyRawNoFilesResponse_default_instance_;
class DicomStudyReferringPhysicianResponse;
class DicomStudyReferringPhysicianResponseDefaultTypeInternal;
extern DicomStudyReferringPhysicianResponseDefaultTypeInternal _DicomStudyReferringPhysicianResponse_default_instance_;
class DicomStudySeriesResponse;
class DicomStudySeriesResponseDefaultTypeInternal;
extern DicomStudySeriesResponseDefaultTypeInternal _DicomStudySeriesResponse_default_instance_;
class DicomStudyStudyInstanceUIDResponse;
class DicomStudyStudyInstanceUIDResponseDefaultTypeInternal;
extern DicomStudyStudyInstanceUIDResponseDefaultTypeInternal _DicomStudyStudyInstanceUIDResponse_default_instance_;
class DicomStudyStudyNameResponse;
class DicomStudyStudyNameResponseDefaultTypeInternal;
extern DicomStudyStudyNameResponseDefaultTypeInternal _DicomStudyStudyNameResponse_default_instance_;
}  // namespace osirixgrpc
PROTOBUF_NAMESPACE_OPEN
template<> ::osirixgrpc::DicomStudyDateAddedResponse* Arena::CreateMaybeMessage<::osirixgrpc::DicomStudyDateAddedResponse>(Arena*);
template<> ::osirixgrpc::DicomStudyDateOfBirthResponse* Arena::CreateMaybeMessage<::osirixgrpc::DicomStudyDateOfBirthResponse>(Arena*);
template<> ::osirixgrpc::DicomStudyDateResponse* Arena::CreateMaybeMessage<::osirixgrpc::DicomStudyDateResponse>(Arena*);
template<> ::osirixgrpc::DicomStudyImagesResponse* Arena::CreateMaybeMessage<::osirixgrpc::DicomStudyImagesResponse>(Arena*);
template<> ::osirixgrpc::DicomStudyInstitutionNameResponse* Arena::CreateMaybeMessage<::osirixgrpc::DicomStudyInstitutionNameResponse>(Arena*);
template<> ::osirixgrpc::DicomStudyModalitiesResponse* Arena::CreateMaybeMessage<::osirixgrpc::DicomStudyModalitiesResponse>(Arena*);
template<> ::osirixgrpc::DicomStudyModalityResponse* Arena::CreateMaybeMessage<::osirixgrpc::DicomStudyModalityResponse>(Arena*);
template<> ::osirixgrpc::DicomStudyNameResponse* Arena::CreateMaybeMessage<::osirixgrpc::DicomStudyNameResponse>(Arena*);
template<> ::osirixgrpc::DicomStudyNoFilesExcludingMultiFramesResponse* Arena::CreateMaybeMessage<::osirixgrpc::DicomStudyNoFilesExcludingMultiFramesResponse>(Arena*);
template<> ::osirixgrpc::DicomStudyNoFilesResponse* Arena::CreateMaybeMessage<::osirixgrpc::DicomStudyNoFilesResponse>(Arena*);
template<> ::osirixgrpc::DicomStudyNumberOfImagesResponse* Arena::CreateMaybeMessage<::osirixgrpc::DicomStudyNumberOfImagesResponse>(Arena*);
template<> ::osirixgrpc::DicomStudyPathsResponse* Arena::CreateMaybeMessage<::osirixgrpc::DicomStudyPathsResponse>(Arena*);
template<> ::osirixgrpc::DicomStudyPatientIDResponse* Arena::CreateMaybeMessage<::osirixgrpc::DicomStudyPatientIDResponse>(Arena*);
template<> ::osirixgrpc::DicomStudyPatientSexResponse* Arena::CreateMaybeMessage<::osirixgrpc::DicomStudyPatientSexResponse>(Arena*);
template<> ::osirixgrpc::DicomStudyPatientUIDResponse* Arena::CreateMaybeMessage<::osirixgrpc::DicomStudyPatientUIDResponse>(Arena*);
template<> ::osirixgrpc::DicomStudyPerformingPhysicianResponse* Arena::CreateMaybeMessage<::osirixgrpc::DicomStudyPerformingPhysicianResponse>(Arena*);
template<> ::osirixgrpc::DicomStudyRawNoFilesResponse* Arena::CreateMaybeMessage<::osirixgrpc::DicomStudyRawNoFilesResponse>(Arena*);
template<> ::osirixgrpc::DicomStudyReferringPhysicianResponse* Arena::CreateMaybeMessage<::osirixgrpc::DicomStudyReferringPhysicianResponse>(Arena*);
template<> ::osirixgrpc::DicomStudySeriesResponse* Arena::CreateMaybeMessage<::osirixgrpc::DicomStudySeriesResponse>(Arena*);
template<> ::osirixgrpc::DicomStudyStudyInstanceUIDResponse* Arena::CreateMaybeMessage<::osirixgrpc::DicomStudyStudyInstanceUIDResponse>(Arena*);
template<> ::osirixgrpc::DicomStudyStudyNameResponse* Arena::CreateMaybeMessage<::osirixgrpc::DicomStudyStudyNameResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace osirixgrpc {

// ===================================================================

class DicomStudyPathsResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DicomStudyPathsResponse) */ {
 public:
  inline DicomStudyPathsResponse() : DicomStudyPathsResponse(nullptr) {}
  virtual ~DicomStudyPathsResponse();

  DicomStudyPathsResponse(const DicomStudyPathsResponse& from);
  DicomStudyPathsResponse(DicomStudyPathsResponse&& from) noexcept
    : DicomStudyPathsResponse() {
    *this = ::std::move(from);
  }

  inline DicomStudyPathsResponse& operator=(const DicomStudyPathsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DicomStudyPathsResponse& operator=(DicomStudyPathsResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DicomStudyPathsResponse& default_instance();

  static inline const DicomStudyPathsResponse* internal_default_instance() {
    return reinterpret_cast<const DicomStudyPathsResponse*>(
               &_DicomStudyPathsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(DicomStudyPathsResponse& a, DicomStudyPathsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DicomStudyPathsResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DicomStudyPathsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DicomStudyPathsResponse* New() const final {
    return CreateMaybeMessage<DicomStudyPathsResponse>(nullptr);
  }

  DicomStudyPathsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DicomStudyPathsResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DicomStudyPathsResponse& from);
  void MergeFrom(const DicomStudyPathsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DicomStudyPathsResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "osirixgrpc.DicomStudyPathsResponse";
  }
  protected:
  explicit DicomStudyPathsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dicomstudy_2eproto);
    return ::descriptor_table_dicomstudy_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPathsFieldNumber = 2,
    kStatusFieldNumber = 1,
  };
  // repeated string paths = 2;
  int paths_size() const;
  private:
  int _internal_paths_size() const;
  public:
  void clear_paths();
  const std::string& paths(int index) const;
  std::string* mutable_paths(int index);
  void set_paths(int index, const std::string& value);
  void set_paths(int index, std::string&& value);
  void set_paths(int index, const char* value);
  void set_paths(int index, const char* value, size_t size);
  std::string* add_paths();
  void add_paths(const std::string& value);
  void add_paths(std::string&& value);
  void add_paths(const char* value);
  void add_paths(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& paths() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_paths();
  private:
  const std::string& _internal_paths(int index) const;
  std::string* _internal_add_paths();
  public:

  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  const ::osirixgrpc::Status& status() const;
  ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  // @@protoc_insertion_point(class_scope:osirixgrpc.DicomStudyPathsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> paths_;
  ::osirixgrpc::Status* status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dicomstudy_2eproto;
};
// -------------------------------------------------------------------

class DicomStudyImagesResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DicomStudyImagesResponse) */ {
 public:
  inline DicomStudyImagesResponse() : DicomStudyImagesResponse(nullptr) {}
  virtual ~DicomStudyImagesResponse();

  DicomStudyImagesResponse(const DicomStudyImagesResponse& from);
  DicomStudyImagesResponse(DicomStudyImagesResponse&& from) noexcept
    : DicomStudyImagesResponse() {
    *this = ::std::move(from);
  }

  inline DicomStudyImagesResponse& operator=(const DicomStudyImagesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DicomStudyImagesResponse& operator=(DicomStudyImagesResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DicomStudyImagesResponse& default_instance();

  static inline const DicomStudyImagesResponse* internal_default_instance() {
    return reinterpret_cast<const DicomStudyImagesResponse*>(
               &_DicomStudyImagesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(DicomStudyImagesResponse& a, DicomStudyImagesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DicomStudyImagesResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DicomStudyImagesResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DicomStudyImagesResponse* New() const final {
    return CreateMaybeMessage<DicomStudyImagesResponse>(nullptr);
  }

  DicomStudyImagesResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DicomStudyImagesResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DicomStudyImagesResponse& from);
  void MergeFrom(const DicomStudyImagesResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DicomStudyImagesResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "osirixgrpc.DicomStudyImagesResponse";
  }
  protected:
  explicit DicomStudyImagesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dicomstudy_2eproto);
    return ::descriptor_table_dicomstudy_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kImagesFieldNumber = 2,
    kStatusFieldNumber = 1,
  };
  // repeated .osirixgrpc.DicomImage images = 2;
  int images_size() const;
  private:
  int _internal_images_size() const;
  public:
  void clear_images();
  ::osirixgrpc::DicomImage* mutable_images(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::osirixgrpc::DicomImage >*
      mutable_images();
  private:
  const ::osirixgrpc::DicomImage& _internal_images(int index) const;
  ::osirixgrpc::DicomImage* _internal_add_images();
  public:
  const ::osirixgrpc::DicomImage& images(int index) const;
  ::osirixgrpc::DicomImage* add_images();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::osirixgrpc::DicomImage >&
      images() const;

  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  const ::osirixgrpc::Status& status() const;
  ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  // @@protoc_insertion_point(class_scope:osirixgrpc.DicomStudyImagesResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::osirixgrpc::DicomImage > images_;
  ::osirixgrpc::Status* status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dicomstudy_2eproto;
};
// -------------------------------------------------------------------

class DicomStudyModalitiesResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DicomStudyModalitiesResponse) */ {
 public:
  inline DicomStudyModalitiesResponse() : DicomStudyModalitiesResponse(nullptr) {}
  virtual ~DicomStudyModalitiesResponse();

  DicomStudyModalitiesResponse(const DicomStudyModalitiesResponse& from);
  DicomStudyModalitiesResponse(DicomStudyModalitiesResponse&& from) noexcept
    : DicomStudyModalitiesResponse() {
    *this = ::std::move(from);
  }

  inline DicomStudyModalitiesResponse& operator=(const DicomStudyModalitiesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DicomStudyModalitiesResponse& operator=(DicomStudyModalitiesResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DicomStudyModalitiesResponse& default_instance();

  static inline const DicomStudyModalitiesResponse* internal_default_instance() {
    return reinterpret_cast<const DicomStudyModalitiesResponse*>(
               &_DicomStudyModalitiesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(DicomStudyModalitiesResponse& a, DicomStudyModalitiesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DicomStudyModalitiesResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DicomStudyModalitiesResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DicomStudyModalitiesResponse* New() const final {
    return CreateMaybeMessage<DicomStudyModalitiesResponse>(nullptr);
  }

  DicomStudyModalitiesResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DicomStudyModalitiesResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DicomStudyModalitiesResponse& from);
  void MergeFrom(const DicomStudyModalitiesResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DicomStudyModalitiesResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "osirixgrpc.DicomStudyModalitiesResponse";
  }
  protected:
  explicit DicomStudyModalitiesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dicomstudy_2eproto);
    return ::descriptor_table_dicomstudy_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kModalitiesFieldNumber = 2,
    kStatusFieldNumber = 1,
  };
  // string modalities = 2;
  void clear_modalities();
  const std::string& modalities() const;
  void set_modalities(const std::string& value);
  void set_modalities(std::string&& value);
  void set_modalities(const char* value);
  void set_modalities(const char* value, size_t size);
  std::string* mutable_modalities();
  std::string* release_modalities();
  void set_allocated_modalities(std::string* modalities);
  private:
  const std::string& _internal_modalities() const;
  void _internal_set_modalities(const std::string& value);
  std::string* _internal_mutable_modalities();
  public:

  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  const ::osirixgrpc::Status& status() const;
  ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  // @@protoc_insertion_point(class_scope:osirixgrpc.DicomStudyModalitiesResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr modalities_;
  ::osirixgrpc::Status* status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dicomstudy_2eproto;
};
// -------------------------------------------------------------------

class DicomStudyNoFilesResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DicomStudyNoFilesResponse) */ {
 public:
  inline DicomStudyNoFilesResponse() : DicomStudyNoFilesResponse(nullptr) {}
  virtual ~DicomStudyNoFilesResponse();

  DicomStudyNoFilesResponse(const DicomStudyNoFilesResponse& from);
  DicomStudyNoFilesResponse(DicomStudyNoFilesResponse&& from) noexcept
    : DicomStudyNoFilesResponse() {
    *this = ::std::move(from);
  }

  inline DicomStudyNoFilesResponse& operator=(const DicomStudyNoFilesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DicomStudyNoFilesResponse& operator=(DicomStudyNoFilesResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DicomStudyNoFilesResponse& default_instance();

  static inline const DicomStudyNoFilesResponse* internal_default_instance() {
    return reinterpret_cast<const DicomStudyNoFilesResponse*>(
               &_DicomStudyNoFilesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(DicomStudyNoFilesResponse& a, DicomStudyNoFilesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DicomStudyNoFilesResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DicomStudyNoFilesResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DicomStudyNoFilesResponse* New() const final {
    return CreateMaybeMessage<DicomStudyNoFilesResponse>(nullptr);
  }

  DicomStudyNoFilesResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DicomStudyNoFilesResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DicomStudyNoFilesResponse& from);
  void MergeFrom(const DicomStudyNoFilesResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DicomStudyNoFilesResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "osirixgrpc.DicomStudyNoFilesResponse";
  }
  protected:
  explicit DicomStudyNoFilesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dicomstudy_2eproto);
    return ::descriptor_table_dicomstudy_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
    kNoFilesFieldNumber = 2,
  };
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  const ::osirixgrpc::Status& status() const;
  ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  // int32 no_files = 2;
  void clear_no_files();
  ::PROTOBUF_NAMESPACE_ID::int32 no_files() const;
  void set_no_files(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_no_files() const;
  void _internal_set_no_files(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:osirixgrpc.DicomStudyNoFilesResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::osirixgrpc::Status* status_;
  ::PROTOBUF_NAMESPACE_ID::int32 no_files_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dicomstudy_2eproto;
};
// -------------------------------------------------------------------

class DicomStudyRawNoFilesResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DicomStudyRawNoFilesResponse) */ {
 public:
  inline DicomStudyRawNoFilesResponse() : DicomStudyRawNoFilesResponse(nullptr) {}
  virtual ~DicomStudyRawNoFilesResponse();

  DicomStudyRawNoFilesResponse(const DicomStudyRawNoFilesResponse& from);
  DicomStudyRawNoFilesResponse(DicomStudyRawNoFilesResponse&& from) noexcept
    : DicomStudyRawNoFilesResponse() {
    *this = ::std::move(from);
  }

  inline DicomStudyRawNoFilesResponse& operator=(const DicomStudyRawNoFilesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DicomStudyRawNoFilesResponse& operator=(DicomStudyRawNoFilesResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DicomStudyRawNoFilesResponse& default_instance();

  static inline const DicomStudyRawNoFilesResponse* internal_default_instance() {
    return reinterpret_cast<const DicomStudyRawNoFilesResponse*>(
               &_DicomStudyRawNoFilesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(DicomStudyRawNoFilesResponse& a, DicomStudyRawNoFilesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DicomStudyRawNoFilesResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DicomStudyRawNoFilesResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DicomStudyRawNoFilesResponse* New() const final {
    return CreateMaybeMessage<DicomStudyRawNoFilesResponse>(nullptr);
  }

  DicomStudyRawNoFilesResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DicomStudyRawNoFilesResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DicomStudyRawNoFilesResponse& from);
  void MergeFrom(const DicomStudyRawNoFilesResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DicomStudyRawNoFilesResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "osirixgrpc.DicomStudyRawNoFilesResponse";
  }
  protected:
  explicit DicomStudyRawNoFilesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dicomstudy_2eproto);
    return ::descriptor_table_dicomstudy_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
    kNoFilesFieldNumber = 2,
  };
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  const ::osirixgrpc::Status& status() const;
  ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  // int32 no_files = 2;
  void clear_no_files();
  ::PROTOBUF_NAMESPACE_ID::int32 no_files() const;
  void set_no_files(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_no_files() const;
  void _internal_set_no_files(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:osirixgrpc.DicomStudyRawNoFilesResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::osirixgrpc::Status* status_;
  ::PROTOBUF_NAMESPACE_ID::int32 no_files_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dicomstudy_2eproto;
};
// -------------------------------------------------------------------

class DicomStudyNoFilesExcludingMultiFramesResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DicomStudyNoFilesExcludingMultiFramesResponse) */ {
 public:
  inline DicomStudyNoFilesExcludingMultiFramesResponse() : DicomStudyNoFilesExcludingMultiFramesResponse(nullptr) {}
  virtual ~DicomStudyNoFilesExcludingMultiFramesResponse();

  DicomStudyNoFilesExcludingMultiFramesResponse(const DicomStudyNoFilesExcludingMultiFramesResponse& from);
  DicomStudyNoFilesExcludingMultiFramesResponse(DicomStudyNoFilesExcludingMultiFramesResponse&& from) noexcept
    : DicomStudyNoFilesExcludingMultiFramesResponse() {
    *this = ::std::move(from);
  }

  inline DicomStudyNoFilesExcludingMultiFramesResponse& operator=(const DicomStudyNoFilesExcludingMultiFramesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DicomStudyNoFilesExcludingMultiFramesResponse& operator=(DicomStudyNoFilesExcludingMultiFramesResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DicomStudyNoFilesExcludingMultiFramesResponse& default_instance();

  static inline const DicomStudyNoFilesExcludingMultiFramesResponse* internal_default_instance() {
    return reinterpret_cast<const DicomStudyNoFilesExcludingMultiFramesResponse*>(
               &_DicomStudyNoFilesExcludingMultiFramesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(DicomStudyNoFilesExcludingMultiFramesResponse& a, DicomStudyNoFilesExcludingMultiFramesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DicomStudyNoFilesExcludingMultiFramesResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DicomStudyNoFilesExcludingMultiFramesResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DicomStudyNoFilesExcludingMultiFramesResponse* New() const final {
    return CreateMaybeMessage<DicomStudyNoFilesExcludingMultiFramesResponse>(nullptr);
  }

  DicomStudyNoFilesExcludingMultiFramesResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DicomStudyNoFilesExcludingMultiFramesResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DicomStudyNoFilesExcludingMultiFramesResponse& from);
  void MergeFrom(const DicomStudyNoFilesExcludingMultiFramesResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DicomStudyNoFilesExcludingMultiFramesResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "osirixgrpc.DicomStudyNoFilesExcludingMultiFramesResponse";
  }
  protected:
  explicit DicomStudyNoFilesExcludingMultiFramesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dicomstudy_2eproto);
    return ::descriptor_table_dicomstudy_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
    kNoFilesFieldNumber = 2,
  };
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  const ::osirixgrpc::Status& status() const;
  ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  // int32 no_files = 2;
  void clear_no_files();
  ::PROTOBUF_NAMESPACE_ID::int32 no_files() const;
  void set_no_files(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_no_files() const;
  void _internal_set_no_files(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:osirixgrpc.DicomStudyNoFilesExcludingMultiFramesResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::osirixgrpc::Status* status_;
  ::PROTOBUF_NAMESPACE_ID::int32 no_files_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dicomstudy_2eproto;
};
// -------------------------------------------------------------------

class DicomStudyNumberOfImagesResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DicomStudyNumberOfImagesResponse) */ {
 public:
  inline DicomStudyNumberOfImagesResponse() : DicomStudyNumberOfImagesResponse(nullptr) {}
  virtual ~DicomStudyNumberOfImagesResponse();

  DicomStudyNumberOfImagesResponse(const DicomStudyNumberOfImagesResponse& from);
  DicomStudyNumberOfImagesResponse(DicomStudyNumberOfImagesResponse&& from) noexcept
    : DicomStudyNumberOfImagesResponse() {
    *this = ::std::move(from);
  }

  inline DicomStudyNumberOfImagesResponse& operator=(const DicomStudyNumberOfImagesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DicomStudyNumberOfImagesResponse& operator=(DicomStudyNumberOfImagesResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DicomStudyNumberOfImagesResponse& default_instance();

  static inline const DicomStudyNumberOfImagesResponse* internal_default_instance() {
    return reinterpret_cast<const DicomStudyNumberOfImagesResponse*>(
               &_DicomStudyNumberOfImagesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(DicomStudyNumberOfImagesResponse& a, DicomStudyNumberOfImagesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DicomStudyNumberOfImagesResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DicomStudyNumberOfImagesResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DicomStudyNumberOfImagesResponse* New() const final {
    return CreateMaybeMessage<DicomStudyNumberOfImagesResponse>(nullptr);
  }

  DicomStudyNumberOfImagesResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DicomStudyNumberOfImagesResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DicomStudyNumberOfImagesResponse& from);
  void MergeFrom(const DicomStudyNumberOfImagesResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DicomStudyNumberOfImagesResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "osirixgrpc.DicomStudyNumberOfImagesResponse";
  }
  protected:
  explicit DicomStudyNumberOfImagesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dicomstudy_2eproto);
    return ::descriptor_table_dicomstudy_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
    kNoImagesFieldNumber = 2,
  };
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  const ::osirixgrpc::Status& status() const;
  ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  // int32 no_images = 2;
  void clear_no_images();
  ::PROTOBUF_NAMESPACE_ID::int32 no_images() const;
  void set_no_images(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_no_images() const;
  void _internal_set_no_images(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:osirixgrpc.DicomStudyNumberOfImagesResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::osirixgrpc::Status* status_;
  ::PROTOBUF_NAMESPACE_ID::int32 no_images_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dicomstudy_2eproto;
};
// -------------------------------------------------------------------

class DicomStudySeriesResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DicomStudySeriesResponse) */ {
 public:
  inline DicomStudySeriesResponse() : DicomStudySeriesResponse(nullptr) {}
  virtual ~DicomStudySeriesResponse();

  DicomStudySeriesResponse(const DicomStudySeriesResponse& from);
  DicomStudySeriesResponse(DicomStudySeriesResponse&& from) noexcept
    : DicomStudySeriesResponse() {
    *this = ::std::move(from);
  }

  inline DicomStudySeriesResponse& operator=(const DicomStudySeriesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DicomStudySeriesResponse& operator=(DicomStudySeriesResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DicomStudySeriesResponse& default_instance();

  static inline const DicomStudySeriesResponse* internal_default_instance() {
    return reinterpret_cast<const DicomStudySeriesResponse*>(
               &_DicomStudySeriesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(DicomStudySeriesResponse& a, DicomStudySeriesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DicomStudySeriesResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DicomStudySeriesResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DicomStudySeriesResponse* New() const final {
    return CreateMaybeMessage<DicomStudySeriesResponse>(nullptr);
  }

  DicomStudySeriesResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DicomStudySeriesResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DicomStudySeriesResponse& from);
  void MergeFrom(const DicomStudySeriesResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DicomStudySeriesResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "osirixgrpc.DicomStudySeriesResponse";
  }
  protected:
  explicit DicomStudySeriesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dicomstudy_2eproto);
    return ::descriptor_table_dicomstudy_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSeriesFieldNumber = 2,
    kStatusFieldNumber = 1,
  };
  // repeated .osirixgrpc.DicomSeries series = 2;
  int series_size() const;
  private:
  int _internal_series_size() const;
  public:
  void clear_series();
  ::osirixgrpc::DicomSeries* mutable_series(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::osirixgrpc::DicomSeries >*
      mutable_series();
  private:
  const ::osirixgrpc::DicomSeries& _internal_series(int index) const;
  ::osirixgrpc::DicomSeries* _internal_add_series();
  public:
  const ::osirixgrpc::DicomSeries& series(int index) const;
  ::osirixgrpc::DicomSeries* add_series();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::osirixgrpc::DicomSeries >&
      series() const;

  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  const ::osirixgrpc::Status& status() const;
  ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  // @@protoc_insertion_point(class_scope:osirixgrpc.DicomStudySeriesResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::osirixgrpc::DicomSeries > series_;
  ::osirixgrpc::Status* status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dicomstudy_2eproto;
};
// -------------------------------------------------------------------

class DicomStudyNameResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DicomStudyNameResponse) */ {
 public:
  inline DicomStudyNameResponse() : DicomStudyNameResponse(nullptr) {}
  virtual ~DicomStudyNameResponse();

  DicomStudyNameResponse(const DicomStudyNameResponse& from);
  DicomStudyNameResponse(DicomStudyNameResponse&& from) noexcept
    : DicomStudyNameResponse() {
    *this = ::std::move(from);
  }

  inline DicomStudyNameResponse& operator=(const DicomStudyNameResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DicomStudyNameResponse& operator=(DicomStudyNameResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DicomStudyNameResponse& default_instance();

  static inline const DicomStudyNameResponse* internal_default_instance() {
    return reinterpret_cast<const DicomStudyNameResponse*>(
               &_DicomStudyNameResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(DicomStudyNameResponse& a, DicomStudyNameResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DicomStudyNameResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DicomStudyNameResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DicomStudyNameResponse* New() const final {
    return CreateMaybeMessage<DicomStudyNameResponse>(nullptr);
  }

  DicomStudyNameResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DicomStudyNameResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DicomStudyNameResponse& from);
  void MergeFrom(const DicomStudyNameResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DicomStudyNameResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "osirixgrpc.DicomStudyNameResponse";
  }
  protected:
  explicit DicomStudyNameResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dicomstudy_2eproto);
    return ::descriptor_table_dicomstudy_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kStatusFieldNumber = 1,
  };
  // string name = 2;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  const ::osirixgrpc::Status& status() const;
  ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  // @@protoc_insertion_point(class_scope:osirixgrpc.DicomStudyNameResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::osirixgrpc::Status* status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dicomstudy_2eproto;
};
// -------------------------------------------------------------------

class DicomStudyDateResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DicomStudyDateResponse) */ {
 public:
  inline DicomStudyDateResponse() : DicomStudyDateResponse(nullptr) {}
  virtual ~DicomStudyDateResponse();

  DicomStudyDateResponse(const DicomStudyDateResponse& from);
  DicomStudyDateResponse(DicomStudyDateResponse&& from) noexcept
    : DicomStudyDateResponse() {
    *this = ::std::move(from);
  }

  inline DicomStudyDateResponse& operator=(const DicomStudyDateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DicomStudyDateResponse& operator=(DicomStudyDateResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DicomStudyDateResponse& default_instance();

  static inline const DicomStudyDateResponse* internal_default_instance() {
    return reinterpret_cast<const DicomStudyDateResponse*>(
               &_DicomStudyDateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(DicomStudyDateResponse& a, DicomStudyDateResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DicomStudyDateResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DicomStudyDateResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DicomStudyDateResponse* New() const final {
    return CreateMaybeMessage<DicomStudyDateResponse>(nullptr);
  }

  DicomStudyDateResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DicomStudyDateResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DicomStudyDateResponse& from);
  void MergeFrom(const DicomStudyDateResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DicomStudyDateResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "osirixgrpc.DicomStudyDateResponse";
  }
  protected:
  explicit DicomStudyDateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dicomstudy_2eproto);
    return ::descriptor_table_dicomstudy_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
    kYearFieldNumber = 2,
    kMonthFieldNumber = 3,
    kDayFieldNumber = 4,
    kHourFieldNumber = 5,
    kMinuteFieldNumber = 6,
    kSecondFieldNumber = 7,
    kMillisecondFieldNumber = 8,
  };
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  const ::osirixgrpc::Status& status() const;
  ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  // int32 year = 2;
  void clear_year();
  ::PROTOBUF_NAMESPACE_ID::int32 year() const;
  void set_year(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_year() const;
  void _internal_set_year(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 month = 3;
  void clear_month();
  ::PROTOBUF_NAMESPACE_ID::int32 month() const;
  void set_month(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_month() const;
  void _internal_set_month(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 day = 4;
  void clear_day();
  ::PROTOBUF_NAMESPACE_ID::int32 day() const;
  void set_day(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_day() const;
  void _internal_set_day(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 hour = 5;
  void clear_hour();
  ::PROTOBUF_NAMESPACE_ID::int32 hour() const;
  void set_hour(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_hour() const;
  void _internal_set_hour(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 minute = 6;
  void clear_minute();
  ::PROTOBUF_NAMESPACE_ID::int32 minute() const;
  void set_minute(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_minute() const;
  void _internal_set_minute(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 second = 7;
  void clear_second();
  ::PROTOBUF_NAMESPACE_ID::int32 second() const;
  void set_second(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_second() const;
  void _internal_set_second(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 millisecond = 8;
  void clear_millisecond();
  ::PROTOBUF_NAMESPACE_ID::int32 millisecond() const;
  void set_millisecond(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_millisecond() const;
  void _internal_set_millisecond(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:osirixgrpc.DicomStudyDateResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::osirixgrpc::Status* status_;
  ::PROTOBUF_NAMESPACE_ID::int32 year_;
  ::PROTOBUF_NAMESPACE_ID::int32 month_;
  ::PROTOBUF_NAMESPACE_ID::int32 day_;
  ::PROTOBUF_NAMESPACE_ID::int32 hour_;
  ::PROTOBUF_NAMESPACE_ID::int32 minute_;
  ::PROTOBUF_NAMESPACE_ID::int32 second_;
  ::PROTOBUF_NAMESPACE_ID::int32 millisecond_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dicomstudy_2eproto;
};
// -------------------------------------------------------------------

class DicomStudyDateAddedResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DicomStudyDateAddedResponse) */ {
 public:
  inline DicomStudyDateAddedResponse() : DicomStudyDateAddedResponse(nullptr) {}
  virtual ~DicomStudyDateAddedResponse();

  DicomStudyDateAddedResponse(const DicomStudyDateAddedResponse& from);
  DicomStudyDateAddedResponse(DicomStudyDateAddedResponse&& from) noexcept
    : DicomStudyDateAddedResponse() {
    *this = ::std::move(from);
  }

  inline DicomStudyDateAddedResponse& operator=(const DicomStudyDateAddedResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DicomStudyDateAddedResponse& operator=(DicomStudyDateAddedResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DicomStudyDateAddedResponse& default_instance();

  static inline const DicomStudyDateAddedResponse* internal_default_instance() {
    return reinterpret_cast<const DicomStudyDateAddedResponse*>(
               &_DicomStudyDateAddedResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(DicomStudyDateAddedResponse& a, DicomStudyDateAddedResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DicomStudyDateAddedResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DicomStudyDateAddedResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DicomStudyDateAddedResponse* New() const final {
    return CreateMaybeMessage<DicomStudyDateAddedResponse>(nullptr);
  }

  DicomStudyDateAddedResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DicomStudyDateAddedResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DicomStudyDateAddedResponse& from);
  void MergeFrom(const DicomStudyDateAddedResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DicomStudyDateAddedResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "osirixgrpc.DicomStudyDateAddedResponse";
  }
  protected:
  explicit DicomStudyDateAddedResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dicomstudy_2eproto);
    return ::descriptor_table_dicomstudy_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
    kYearFieldNumber = 2,
    kMonthFieldNumber = 3,
    kDayFieldNumber = 4,
    kHourFieldNumber = 5,
    kMinuteFieldNumber = 6,
    kSecondFieldNumber = 7,
    kMillisecondFieldNumber = 8,
  };
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  const ::osirixgrpc::Status& status() const;
  ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  // int32 year = 2;
  void clear_year();
  ::PROTOBUF_NAMESPACE_ID::int32 year() const;
  void set_year(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_year() const;
  void _internal_set_year(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 month = 3;
  void clear_month();
  ::PROTOBUF_NAMESPACE_ID::int32 month() const;
  void set_month(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_month() const;
  void _internal_set_month(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 day = 4;
  void clear_day();
  ::PROTOBUF_NAMESPACE_ID::int32 day() const;
  void set_day(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_day() const;
  void _internal_set_day(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 hour = 5;
  void clear_hour();
  ::PROTOBUF_NAMESPACE_ID::int32 hour() const;
  void set_hour(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_hour() const;
  void _internal_set_hour(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 minute = 6;
  void clear_minute();
  ::PROTOBUF_NAMESPACE_ID::int32 minute() const;
  void set_minute(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_minute() const;
  void _internal_set_minute(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 second = 7;
  void clear_second();
  ::PROTOBUF_NAMESPACE_ID::int32 second() const;
  void set_second(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_second() const;
  void _internal_set_second(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 millisecond = 8;
  void clear_millisecond();
  ::PROTOBUF_NAMESPACE_ID::int32 millisecond() const;
  void set_millisecond(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_millisecond() const;
  void _internal_set_millisecond(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:osirixgrpc.DicomStudyDateAddedResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::osirixgrpc::Status* status_;
  ::PROTOBUF_NAMESPACE_ID::int32 year_;
  ::PROTOBUF_NAMESPACE_ID::int32 month_;
  ::PROTOBUF_NAMESPACE_ID::int32 day_;
  ::PROTOBUF_NAMESPACE_ID::int32 hour_;
  ::PROTOBUF_NAMESPACE_ID::int32 minute_;
  ::PROTOBUF_NAMESPACE_ID::int32 second_;
  ::PROTOBUF_NAMESPACE_ID::int32 millisecond_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dicomstudy_2eproto;
};
// -------------------------------------------------------------------

class DicomStudyDateOfBirthResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DicomStudyDateOfBirthResponse) */ {
 public:
  inline DicomStudyDateOfBirthResponse() : DicomStudyDateOfBirthResponse(nullptr) {}
  virtual ~DicomStudyDateOfBirthResponse();

  DicomStudyDateOfBirthResponse(const DicomStudyDateOfBirthResponse& from);
  DicomStudyDateOfBirthResponse(DicomStudyDateOfBirthResponse&& from) noexcept
    : DicomStudyDateOfBirthResponse() {
    *this = ::std::move(from);
  }

  inline DicomStudyDateOfBirthResponse& operator=(const DicomStudyDateOfBirthResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DicomStudyDateOfBirthResponse& operator=(DicomStudyDateOfBirthResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DicomStudyDateOfBirthResponse& default_instance();

  static inline const DicomStudyDateOfBirthResponse* internal_default_instance() {
    return reinterpret_cast<const DicomStudyDateOfBirthResponse*>(
               &_DicomStudyDateOfBirthResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(DicomStudyDateOfBirthResponse& a, DicomStudyDateOfBirthResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DicomStudyDateOfBirthResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DicomStudyDateOfBirthResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DicomStudyDateOfBirthResponse* New() const final {
    return CreateMaybeMessage<DicomStudyDateOfBirthResponse>(nullptr);
  }

  DicomStudyDateOfBirthResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DicomStudyDateOfBirthResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DicomStudyDateOfBirthResponse& from);
  void MergeFrom(const DicomStudyDateOfBirthResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DicomStudyDateOfBirthResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "osirixgrpc.DicomStudyDateOfBirthResponse";
  }
  protected:
  explicit DicomStudyDateOfBirthResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dicomstudy_2eproto);
    return ::descriptor_table_dicomstudy_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
    kYearFieldNumber = 2,
    kMonthFieldNumber = 3,
    kDayFieldNumber = 4,
  };
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  const ::osirixgrpc::Status& status() const;
  ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  // int32 year = 2;
  void clear_year();
  ::PROTOBUF_NAMESPACE_ID::int32 year() const;
  void set_year(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_year() const;
  void _internal_set_year(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 month = 3;
  void clear_month();
  ::PROTOBUF_NAMESPACE_ID::int32 month() const;
  void set_month(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_month() const;
  void _internal_set_month(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 day = 4;
  void clear_day();
  ::PROTOBUF_NAMESPACE_ID::int32 day() const;
  void set_day(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_day() const;
  void _internal_set_day(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:osirixgrpc.DicomStudyDateOfBirthResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::osirixgrpc::Status* status_;
  ::PROTOBUF_NAMESPACE_ID::int32 year_;
  ::PROTOBUF_NAMESPACE_ID::int32 month_;
  ::PROTOBUF_NAMESPACE_ID::int32 day_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dicomstudy_2eproto;
};
// -------------------------------------------------------------------

class DicomStudyInstitutionNameResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DicomStudyInstitutionNameResponse) */ {
 public:
  inline DicomStudyInstitutionNameResponse() : DicomStudyInstitutionNameResponse(nullptr) {}
  virtual ~DicomStudyInstitutionNameResponse();

  DicomStudyInstitutionNameResponse(const DicomStudyInstitutionNameResponse& from);
  DicomStudyInstitutionNameResponse(DicomStudyInstitutionNameResponse&& from) noexcept
    : DicomStudyInstitutionNameResponse() {
    *this = ::std::move(from);
  }

  inline DicomStudyInstitutionNameResponse& operator=(const DicomStudyInstitutionNameResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DicomStudyInstitutionNameResponse& operator=(DicomStudyInstitutionNameResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DicomStudyInstitutionNameResponse& default_instance();

  static inline const DicomStudyInstitutionNameResponse* internal_default_instance() {
    return reinterpret_cast<const DicomStudyInstitutionNameResponse*>(
               &_DicomStudyInstitutionNameResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(DicomStudyInstitutionNameResponse& a, DicomStudyInstitutionNameResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DicomStudyInstitutionNameResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DicomStudyInstitutionNameResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DicomStudyInstitutionNameResponse* New() const final {
    return CreateMaybeMessage<DicomStudyInstitutionNameResponse>(nullptr);
  }

  DicomStudyInstitutionNameResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DicomStudyInstitutionNameResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DicomStudyInstitutionNameResponse& from);
  void MergeFrom(const DicomStudyInstitutionNameResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DicomStudyInstitutionNameResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "osirixgrpc.DicomStudyInstitutionNameResponse";
  }
  protected:
  explicit DicomStudyInstitutionNameResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dicomstudy_2eproto);
    return ::descriptor_table_dicomstudy_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInstitutionNameFieldNumber = 2,
    kStatusFieldNumber = 1,
  };
  // string institution_name = 2;
  void clear_institution_name();
  const std::string& institution_name() const;
  void set_institution_name(const std::string& value);
  void set_institution_name(std::string&& value);
  void set_institution_name(const char* value);
  void set_institution_name(const char* value, size_t size);
  std::string* mutable_institution_name();
  std::string* release_institution_name();
  void set_allocated_institution_name(std::string* institution_name);
  private:
  const std::string& _internal_institution_name() const;
  void _internal_set_institution_name(const std::string& value);
  std::string* _internal_mutable_institution_name();
  public:

  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  const ::osirixgrpc::Status& status() const;
  ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  // @@protoc_insertion_point(class_scope:osirixgrpc.DicomStudyInstitutionNameResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr institution_name_;
  ::osirixgrpc::Status* status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dicomstudy_2eproto;
};
// -------------------------------------------------------------------

class DicomStudyModalityResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DicomStudyModalityResponse) */ {
 public:
  inline DicomStudyModalityResponse() : DicomStudyModalityResponse(nullptr) {}
  virtual ~DicomStudyModalityResponse();

  DicomStudyModalityResponse(const DicomStudyModalityResponse& from);
  DicomStudyModalityResponse(DicomStudyModalityResponse&& from) noexcept
    : DicomStudyModalityResponse() {
    *this = ::std::move(from);
  }

  inline DicomStudyModalityResponse& operator=(const DicomStudyModalityResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DicomStudyModalityResponse& operator=(DicomStudyModalityResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DicomStudyModalityResponse& default_instance();

  static inline const DicomStudyModalityResponse* internal_default_instance() {
    return reinterpret_cast<const DicomStudyModalityResponse*>(
               &_DicomStudyModalityResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(DicomStudyModalityResponse& a, DicomStudyModalityResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DicomStudyModalityResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DicomStudyModalityResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DicomStudyModalityResponse* New() const final {
    return CreateMaybeMessage<DicomStudyModalityResponse>(nullptr);
  }

  DicomStudyModalityResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DicomStudyModalityResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DicomStudyModalityResponse& from);
  void MergeFrom(const DicomStudyModalityResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DicomStudyModalityResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "osirixgrpc.DicomStudyModalityResponse";
  }
  protected:
  explicit DicomStudyModalityResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dicomstudy_2eproto);
    return ::descriptor_table_dicomstudy_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kModalityFieldNumber = 2,
    kStatusFieldNumber = 1,
  };
  // string modality = 2;
  void clear_modality();
  const std::string& modality() const;
  void set_modality(const std::string& value);
  void set_modality(std::string&& value);
  void set_modality(const char* value);
  void set_modality(const char* value, size_t size);
  std::string* mutable_modality();
  std::string* release_modality();
  void set_allocated_modality(std::string* modality);
  private:
  const std::string& _internal_modality() const;
  void _internal_set_modality(const std::string& value);
  std::string* _internal_mutable_modality();
  public:

  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  const ::osirixgrpc::Status& status() const;
  ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  // @@protoc_insertion_point(class_scope:osirixgrpc.DicomStudyModalityResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr modality_;
  ::osirixgrpc::Status* status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dicomstudy_2eproto;
};
// -------------------------------------------------------------------

class DicomStudyPatientIDResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DicomStudyPatientIDResponse) */ {
 public:
  inline DicomStudyPatientIDResponse() : DicomStudyPatientIDResponse(nullptr) {}
  virtual ~DicomStudyPatientIDResponse();

  DicomStudyPatientIDResponse(const DicomStudyPatientIDResponse& from);
  DicomStudyPatientIDResponse(DicomStudyPatientIDResponse&& from) noexcept
    : DicomStudyPatientIDResponse() {
    *this = ::std::move(from);
  }

  inline DicomStudyPatientIDResponse& operator=(const DicomStudyPatientIDResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DicomStudyPatientIDResponse& operator=(DicomStudyPatientIDResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DicomStudyPatientIDResponse& default_instance();

  static inline const DicomStudyPatientIDResponse* internal_default_instance() {
    return reinterpret_cast<const DicomStudyPatientIDResponse*>(
               &_DicomStudyPatientIDResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(DicomStudyPatientIDResponse& a, DicomStudyPatientIDResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DicomStudyPatientIDResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DicomStudyPatientIDResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DicomStudyPatientIDResponse* New() const final {
    return CreateMaybeMessage<DicomStudyPatientIDResponse>(nullptr);
  }

  DicomStudyPatientIDResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DicomStudyPatientIDResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DicomStudyPatientIDResponse& from);
  void MergeFrom(const DicomStudyPatientIDResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DicomStudyPatientIDResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "osirixgrpc.DicomStudyPatientIDResponse";
  }
  protected:
  explicit DicomStudyPatientIDResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dicomstudy_2eproto);
    return ::descriptor_table_dicomstudy_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPatientIdFieldNumber = 2,
    kStatusFieldNumber = 1,
  };
  // string patient_id = 2;
  void clear_patient_id();
  const std::string& patient_id() const;
  void set_patient_id(const std::string& value);
  void set_patient_id(std::string&& value);
  void set_patient_id(const char* value);
  void set_patient_id(const char* value, size_t size);
  std::string* mutable_patient_id();
  std::string* release_patient_id();
  void set_allocated_patient_id(std::string* patient_id);
  private:
  const std::string& _internal_patient_id() const;
  void _internal_set_patient_id(const std::string& value);
  std::string* _internal_mutable_patient_id();
  public:

  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  const ::osirixgrpc::Status& status() const;
  ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  // @@protoc_insertion_point(class_scope:osirixgrpc.DicomStudyPatientIDResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr patient_id_;
  ::osirixgrpc::Status* status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dicomstudy_2eproto;
};
// -------------------------------------------------------------------

class DicomStudyPatientUIDResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DicomStudyPatientUIDResponse) */ {
 public:
  inline DicomStudyPatientUIDResponse() : DicomStudyPatientUIDResponse(nullptr) {}
  virtual ~DicomStudyPatientUIDResponse();

  DicomStudyPatientUIDResponse(const DicomStudyPatientUIDResponse& from);
  DicomStudyPatientUIDResponse(DicomStudyPatientUIDResponse&& from) noexcept
    : DicomStudyPatientUIDResponse() {
    *this = ::std::move(from);
  }

  inline DicomStudyPatientUIDResponse& operator=(const DicomStudyPatientUIDResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DicomStudyPatientUIDResponse& operator=(DicomStudyPatientUIDResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DicomStudyPatientUIDResponse& default_instance();

  static inline const DicomStudyPatientUIDResponse* internal_default_instance() {
    return reinterpret_cast<const DicomStudyPatientUIDResponse*>(
               &_DicomStudyPatientUIDResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(DicomStudyPatientUIDResponse& a, DicomStudyPatientUIDResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DicomStudyPatientUIDResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DicomStudyPatientUIDResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DicomStudyPatientUIDResponse* New() const final {
    return CreateMaybeMessage<DicomStudyPatientUIDResponse>(nullptr);
  }

  DicomStudyPatientUIDResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DicomStudyPatientUIDResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DicomStudyPatientUIDResponse& from);
  void MergeFrom(const DicomStudyPatientUIDResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DicomStudyPatientUIDResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "osirixgrpc.DicomStudyPatientUIDResponse";
  }
  protected:
  explicit DicomStudyPatientUIDResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dicomstudy_2eproto);
    return ::descriptor_table_dicomstudy_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPatientUidFieldNumber = 2,
    kStatusFieldNumber = 1,
  };
  // string patient_uid = 2;
  void clear_patient_uid();
  const std::string& patient_uid() const;
  void set_patient_uid(const std::string& value);
  void set_patient_uid(std::string&& value);
  void set_patient_uid(const char* value);
  void set_patient_uid(const char* value, size_t size);
  std::string* mutable_patient_uid();
  std::string* release_patient_uid();
  void set_allocated_patient_uid(std::string* patient_uid);
  private:
  const std::string& _internal_patient_uid() const;
  void _internal_set_patient_uid(const std::string& value);
  std::string* _internal_mutable_patient_uid();
  public:

  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  const ::osirixgrpc::Status& status() const;
  ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  // @@protoc_insertion_point(class_scope:osirixgrpc.DicomStudyPatientUIDResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr patient_uid_;
  ::osirixgrpc::Status* status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dicomstudy_2eproto;
};
// -------------------------------------------------------------------

class DicomStudyPatientSexResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DicomStudyPatientSexResponse) */ {
 public:
  inline DicomStudyPatientSexResponse() : DicomStudyPatientSexResponse(nullptr) {}
  virtual ~DicomStudyPatientSexResponse();

  DicomStudyPatientSexResponse(const DicomStudyPatientSexResponse& from);
  DicomStudyPatientSexResponse(DicomStudyPatientSexResponse&& from) noexcept
    : DicomStudyPatientSexResponse() {
    *this = ::std::move(from);
  }

  inline DicomStudyPatientSexResponse& operator=(const DicomStudyPatientSexResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DicomStudyPatientSexResponse& operator=(DicomStudyPatientSexResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DicomStudyPatientSexResponse& default_instance();

  static inline const DicomStudyPatientSexResponse* internal_default_instance() {
    return reinterpret_cast<const DicomStudyPatientSexResponse*>(
               &_DicomStudyPatientSexResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(DicomStudyPatientSexResponse& a, DicomStudyPatientSexResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DicomStudyPatientSexResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DicomStudyPatientSexResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DicomStudyPatientSexResponse* New() const final {
    return CreateMaybeMessage<DicomStudyPatientSexResponse>(nullptr);
  }

  DicomStudyPatientSexResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DicomStudyPatientSexResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DicomStudyPatientSexResponse& from);
  void MergeFrom(const DicomStudyPatientSexResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DicomStudyPatientSexResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "osirixgrpc.DicomStudyPatientSexResponse";
  }
  protected:
  explicit DicomStudyPatientSexResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dicomstudy_2eproto);
    return ::descriptor_table_dicomstudy_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPatientSexFieldNumber = 2,
    kStatusFieldNumber = 1,
  };
  // string patient_sex = 2;
  void clear_patient_sex();
  const std::string& patient_sex() const;
  void set_patient_sex(const std::string& value);
  void set_patient_sex(std::string&& value);
  void set_patient_sex(const char* value);
  void set_patient_sex(const char* value, size_t size);
  std::string* mutable_patient_sex();
  std::string* release_patient_sex();
  void set_allocated_patient_sex(std::string* patient_sex);
  private:
  const std::string& _internal_patient_sex() const;
  void _internal_set_patient_sex(const std::string& value);
  std::string* _internal_mutable_patient_sex();
  public:

  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  const ::osirixgrpc::Status& status() const;
  ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  // @@protoc_insertion_point(class_scope:osirixgrpc.DicomStudyPatientSexResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr patient_sex_;
  ::osirixgrpc::Status* status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dicomstudy_2eproto;
};
// -------------------------------------------------------------------

class DicomStudyPerformingPhysicianResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DicomStudyPerformingPhysicianResponse) */ {
 public:
  inline DicomStudyPerformingPhysicianResponse() : DicomStudyPerformingPhysicianResponse(nullptr) {}
  virtual ~DicomStudyPerformingPhysicianResponse();

  DicomStudyPerformingPhysicianResponse(const DicomStudyPerformingPhysicianResponse& from);
  DicomStudyPerformingPhysicianResponse(DicomStudyPerformingPhysicianResponse&& from) noexcept
    : DicomStudyPerformingPhysicianResponse() {
    *this = ::std::move(from);
  }

  inline DicomStudyPerformingPhysicianResponse& operator=(const DicomStudyPerformingPhysicianResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DicomStudyPerformingPhysicianResponse& operator=(DicomStudyPerformingPhysicianResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DicomStudyPerformingPhysicianResponse& default_instance();

  static inline const DicomStudyPerformingPhysicianResponse* internal_default_instance() {
    return reinterpret_cast<const DicomStudyPerformingPhysicianResponse*>(
               &_DicomStudyPerformingPhysicianResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(DicomStudyPerformingPhysicianResponse& a, DicomStudyPerformingPhysicianResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DicomStudyPerformingPhysicianResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DicomStudyPerformingPhysicianResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DicomStudyPerformingPhysicianResponse* New() const final {
    return CreateMaybeMessage<DicomStudyPerformingPhysicianResponse>(nullptr);
  }

  DicomStudyPerformingPhysicianResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DicomStudyPerformingPhysicianResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DicomStudyPerformingPhysicianResponse& from);
  void MergeFrom(const DicomStudyPerformingPhysicianResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DicomStudyPerformingPhysicianResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "osirixgrpc.DicomStudyPerformingPhysicianResponse";
  }
  protected:
  explicit DicomStudyPerformingPhysicianResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dicomstudy_2eproto);
    return ::descriptor_table_dicomstudy_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPerformingPhysicianFieldNumber = 2,
    kStatusFieldNumber = 1,
  };
  // string performing_physician = 2;
  void clear_performing_physician();
  const std::string& performing_physician() const;
  void set_performing_physician(const std::string& value);
  void set_performing_physician(std::string&& value);
  void set_performing_physician(const char* value);
  void set_performing_physician(const char* value, size_t size);
  std::string* mutable_performing_physician();
  std::string* release_performing_physician();
  void set_allocated_performing_physician(std::string* performing_physician);
  private:
  const std::string& _internal_performing_physician() const;
  void _internal_set_performing_physician(const std::string& value);
  std::string* _internal_mutable_performing_physician();
  public:

  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  const ::osirixgrpc::Status& status() const;
  ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  // @@protoc_insertion_point(class_scope:osirixgrpc.DicomStudyPerformingPhysicianResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr performing_physician_;
  ::osirixgrpc::Status* status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dicomstudy_2eproto;
};
// -------------------------------------------------------------------

class DicomStudyReferringPhysicianResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DicomStudyReferringPhysicianResponse) */ {
 public:
  inline DicomStudyReferringPhysicianResponse() : DicomStudyReferringPhysicianResponse(nullptr) {}
  virtual ~DicomStudyReferringPhysicianResponse();

  DicomStudyReferringPhysicianResponse(const DicomStudyReferringPhysicianResponse& from);
  DicomStudyReferringPhysicianResponse(DicomStudyReferringPhysicianResponse&& from) noexcept
    : DicomStudyReferringPhysicianResponse() {
    *this = ::std::move(from);
  }

  inline DicomStudyReferringPhysicianResponse& operator=(const DicomStudyReferringPhysicianResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DicomStudyReferringPhysicianResponse& operator=(DicomStudyReferringPhysicianResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DicomStudyReferringPhysicianResponse& default_instance();

  static inline const DicomStudyReferringPhysicianResponse* internal_default_instance() {
    return reinterpret_cast<const DicomStudyReferringPhysicianResponse*>(
               &_DicomStudyReferringPhysicianResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(DicomStudyReferringPhysicianResponse& a, DicomStudyReferringPhysicianResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DicomStudyReferringPhysicianResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DicomStudyReferringPhysicianResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DicomStudyReferringPhysicianResponse* New() const final {
    return CreateMaybeMessage<DicomStudyReferringPhysicianResponse>(nullptr);
  }

  DicomStudyReferringPhysicianResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DicomStudyReferringPhysicianResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DicomStudyReferringPhysicianResponse& from);
  void MergeFrom(const DicomStudyReferringPhysicianResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DicomStudyReferringPhysicianResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "osirixgrpc.DicomStudyReferringPhysicianResponse";
  }
  protected:
  explicit DicomStudyReferringPhysicianResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dicomstudy_2eproto);
    return ::descriptor_table_dicomstudy_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReferringPhysicianFieldNumber = 2,
    kStatusFieldNumber = 1,
  };
  // string referring_physician = 2;
  void clear_referring_physician();
  const std::string& referring_physician() const;
  void set_referring_physician(const std::string& value);
  void set_referring_physician(std::string&& value);
  void set_referring_physician(const char* value);
  void set_referring_physician(const char* value, size_t size);
  std::string* mutable_referring_physician();
  std::string* release_referring_physician();
  void set_allocated_referring_physician(std::string* referring_physician);
  private:
  const std::string& _internal_referring_physician() const;
  void _internal_set_referring_physician(const std::string& value);
  std::string* _internal_mutable_referring_physician();
  public:

  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  const ::osirixgrpc::Status& status() const;
  ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  // @@protoc_insertion_point(class_scope:osirixgrpc.DicomStudyReferringPhysicianResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr referring_physician_;
  ::osirixgrpc::Status* status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dicomstudy_2eproto;
};
// -------------------------------------------------------------------

class DicomStudyStudyInstanceUIDResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DicomStudyStudyInstanceUIDResponse) */ {
 public:
  inline DicomStudyStudyInstanceUIDResponse() : DicomStudyStudyInstanceUIDResponse(nullptr) {}
  virtual ~DicomStudyStudyInstanceUIDResponse();

  DicomStudyStudyInstanceUIDResponse(const DicomStudyStudyInstanceUIDResponse& from);
  DicomStudyStudyInstanceUIDResponse(DicomStudyStudyInstanceUIDResponse&& from) noexcept
    : DicomStudyStudyInstanceUIDResponse() {
    *this = ::std::move(from);
  }

  inline DicomStudyStudyInstanceUIDResponse& operator=(const DicomStudyStudyInstanceUIDResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DicomStudyStudyInstanceUIDResponse& operator=(DicomStudyStudyInstanceUIDResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DicomStudyStudyInstanceUIDResponse& default_instance();

  static inline const DicomStudyStudyInstanceUIDResponse* internal_default_instance() {
    return reinterpret_cast<const DicomStudyStudyInstanceUIDResponse*>(
               &_DicomStudyStudyInstanceUIDResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(DicomStudyStudyInstanceUIDResponse& a, DicomStudyStudyInstanceUIDResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DicomStudyStudyInstanceUIDResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DicomStudyStudyInstanceUIDResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DicomStudyStudyInstanceUIDResponse* New() const final {
    return CreateMaybeMessage<DicomStudyStudyInstanceUIDResponse>(nullptr);
  }

  DicomStudyStudyInstanceUIDResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DicomStudyStudyInstanceUIDResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DicomStudyStudyInstanceUIDResponse& from);
  void MergeFrom(const DicomStudyStudyInstanceUIDResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DicomStudyStudyInstanceUIDResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "osirixgrpc.DicomStudyStudyInstanceUIDResponse";
  }
  protected:
  explicit DicomStudyStudyInstanceUIDResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dicomstudy_2eproto);
    return ::descriptor_table_dicomstudy_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStudyInstanceUidFieldNumber = 2,
    kStatusFieldNumber = 1,
  };
  // string study_instance_uid = 2;
  void clear_study_instance_uid();
  const std::string& study_instance_uid() const;
  void set_study_instance_uid(const std::string& value);
  void set_study_instance_uid(std::string&& value);
  void set_study_instance_uid(const char* value);
  void set_study_instance_uid(const char* value, size_t size);
  std::string* mutable_study_instance_uid();
  std::string* release_study_instance_uid();
  void set_allocated_study_instance_uid(std::string* study_instance_uid);
  private:
  const std::string& _internal_study_instance_uid() const;
  void _internal_set_study_instance_uid(const std::string& value);
  std::string* _internal_mutable_study_instance_uid();
  public:

  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  const ::osirixgrpc::Status& status() const;
  ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  // @@protoc_insertion_point(class_scope:osirixgrpc.DicomStudyStudyInstanceUIDResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr study_instance_uid_;
  ::osirixgrpc::Status* status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dicomstudy_2eproto;
};
// -------------------------------------------------------------------

class DicomStudyStudyNameResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DicomStudyStudyNameResponse) */ {
 public:
  inline DicomStudyStudyNameResponse() : DicomStudyStudyNameResponse(nullptr) {}
  virtual ~DicomStudyStudyNameResponse();

  DicomStudyStudyNameResponse(const DicomStudyStudyNameResponse& from);
  DicomStudyStudyNameResponse(DicomStudyStudyNameResponse&& from) noexcept
    : DicomStudyStudyNameResponse() {
    *this = ::std::move(from);
  }

  inline DicomStudyStudyNameResponse& operator=(const DicomStudyStudyNameResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DicomStudyStudyNameResponse& operator=(DicomStudyStudyNameResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DicomStudyStudyNameResponse& default_instance();

  static inline const DicomStudyStudyNameResponse* internal_default_instance() {
    return reinterpret_cast<const DicomStudyStudyNameResponse*>(
               &_DicomStudyStudyNameResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(DicomStudyStudyNameResponse& a, DicomStudyStudyNameResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DicomStudyStudyNameResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DicomStudyStudyNameResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DicomStudyStudyNameResponse* New() const final {
    return CreateMaybeMessage<DicomStudyStudyNameResponse>(nullptr);
  }

  DicomStudyStudyNameResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DicomStudyStudyNameResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DicomStudyStudyNameResponse& from);
  void MergeFrom(const DicomStudyStudyNameResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DicomStudyStudyNameResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "osirixgrpc.DicomStudyStudyNameResponse";
  }
  protected:
  explicit DicomStudyStudyNameResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dicomstudy_2eproto);
    return ::descriptor_table_dicomstudy_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStudyNameFieldNumber = 2,
    kStatusFieldNumber = 1,
  };
  // string study_name = 2;
  void clear_study_name();
  const std::string& study_name() const;
  void set_study_name(const std::string& value);
  void set_study_name(std::string&& value);
  void set_study_name(const char* value);
  void set_study_name(const char* value, size_t size);
  std::string* mutable_study_name();
  std::string* release_study_name();
  void set_allocated_study_name(std::string* study_name);
  private:
  const std::string& _internal_study_name() const;
  void _internal_set_study_name(const std::string& value);
  std::string* _internal_mutable_study_name();
  public:

  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  const ::osirixgrpc::Status& status() const;
  ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  // @@protoc_insertion_point(class_scope:osirixgrpc.DicomStudyStudyNameResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr study_name_;
  ::osirixgrpc::Status* status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dicomstudy_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// DicomStudyPathsResponse

// .osirixgrpc.Status status = 1;
inline bool DicomStudyPathsResponse::_internal_has_status() const {
  return this != internal_default_instance() && status_ != nullptr;
}
inline bool DicomStudyPathsResponse::has_status() const {
  return _internal_has_status();
}
inline const ::osirixgrpc::Status& DicomStudyPathsResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DicomStudyPathsResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomStudyPathsResponse.status)
  return _internal_status();
}
inline void DicomStudyPathsResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomStudyPathsResponse.status)
}
inline ::osirixgrpc::Status* DicomStudyPathsResponse::release_status() {
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::Status* DicomStudyPathsResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomStudyPathsResponse.status)
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DicomStudyPathsResponse::_internal_mutable_status() {
  
  if (status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    status_ = p;
  }
  return status_;
}
inline ::osirixgrpc::Status* DicomStudyPathsResponse::mutable_status() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomStudyPathsResponse.status)
  return _internal_mutable_status();
}
inline void DicomStudyPathsResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status)->GetArena();
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomStudyPathsResponse.status)
}

// repeated string paths = 2;
inline int DicomStudyPathsResponse::_internal_paths_size() const {
  return paths_.size();
}
inline int DicomStudyPathsResponse::paths_size() const {
  return _internal_paths_size();
}
inline void DicomStudyPathsResponse::clear_paths() {
  paths_.Clear();
}
inline std::string* DicomStudyPathsResponse::add_paths() {
  // @@protoc_insertion_point(field_add_mutable:osirixgrpc.DicomStudyPathsResponse.paths)
  return _internal_add_paths();
}
inline const std::string& DicomStudyPathsResponse::_internal_paths(int index) const {
  return paths_.Get(index);
}
inline const std::string& DicomStudyPathsResponse::paths(int index) const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomStudyPathsResponse.paths)
  return _internal_paths(index);
}
inline std::string* DicomStudyPathsResponse::mutable_paths(int index) {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomStudyPathsResponse.paths)
  return paths_.Mutable(index);
}
inline void DicomStudyPathsResponse::set_paths(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomStudyPathsResponse.paths)
  paths_.Mutable(index)->assign(value);
}
inline void DicomStudyPathsResponse::set_paths(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomStudyPathsResponse.paths)
  paths_.Mutable(index)->assign(std::move(value));
}
inline void DicomStudyPathsResponse::set_paths(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  paths_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:osirixgrpc.DicomStudyPathsResponse.paths)
}
inline void DicomStudyPathsResponse::set_paths(int index, const char* value, size_t size) {
  paths_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:osirixgrpc.DicomStudyPathsResponse.paths)
}
inline std::string* DicomStudyPathsResponse::_internal_add_paths() {
  return paths_.Add();
}
inline void DicomStudyPathsResponse::add_paths(const std::string& value) {
  paths_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:osirixgrpc.DicomStudyPathsResponse.paths)
}
inline void DicomStudyPathsResponse::add_paths(std::string&& value) {
  paths_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:osirixgrpc.DicomStudyPathsResponse.paths)
}
inline void DicomStudyPathsResponse::add_paths(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  paths_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:osirixgrpc.DicomStudyPathsResponse.paths)
}
inline void DicomStudyPathsResponse::add_paths(const char* value, size_t size) {
  paths_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:osirixgrpc.DicomStudyPathsResponse.paths)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
DicomStudyPathsResponse::paths() const {
  // @@protoc_insertion_point(field_list:osirixgrpc.DicomStudyPathsResponse.paths)
  return paths_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
DicomStudyPathsResponse::mutable_paths() {
  // @@protoc_insertion_point(field_mutable_list:osirixgrpc.DicomStudyPathsResponse.paths)
  return &paths_;
}

// -------------------------------------------------------------------

// DicomStudyImagesResponse

// .osirixgrpc.Status status = 1;
inline bool DicomStudyImagesResponse::_internal_has_status() const {
  return this != internal_default_instance() && status_ != nullptr;
}
inline bool DicomStudyImagesResponse::has_status() const {
  return _internal_has_status();
}
inline const ::osirixgrpc::Status& DicomStudyImagesResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DicomStudyImagesResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomStudyImagesResponse.status)
  return _internal_status();
}
inline void DicomStudyImagesResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomStudyImagesResponse.status)
}
inline ::osirixgrpc::Status* DicomStudyImagesResponse::release_status() {
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::Status* DicomStudyImagesResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomStudyImagesResponse.status)
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DicomStudyImagesResponse::_internal_mutable_status() {
  
  if (status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    status_ = p;
  }
  return status_;
}
inline ::osirixgrpc::Status* DicomStudyImagesResponse::mutable_status() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomStudyImagesResponse.status)
  return _internal_mutable_status();
}
inline void DicomStudyImagesResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status)->GetArena();
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomStudyImagesResponse.status)
}

// repeated .osirixgrpc.DicomImage images = 2;
inline int DicomStudyImagesResponse::_internal_images_size() const {
  return images_.size();
}
inline int DicomStudyImagesResponse::images_size() const {
  return _internal_images_size();
}
inline ::osirixgrpc::DicomImage* DicomStudyImagesResponse::mutable_images(int index) {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomStudyImagesResponse.images)
  return images_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::osirixgrpc::DicomImage >*
DicomStudyImagesResponse::mutable_images() {
  // @@protoc_insertion_point(field_mutable_list:osirixgrpc.DicomStudyImagesResponse.images)
  return &images_;
}
inline const ::osirixgrpc::DicomImage& DicomStudyImagesResponse::_internal_images(int index) const {
  return images_.Get(index);
}
inline const ::osirixgrpc::DicomImage& DicomStudyImagesResponse::images(int index) const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomStudyImagesResponse.images)
  return _internal_images(index);
}
inline ::osirixgrpc::DicomImage* DicomStudyImagesResponse::_internal_add_images() {
  return images_.Add();
}
inline ::osirixgrpc::DicomImage* DicomStudyImagesResponse::add_images() {
  // @@protoc_insertion_point(field_add:osirixgrpc.DicomStudyImagesResponse.images)
  return _internal_add_images();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::osirixgrpc::DicomImage >&
DicomStudyImagesResponse::images() const {
  // @@protoc_insertion_point(field_list:osirixgrpc.DicomStudyImagesResponse.images)
  return images_;
}

// -------------------------------------------------------------------

// DicomStudyModalitiesResponse

// .osirixgrpc.Status status = 1;
inline bool DicomStudyModalitiesResponse::_internal_has_status() const {
  return this != internal_default_instance() && status_ != nullptr;
}
inline bool DicomStudyModalitiesResponse::has_status() const {
  return _internal_has_status();
}
inline const ::osirixgrpc::Status& DicomStudyModalitiesResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DicomStudyModalitiesResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomStudyModalitiesResponse.status)
  return _internal_status();
}
inline void DicomStudyModalitiesResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomStudyModalitiesResponse.status)
}
inline ::osirixgrpc::Status* DicomStudyModalitiesResponse::release_status() {
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::Status* DicomStudyModalitiesResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomStudyModalitiesResponse.status)
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DicomStudyModalitiesResponse::_internal_mutable_status() {
  
  if (status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    status_ = p;
  }
  return status_;
}
inline ::osirixgrpc::Status* DicomStudyModalitiesResponse::mutable_status() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomStudyModalitiesResponse.status)
  return _internal_mutable_status();
}
inline void DicomStudyModalitiesResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status)->GetArena();
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomStudyModalitiesResponse.status)
}

// string modalities = 2;
inline void DicomStudyModalitiesResponse::clear_modalities() {
  modalities_.ClearToEmpty();
}
inline const std::string& DicomStudyModalitiesResponse::modalities() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomStudyModalitiesResponse.modalities)
  return _internal_modalities();
}
inline void DicomStudyModalitiesResponse::set_modalities(const std::string& value) {
  _internal_set_modalities(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomStudyModalitiesResponse.modalities)
}
inline std::string* DicomStudyModalitiesResponse::mutable_modalities() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomStudyModalitiesResponse.modalities)
  return _internal_mutable_modalities();
}
inline const std::string& DicomStudyModalitiesResponse::_internal_modalities() const {
  return modalities_.Get();
}
inline void DicomStudyModalitiesResponse::_internal_set_modalities(const std::string& value) {
  
  modalities_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void DicomStudyModalitiesResponse::set_modalities(std::string&& value) {
  
  modalities_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:osirixgrpc.DicomStudyModalitiesResponse.modalities)
}
inline void DicomStudyModalitiesResponse::set_modalities(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  modalities_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:osirixgrpc.DicomStudyModalitiesResponse.modalities)
}
inline void DicomStudyModalitiesResponse::set_modalities(const char* value,
    size_t size) {
  
  modalities_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:osirixgrpc.DicomStudyModalitiesResponse.modalities)
}
inline std::string* DicomStudyModalitiesResponse::_internal_mutable_modalities() {
  
  return modalities_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* DicomStudyModalitiesResponse::release_modalities() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomStudyModalitiesResponse.modalities)
  return modalities_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void DicomStudyModalitiesResponse::set_allocated_modalities(std::string* modalities) {
  if (modalities != nullptr) {
    
  } else {
    
  }
  modalities_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), modalities,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomStudyModalitiesResponse.modalities)
}

// -------------------------------------------------------------------

// DicomStudyNoFilesResponse

// .osirixgrpc.Status status = 1;
inline bool DicomStudyNoFilesResponse::_internal_has_status() const {
  return this != internal_default_instance() && status_ != nullptr;
}
inline bool DicomStudyNoFilesResponse::has_status() const {
  return _internal_has_status();
}
inline const ::osirixgrpc::Status& DicomStudyNoFilesResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DicomStudyNoFilesResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomStudyNoFilesResponse.status)
  return _internal_status();
}
inline void DicomStudyNoFilesResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomStudyNoFilesResponse.status)
}
inline ::osirixgrpc::Status* DicomStudyNoFilesResponse::release_status() {
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::Status* DicomStudyNoFilesResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomStudyNoFilesResponse.status)
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DicomStudyNoFilesResponse::_internal_mutable_status() {
  
  if (status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    status_ = p;
  }
  return status_;
}
inline ::osirixgrpc::Status* DicomStudyNoFilesResponse::mutable_status() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomStudyNoFilesResponse.status)
  return _internal_mutable_status();
}
inline void DicomStudyNoFilesResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status)->GetArena();
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomStudyNoFilesResponse.status)
}

// int32 no_files = 2;
inline void DicomStudyNoFilesResponse::clear_no_files() {
  no_files_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomStudyNoFilesResponse::_internal_no_files() const {
  return no_files_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomStudyNoFilesResponse::no_files() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomStudyNoFilesResponse.no_files)
  return _internal_no_files();
}
inline void DicomStudyNoFilesResponse::_internal_set_no_files(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  no_files_ = value;
}
inline void DicomStudyNoFilesResponse::set_no_files(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_no_files(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomStudyNoFilesResponse.no_files)
}

// -------------------------------------------------------------------

// DicomStudyRawNoFilesResponse

// .osirixgrpc.Status status = 1;
inline bool DicomStudyRawNoFilesResponse::_internal_has_status() const {
  return this != internal_default_instance() && status_ != nullptr;
}
inline bool DicomStudyRawNoFilesResponse::has_status() const {
  return _internal_has_status();
}
inline const ::osirixgrpc::Status& DicomStudyRawNoFilesResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DicomStudyRawNoFilesResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomStudyRawNoFilesResponse.status)
  return _internal_status();
}
inline void DicomStudyRawNoFilesResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomStudyRawNoFilesResponse.status)
}
inline ::osirixgrpc::Status* DicomStudyRawNoFilesResponse::release_status() {
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::Status* DicomStudyRawNoFilesResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomStudyRawNoFilesResponse.status)
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DicomStudyRawNoFilesResponse::_internal_mutable_status() {
  
  if (status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    status_ = p;
  }
  return status_;
}
inline ::osirixgrpc::Status* DicomStudyRawNoFilesResponse::mutable_status() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomStudyRawNoFilesResponse.status)
  return _internal_mutable_status();
}
inline void DicomStudyRawNoFilesResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status)->GetArena();
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomStudyRawNoFilesResponse.status)
}

// int32 no_files = 2;
inline void DicomStudyRawNoFilesResponse::clear_no_files() {
  no_files_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomStudyRawNoFilesResponse::_internal_no_files() const {
  return no_files_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomStudyRawNoFilesResponse::no_files() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomStudyRawNoFilesResponse.no_files)
  return _internal_no_files();
}
inline void DicomStudyRawNoFilesResponse::_internal_set_no_files(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  no_files_ = value;
}
inline void DicomStudyRawNoFilesResponse::set_no_files(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_no_files(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomStudyRawNoFilesResponse.no_files)
}

// -------------------------------------------------------------------

// DicomStudyNoFilesExcludingMultiFramesResponse

// .osirixgrpc.Status status = 1;
inline bool DicomStudyNoFilesExcludingMultiFramesResponse::_internal_has_status() const {
  return this != internal_default_instance() && status_ != nullptr;
}
inline bool DicomStudyNoFilesExcludingMultiFramesResponse::has_status() const {
  return _internal_has_status();
}
inline const ::osirixgrpc::Status& DicomStudyNoFilesExcludingMultiFramesResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DicomStudyNoFilesExcludingMultiFramesResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomStudyNoFilesExcludingMultiFramesResponse.status)
  return _internal_status();
}
inline void DicomStudyNoFilesExcludingMultiFramesResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomStudyNoFilesExcludingMultiFramesResponse.status)
}
inline ::osirixgrpc::Status* DicomStudyNoFilesExcludingMultiFramesResponse::release_status() {
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::Status* DicomStudyNoFilesExcludingMultiFramesResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomStudyNoFilesExcludingMultiFramesResponse.status)
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DicomStudyNoFilesExcludingMultiFramesResponse::_internal_mutable_status() {
  
  if (status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    status_ = p;
  }
  return status_;
}
inline ::osirixgrpc::Status* DicomStudyNoFilesExcludingMultiFramesResponse::mutable_status() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomStudyNoFilesExcludingMultiFramesResponse.status)
  return _internal_mutable_status();
}
inline void DicomStudyNoFilesExcludingMultiFramesResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status)->GetArena();
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomStudyNoFilesExcludingMultiFramesResponse.status)
}

// int32 no_files = 2;
inline void DicomStudyNoFilesExcludingMultiFramesResponse::clear_no_files() {
  no_files_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomStudyNoFilesExcludingMultiFramesResponse::_internal_no_files() const {
  return no_files_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomStudyNoFilesExcludingMultiFramesResponse::no_files() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomStudyNoFilesExcludingMultiFramesResponse.no_files)
  return _internal_no_files();
}
inline void DicomStudyNoFilesExcludingMultiFramesResponse::_internal_set_no_files(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  no_files_ = value;
}
inline void DicomStudyNoFilesExcludingMultiFramesResponse::set_no_files(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_no_files(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomStudyNoFilesExcludingMultiFramesResponse.no_files)
}

// -------------------------------------------------------------------

// DicomStudyNumberOfImagesResponse

// .osirixgrpc.Status status = 1;
inline bool DicomStudyNumberOfImagesResponse::_internal_has_status() const {
  return this != internal_default_instance() && status_ != nullptr;
}
inline bool DicomStudyNumberOfImagesResponse::has_status() const {
  return _internal_has_status();
}
inline const ::osirixgrpc::Status& DicomStudyNumberOfImagesResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DicomStudyNumberOfImagesResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomStudyNumberOfImagesResponse.status)
  return _internal_status();
}
inline void DicomStudyNumberOfImagesResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomStudyNumberOfImagesResponse.status)
}
inline ::osirixgrpc::Status* DicomStudyNumberOfImagesResponse::release_status() {
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::Status* DicomStudyNumberOfImagesResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomStudyNumberOfImagesResponse.status)
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DicomStudyNumberOfImagesResponse::_internal_mutable_status() {
  
  if (status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    status_ = p;
  }
  return status_;
}
inline ::osirixgrpc::Status* DicomStudyNumberOfImagesResponse::mutable_status() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomStudyNumberOfImagesResponse.status)
  return _internal_mutable_status();
}
inline void DicomStudyNumberOfImagesResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status)->GetArena();
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomStudyNumberOfImagesResponse.status)
}

// int32 no_images = 2;
inline void DicomStudyNumberOfImagesResponse::clear_no_images() {
  no_images_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomStudyNumberOfImagesResponse::_internal_no_images() const {
  return no_images_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomStudyNumberOfImagesResponse::no_images() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomStudyNumberOfImagesResponse.no_images)
  return _internal_no_images();
}
inline void DicomStudyNumberOfImagesResponse::_internal_set_no_images(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  no_images_ = value;
}
inline void DicomStudyNumberOfImagesResponse::set_no_images(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_no_images(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomStudyNumberOfImagesResponse.no_images)
}

// -------------------------------------------------------------------

// DicomStudySeriesResponse

// .osirixgrpc.Status status = 1;
inline bool DicomStudySeriesResponse::_internal_has_status() const {
  return this != internal_default_instance() && status_ != nullptr;
}
inline bool DicomStudySeriesResponse::has_status() const {
  return _internal_has_status();
}
inline const ::osirixgrpc::Status& DicomStudySeriesResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DicomStudySeriesResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomStudySeriesResponse.status)
  return _internal_status();
}
inline void DicomStudySeriesResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomStudySeriesResponse.status)
}
inline ::osirixgrpc::Status* DicomStudySeriesResponse::release_status() {
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::Status* DicomStudySeriesResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomStudySeriesResponse.status)
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DicomStudySeriesResponse::_internal_mutable_status() {
  
  if (status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    status_ = p;
  }
  return status_;
}
inline ::osirixgrpc::Status* DicomStudySeriesResponse::mutable_status() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomStudySeriesResponse.status)
  return _internal_mutable_status();
}
inline void DicomStudySeriesResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status)->GetArena();
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomStudySeriesResponse.status)
}

// repeated .osirixgrpc.DicomSeries series = 2;
inline int DicomStudySeriesResponse::_internal_series_size() const {
  return series_.size();
}
inline int DicomStudySeriesResponse::series_size() const {
  return _internal_series_size();
}
inline ::osirixgrpc::DicomSeries* DicomStudySeriesResponse::mutable_series(int index) {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomStudySeriesResponse.series)
  return series_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::osirixgrpc::DicomSeries >*
DicomStudySeriesResponse::mutable_series() {
  // @@protoc_insertion_point(field_mutable_list:osirixgrpc.DicomStudySeriesResponse.series)
  return &series_;
}
inline const ::osirixgrpc::DicomSeries& DicomStudySeriesResponse::_internal_series(int index) const {
  return series_.Get(index);
}
inline const ::osirixgrpc::DicomSeries& DicomStudySeriesResponse::series(int index) const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomStudySeriesResponse.series)
  return _internal_series(index);
}
inline ::osirixgrpc::DicomSeries* DicomStudySeriesResponse::_internal_add_series() {
  return series_.Add();
}
inline ::osirixgrpc::DicomSeries* DicomStudySeriesResponse::add_series() {
  // @@protoc_insertion_point(field_add:osirixgrpc.DicomStudySeriesResponse.series)
  return _internal_add_series();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::osirixgrpc::DicomSeries >&
DicomStudySeriesResponse::series() const {
  // @@protoc_insertion_point(field_list:osirixgrpc.DicomStudySeriesResponse.series)
  return series_;
}

// -------------------------------------------------------------------

// DicomStudyNameResponse

// .osirixgrpc.Status status = 1;
inline bool DicomStudyNameResponse::_internal_has_status() const {
  return this != internal_default_instance() && status_ != nullptr;
}
inline bool DicomStudyNameResponse::has_status() const {
  return _internal_has_status();
}
inline const ::osirixgrpc::Status& DicomStudyNameResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DicomStudyNameResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomStudyNameResponse.status)
  return _internal_status();
}
inline void DicomStudyNameResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomStudyNameResponse.status)
}
inline ::osirixgrpc::Status* DicomStudyNameResponse::release_status() {
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::Status* DicomStudyNameResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomStudyNameResponse.status)
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DicomStudyNameResponse::_internal_mutable_status() {
  
  if (status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    status_ = p;
  }
  return status_;
}
inline ::osirixgrpc::Status* DicomStudyNameResponse::mutable_status() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomStudyNameResponse.status)
  return _internal_mutable_status();
}
inline void DicomStudyNameResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status)->GetArena();
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomStudyNameResponse.status)
}

// string name = 2;
inline void DicomStudyNameResponse::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& DicomStudyNameResponse::name() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomStudyNameResponse.name)
  return _internal_name();
}
inline void DicomStudyNameResponse::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomStudyNameResponse.name)
}
inline std::string* DicomStudyNameResponse::mutable_name() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomStudyNameResponse.name)
  return _internal_mutable_name();
}
inline const std::string& DicomStudyNameResponse::_internal_name() const {
  return name_.Get();
}
inline void DicomStudyNameResponse::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void DicomStudyNameResponse::set_name(std::string&& value) {
  
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:osirixgrpc.DicomStudyNameResponse.name)
}
inline void DicomStudyNameResponse::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:osirixgrpc.DicomStudyNameResponse.name)
}
inline void DicomStudyNameResponse::set_name(const char* value,
    size_t size) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:osirixgrpc.DicomStudyNameResponse.name)
}
inline std::string* DicomStudyNameResponse::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* DicomStudyNameResponse::release_name() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomStudyNameResponse.name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void DicomStudyNameResponse::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomStudyNameResponse.name)
}

// -------------------------------------------------------------------

// DicomStudyDateResponse

// .osirixgrpc.Status status = 1;
inline bool DicomStudyDateResponse::_internal_has_status() const {
  return this != internal_default_instance() && status_ != nullptr;
}
inline bool DicomStudyDateResponse::has_status() const {
  return _internal_has_status();
}
inline const ::osirixgrpc::Status& DicomStudyDateResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DicomStudyDateResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomStudyDateResponse.status)
  return _internal_status();
}
inline void DicomStudyDateResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomStudyDateResponse.status)
}
inline ::osirixgrpc::Status* DicomStudyDateResponse::release_status() {
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::Status* DicomStudyDateResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomStudyDateResponse.status)
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DicomStudyDateResponse::_internal_mutable_status() {
  
  if (status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    status_ = p;
  }
  return status_;
}
inline ::osirixgrpc::Status* DicomStudyDateResponse::mutable_status() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomStudyDateResponse.status)
  return _internal_mutable_status();
}
inline void DicomStudyDateResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status)->GetArena();
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomStudyDateResponse.status)
}

// int32 year = 2;
inline void DicomStudyDateResponse::clear_year() {
  year_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomStudyDateResponse::_internal_year() const {
  return year_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomStudyDateResponse::year() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomStudyDateResponse.year)
  return _internal_year();
}
inline void DicomStudyDateResponse::_internal_set_year(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  year_ = value;
}
inline void DicomStudyDateResponse::set_year(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_year(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomStudyDateResponse.year)
}

// int32 month = 3;
inline void DicomStudyDateResponse::clear_month() {
  month_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomStudyDateResponse::_internal_month() const {
  return month_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomStudyDateResponse::month() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomStudyDateResponse.month)
  return _internal_month();
}
inline void DicomStudyDateResponse::_internal_set_month(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  month_ = value;
}
inline void DicomStudyDateResponse::set_month(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_month(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomStudyDateResponse.month)
}

// int32 day = 4;
inline void DicomStudyDateResponse::clear_day() {
  day_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomStudyDateResponse::_internal_day() const {
  return day_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomStudyDateResponse::day() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomStudyDateResponse.day)
  return _internal_day();
}
inline void DicomStudyDateResponse::_internal_set_day(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  day_ = value;
}
inline void DicomStudyDateResponse::set_day(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_day(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomStudyDateResponse.day)
}

// int32 hour = 5;
inline void DicomStudyDateResponse::clear_hour() {
  hour_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomStudyDateResponse::_internal_hour() const {
  return hour_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomStudyDateResponse::hour() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomStudyDateResponse.hour)
  return _internal_hour();
}
inline void DicomStudyDateResponse::_internal_set_hour(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  hour_ = value;
}
inline void DicomStudyDateResponse::set_hour(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_hour(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomStudyDateResponse.hour)
}

// int32 minute = 6;
inline void DicomStudyDateResponse::clear_minute() {
  minute_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomStudyDateResponse::_internal_minute() const {
  return minute_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomStudyDateResponse::minute() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomStudyDateResponse.minute)
  return _internal_minute();
}
inline void DicomStudyDateResponse::_internal_set_minute(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  minute_ = value;
}
inline void DicomStudyDateResponse::set_minute(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_minute(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomStudyDateResponse.minute)
}

// int32 second = 7;
inline void DicomStudyDateResponse::clear_second() {
  second_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomStudyDateResponse::_internal_second() const {
  return second_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomStudyDateResponse::second() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomStudyDateResponse.second)
  return _internal_second();
}
inline void DicomStudyDateResponse::_internal_set_second(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  second_ = value;
}
inline void DicomStudyDateResponse::set_second(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_second(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomStudyDateResponse.second)
}

// int32 millisecond = 8;
inline void DicomStudyDateResponse::clear_millisecond() {
  millisecond_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomStudyDateResponse::_internal_millisecond() const {
  return millisecond_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomStudyDateResponse::millisecond() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomStudyDateResponse.millisecond)
  return _internal_millisecond();
}
inline void DicomStudyDateResponse::_internal_set_millisecond(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  millisecond_ = value;
}
inline void DicomStudyDateResponse::set_millisecond(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_millisecond(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomStudyDateResponse.millisecond)
}

// -------------------------------------------------------------------

// DicomStudyDateAddedResponse

// .osirixgrpc.Status status = 1;
inline bool DicomStudyDateAddedResponse::_internal_has_status() const {
  return this != internal_default_instance() && status_ != nullptr;
}
inline bool DicomStudyDateAddedResponse::has_status() const {
  return _internal_has_status();
}
inline const ::osirixgrpc::Status& DicomStudyDateAddedResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DicomStudyDateAddedResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomStudyDateAddedResponse.status)
  return _internal_status();
}
inline void DicomStudyDateAddedResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomStudyDateAddedResponse.status)
}
inline ::osirixgrpc::Status* DicomStudyDateAddedResponse::release_status() {
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::Status* DicomStudyDateAddedResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomStudyDateAddedResponse.status)
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DicomStudyDateAddedResponse::_internal_mutable_status() {
  
  if (status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    status_ = p;
  }
  return status_;
}
inline ::osirixgrpc::Status* DicomStudyDateAddedResponse::mutable_status() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomStudyDateAddedResponse.status)
  return _internal_mutable_status();
}
inline void DicomStudyDateAddedResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status)->GetArena();
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomStudyDateAddedResponse.status)
}

// int32 year = 2;
inline void DicomStudyDateAddedResponse::clear_year() {
  year_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomStudyDateAddedResponse::_internal_year() const {
  return year_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomStudyDateAddedResponse::year() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomStudyDateAddedResponse.year)
  return _internal_year();
}
inline void DicomStudyDateAddedResponse::_internal_set_year(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  year_ = value;
}
inline void DicomStudyDateAddedResponse::set_year(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_year(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomStudyDateAddedResponse.year)
}

// int32 month = 3;
inline void DicomStudyDateAddedResponse::clear_month() {
  month_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomStudyDateAddedResponse::_internal_month() const {
  return month_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomStudyDateAddedResponse::month() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomStudyDateAddedResponse.month)
  return _internal_month();
}
inline void DicomStudyDateAddedResponse::_internal_set_month(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  month_ = value;
}
inline void DicomStudyDateAddedResponse::set_month(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_month(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomStudyDateAddedResponse.month)
}

// int32 day = 4;
inline void DicomStudyDateAddedResponse::clear_day() {
  day_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomStudyDateAddedResponse::_internal_day() const {
  return day_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomStudyDateAddedResponse::day() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomStudyDateAddedResponse.day)
  return _internal_day();
}
inline void DicomStudyDateAddedResponse::_internal_set_day(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  day_ = value;
}
inline void DicomStudyDateAddedResponse::set_day(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_day(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomStudyDateAddedResponse.day)
}

// int32 hour = 5;
inline void DicomStudyDateAddedResponse::clear_hour() {
  hour_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomStudyDateAddedResponse::_internal_hour() const {
  return hour_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomStudyDateAddedResponse::hour() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomStudyDateAddedResponse.hour)
  return _internal_hour();
}
inline void DicomStudyDateAddedResponse::_internal_set_hour(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  hour_ = value;
}
inline void DicomStudyDateAddedResponse::set_hour(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_hour(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomStudyDateAddedResponse.hour)
}

// int32 minute = 6;
inline void DicomStudyDateAddedResponse::clear_minute() {
  minute_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomStudyDateAddedResponse::_internal_minute() const {
  return minute_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomStudyDateAddedResponse::minute() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomStudyDateAddedResponse.minute)
  return _internal_minute();
}
inline void DicomStudyDateAddedResponse::_internal_set_minute(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  minute_ = value;
}
inline void DicomStudyDateAddedResponse::set_minute(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_minute(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomStudyDateAddedResponse.minute)
}

// int32 second = 7;
inline void DicomStudyDateAddedResponse::clear_second() {
  second_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomStudyDateAddedResponse::_internal_second() const {
  return second_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomStudyDateAddedResponse::second() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomStudyDateAddedResponse.second)
  return _internal_second();
}
inline void DicomStudyDateAddedResponse::_internal_set_second(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  second_ = value;
}
inline void DicomStudyDateAddedResponse::set_second(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_second(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomStudyDateAddedResponse.second)
}

// int32 millisecond = 8;
inline void DicomStudyDateAddedResponse::clear_millisecond() {
  millisecond_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomStudyDateAddedResponse::_internal_millisecond() const {
  return millisecond_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomStudyDateAddedResponse::millisecond() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomStudyDateAddedResponse.millisecond)
  return _internal_millisecond();
}
inline void DicomStudyDateAddedResponse::_internal_set_millisecond(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  millisecond_ = value;
}
inline void DicomStudyDateAddedResponse::set_millisecond(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_millisecond(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomStudyDateAddedResponse.millisecond)
}

// -------------------------------------------------------------------

// DicomStudyDateOfBirthResponse

// .osirixgrpc.Status status = 1;
inline bool DicomStudyDateOfBirthResponse::_internal_has_status() const {
  return this != internal_default_instance() && status_ != nullptr;
}
inline bool DicomStudyDateOfBirthResponse::has_status() const {
  return _internal_has_status();
}
inline const ::osirixgrpc::Status& DicomStudyDateOfBirthResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DicomStudyDateOfBirthResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomStudyDateOfBirthResponse.status)
  return _internal_status();
}
inline void DicomStudyDateOfBirthResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomStudyDateOfBirthResponse.status)
}
inline ::osirixgrpc::Status* DicomStudyDateOfBirthResponse::release_status() {
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::Status* DicomStudyDateOfBirthResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomStudyDateOfBirthResponse.status)
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DicomStudyDateOfBirthResponse::_internal_mutable_status() {
  
  if (status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    status_ = p;
  }
  return status_;
}
inline ::osirixgrpc::Status* DicomStudyDateOfBirthResponse::mutable_status() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomStudyDateOfBirthResponse.status)
  return _internal_mutable_status();
}
inline void DicomStudyDateOfBirthResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status)->GetArena();
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomStudyDateOfBirthResponse.status)
}

// int32 year = 2;
inline void DicomStudyDateOfBirthResponse::clear_year() {
  year_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomStudyDateOfBirthResponse::_internal_year() const {
  return year_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomStudyDateOfBirthResponse::year() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomStudyDateOfBirthResponse.year)
  return _internal_year();
}
inline void DicomStudyDateOfBirthResponse::_internal_set_year(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  year_ = value;
}
inline void DicomStudyDateOfBirthResponse::set_year(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_year(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomStudyDateOfBirthResponse.year)
}

// int32 month = 3;
inline void DicomStudyDateOfBirthResponse::clear_month() {
  month_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomStudyDateOfBirthResponse::_internal_month() const {
  return month_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomStudyDateOfBirthResponse::month() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomStudyDateOfBirthResponse.month)
  return _internal_month();
}
inline void DicomStudyDateOfBirthResponse::_internal_set_month(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  month_ = value;
}
inline void DicomStudyDateOfBirthResponse::set_month(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_month(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomStudyDateOfBirthResponse.month)
}

// int32 day = 4;
inline void DicomStudyDateOfBirthResponse::clear_day() {
  day_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomStudyDateOfBirthResponse::_internal_day() const {
  return day_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomStudyDateOfBirthResponse::day() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomStudyDateOfBirthResponse.day)
  return _internal_day();
}
inline void DicomStudyDateOfBirthResponse::_internal_set_day(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  day_ = value;
}
inline void DicomStudyDateOfBirthResponse::set_day(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_day(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomStudyDateOfBirthResponse.day)
}

// -------------------------------------------------------------------

// DicomStudyInstitutionNameResponse

// .osirixgrpc.Status status = 1;
inline bool DicomStudyInstitutionNameResponse::_internal_has_status() const {
  return this != internal_default_instance() && status_ != nullptr;
}
inline bool DicomStudyInstitutionNameResponse::has_status() const {
  return _internal_has_status();
}
inline const ::osirixgrpc::Status& DicomStudyInstitutionNameResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DicomStudyInstitutionNameResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomStudyInstitutionNameResponse.status)
  return _internal_status();
}
inline void DicomStudyInstitutionNameResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomStudyInstitutionNameResponse.status)
}
inline ::osirixgrpc::Status* DicomStudyInstitutionNameResponse::release_status() {
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::Status* DicomStudyInstitutionNameResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomStudyInstitutionNameResponse.status)
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DicomStudyInstitutionNameResponse::_internal_mutable_status() {
  
  if (status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    status_ = p;
  }
  return status_;
}
inline ::osirixgrpc::Status* DicomStudyInstitutionNameResponse::mutable_status() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomStudyInstitutionNameResponse.status)
  return _internal_mutable_status();
}
inline void DicomStudyInstitutionNameResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status)->GetArena();
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomStudyInstitutionNameResponse.status)
}

// string institution_name = 2;
inline void DicomStudyInstitutionNameResponse::clear_institution_name() {
  institution_name_.ClearToEmpty();
}
inline const std::string& DicomStudyInstitutionNameResponse::institution_name() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomStudyInstitutionNameResponse.institution_name)
  return _internal_institution_name();
}
inline void DicomStudyInstitutionNameResponse::set_institution_name(const std::string& value) {
  _internal_set_institution_name(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomStudyInstitutionNameResponse.institution_name)
}
inline std::string* DicomStudyInstitutionNameResponse::mutable_institution_name() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomStudyInstitutionNameResponse.institution_name)
  return _internal_mutable_institution_name();
}
inline const std::string& DicomStudyInstitutionNameResponse::_internal_institution_name() const {
  return institution_name_.Get();
}
inline void DicomStudyInstitutionNameResponse::_internal_set_institution_name(const std::string& value) {
  
  institution_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void DicomStudyInstitutionNameResponse::set_institution_name(std::string&& value) {
  
  institution_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:osirixgrpc.DicomStudyInstitutionNameResponse.institution_name)
}
inline void DicomStudyInstitutionNameResponse::set_institution_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  institution_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:osirixgrpc.DicomStudyInstitutionNameResponse.institution_name)
}
inline void DicomStudyInstitutionNameResponse::set_institution_name(const char* value,
    size_t size) {
  
  institution_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:osirixgrpc.DicomStudyInstitutionNameResponse.institution_name)
}
inline std::string* DicomStudyInstitutionNameResponse::_internal_mutable_institution_name() {
  
  return institution_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* DicomStudyInstitutionNameResponse::release_institution_name() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomStudyInstitutionNameResponse.institution_name)
  return institution_name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void DicomStudyInstitutionNameResponse::set_allocated_institution_name(std::string* institution_name) {
  if (institution_name != nullptr) {
    
  } else {
    
  }
  institution_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), institution_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomStudyInstitutionNameResponse.institution_name)
}

// -------------------------------------------------------------------

// DicomStudyModalityResponse

// .osirixgrpc.Status status = 1;
inline bool DicomStudyModalityResponse::_internal_has_status() const {
  return this != internal_default_instance() && status_ != nullptr;
}
inline bool DicomStudyModalityResponse::has_status() const {
  return _internal_has_status();
}
inline const ::osirixgrpc::Status& DicomStudyModalityResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DicomStudyModalityResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomStudyModalityResponse.status)
  return _internal_status();
}
inline void DicomStudyModalityResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomStudyModalityResponse.status)
}
inline ::osirixgrpc::Status* DicomStudyModalityResponse::release_status() {
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::Status* DicomStudyModalityResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomStudyModalityResponse.status)
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DicomStudyModalityResponse::_internal_mutable_status() {
  
  if (status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    status_ = p;
  }
  return status_;
}
inline ::osirixgrpc::Status* DicomStudyModalityResponse::mutable_status() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomStudyModalityResponse.status)
  return _internal_mutable_status();
}
inline void DicomStudyModalityResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status)->GetArena();
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomStudyModalityResponse.status)
}

// string modality = 2;
inline void DicomStudyModalityResponse::clear_modality() {
  modality_.ClearToEmpty();
}
inline const std::string& DicomStudyModalityResponse::modality() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomStudyModalityResponse.modality)
  return _internal_modality();
}
inline void DicomStudyModalityResponse::set_modality(const std::string& value) {
  _internal_set_modality(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomStudyModalityResponse.modality)
}
inline std::string* DicomStudyModalityResponse::mutable_modality() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomStudyModalityResponse.modality)
  return _internal_mutable_modality();
}
inline const std::string& DicomStudyModalityResponse::_internal_modality() const {
  return modality_.Get();
}
inline void DicomStudyModalityResponse::_internal_set_modality(const std::string& value) {
  
  modality_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void DicomStudyModalityResponse::set_modality(std::string&& value) {
  
  modality_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:osirixgrpc.DicomStudyModalityResponse.modality)
}
inline void DicomStudyModalityResponse::set_modality(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  modality_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:osirixgrpc.DicomStudyModalityResponse.modality)
}
inline void DicomStudyModalityResponse::set_modality(const char* value,
    size_t size) {
  
  modality_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:osirixgrpc.DicomStudyModalityResponse.modality)
}
inline std::string* DicomStudyModalityResponse::_internal_mutable_modality() {
  
  return modality_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* DicomStudyModalityResponse::release_modality() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomStudyModalityResponse.modality)
  return modality_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void DicomStudyModalityResponse::set_allocated_modality(std::string* modality) {
  if (modality != nullptr) {
    
  } else {
    
  }
  modality_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), modality,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomStudyModalityResponse.modality)
}

// -------------------------------------------------------------------

// DicomStudyPatientIDResponse

// .osirixgrpc.Status status = 1;
inline bool DicomStudyPatientIDResponse::_internal_has_status() const {
  return this != internal_default_instance() && status_ != nullptr;
}
inline bool DicomStudyPatientIDResponse::has_status() const {
  return _internal_has_status();
}
inline const ::osirixgrpc::Status& DicomStudyPatientIDResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DicomStudyPatientIDResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomStudyPatientIDResponse.status)
  return _internal_status();
}
inline void DicomStudyPatientIDResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomStudyPatientIDResponse.status)
}
inline ::osirixgrpc::Status* DicomStudyPatientIDResponse::release_status() {
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::Status* DicomStudyPatientIDResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomStudyPatientIDResponse.status)
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DicomStudyPatientIDResponse::_internal_mutable_status() {
  
  if (status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    status_ = p;
  }
  return status_;
}
inline ::osirixgrpc::Status* DicomStudyPatientIDResponse::mutable_status() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomStudyPatientIDResponse.status)
  return _internal_mutable_status();
}
inline void DicomStudyPatientIDResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status)->GetArena();
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomStudyPatientIDResponse.status)
}

// string patient_id = 2;
inline void DicomStudyPatientIDResponse::clear_patient_id() {
  patient_id_.ClearToEmpty();
}
inline const std::string& DicomStudyPatientIDResponse::patient_id() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomStudyPatientIDResponse.patient_id)
  return _internal_patient_id();
}
inline void DicomStudyPatientIDResponse::set_patient_id(const std::string& value) {
  _internal_set_patient_id(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomStudyPatientIDResponse.patient_id)
}
inline std::string* DicomStudyPatientIDResponse::mutable_patient_id() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomStudyPatientIDResponse.patient_id)
  return _internal_mutable_patient_id();
}
inline const std::string& DicomStudyPatientIDResponse::_internal_patient_id() const {
  return patient_id_.Get();
}
inline void DicomStudyPatientIDResponse::_internal_set_patient_id(const std::string& value) {
  
  patient_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void DicomStudyPatientIDResponse::set_patient_id(std::string&& value) {
  
  patient_id_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:osirixgrpc.DicomStudyPatientIDResponse.patient_id)
}
inline void DicomStudyPatientIDResponse::set_patient_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  patient_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:osirixgrpc.DicomStudyPatientIDResponse.patient_id)
}
inline void DicomStudyPatientIDResponse::set_patient_id(const char* value,
    size_t size) {
  
  patient_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:osirixgrpc.DicomStudyPatientIDResponse.patient_id)
}
inline std::string* DicomStudyPatientIDResponse::_internal_mutable_patient_id() {
  
  return patient_id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* DicomStudyPatientIDResponse::release_patient_id() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomStudyPatientIDResponse.patient_id)
  return patient_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void DicomStudyPatientIDResponse::set_allocated_patient_id(std::string* patient_id) {
  if (patient_id != nullptr) {
    
  } else {
    
  }
  patient_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), patient_id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomStudyPatientIDResponse.patient_id)
}

// -------------------------------------------------------------------

// DicomStudyPatientUIDResponse

// .osirixgrpc.Status status = 1;
inline bool DicomStudyPatientUIDResponse::_internal_has_status() const {
  return this != internal_default_instance() && status_ != nullptr;
}
inline bool DicomStudyPatientUIDResponse::has_status() const {
  return _internal_has_status();
}
inline const ::osirixgrpc::Status& DicomStudyPatientUIDResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DicomStudyPatientUIDResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomStudyPatientUIDResponse.status)
  return _internal_status();
}
inline void DicomStudyPatientUIDResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomStudyPatientUIDResponse.status)
}
inline ::osirixgrpc::Status* DicomStudyPatientUIDResponse::release_status() {
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::Status* DicomStudyPatientUIDResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomStudyPatientUIDResponse.status)
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DicomStudyPatientUIDResponse::_internal_mutable_status() {
  
  if (status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    status_ = p;
  }
  return status_;
}
inline ::osirixgrpc::Status* DicomStudyPatientUIDResponse::mutable_status() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomStudyPatientUIDResponse.status)
  return _internal_mutable_status();
}
inline void DicomStudyPatientUIDResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status)->GetArena();
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomStudyPatientUIDResponse.status)
}

// string patient_uid = 2;
inline void DicomStudyPatientUIDResponse::clear_patient_uid() {
  patient_uid_.ClearToEmpty();
}
inline const std::string& DicomStudyPatientUIDResponse::patient_uid() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomStudyPatientUIDResponse.patient_uid)
  return _internal_patient_uid();
}
inline void DicomStudyPatientUIDResponse::set_patient_uid(const std::string& value) {
  _internal_set_patient_uid(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomStudyPatientUIDResponse.patient_uid)
}
inline std::string* DicomStudyPatientUIDResponse::mutable_patient_uid() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomStudyPatientUIDResponse.patient_uid)
  return _internal_mutable_patient_uid();
}
inline const std::string& DicomStudyPatientUIDResponse::_internal_patient_uid() const {
  return patient_uid_.Get();
}
inline void DicomStudyPatientUIDResponse::_internal_set_patient_uid(const std::string& value) {
  
  patient_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void DicomStudyPatientUIDResponse::set_patient_uid(std::string&& value) {
  
  patient_uid_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:osirixgrpc.DicomStudyPatientUIDResponse.patient_uid)
}
inline void DicomStudyPatientUIDResponse::set_patient_uid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  patient_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:osirixgrpc.DicomStudyPatientUIDResponse.patient_uid)
}
inline void DicomStudyPatientUIDResponse::set_patient_uid(const char* value,
    size_t size) {
  
  patient_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:osirixgrpc.DicomStudyPatientUIDResponse.patient_uid)
}
inline std::string* DicomStudyPatientUIDResponse::_internal_mutable_patient_uid() {
  
  return patient_uid_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* DicomStudyPatientUIDResponse::release_patient_uid() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomStudyPatientUIDResponse.patient_uid)
  return patient_uid_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void DicomStudyPatientUIDResponse::set_allocated_patient_uid(std::string* patient_uid) {
  if (patient_uid != nullptr) {
    
  } else {
    
  }
  patient_uid_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), patient_uid,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomStudyPatientUIDResponse.patient_uid)
}

// -------------------------------------------------------------------

// DicomStudyPatientSexResponse

// .osirixgrpc.Status status = 1;
inline bool DicomStudyPatientSexResponse::_internal_has_status() const {
  return this != internal_default_instance() && status_ != nullptr;
}
inline bool DicomStudyPatientSexResponse::has_status() const {
  return _internal_has_status();
}
inline const ::osirixgrpc::Status& DicomStudyPatientSexResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DicomStudyPatientSexResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomStudyPatientSexResponse.status)
  return _internal_status();
}
inline void DicomStudyPatientSexResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomStudyPatientSexResponse.status)
}
inline ::osirixgrpc::Status* DicomStudyPatientSexResponse::release_status() {
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::Status* DicomStudyPatientSexResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomStudyPatientSexResponse.status)
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DicomStudyPatientSexResponse::_internal_mutable_status() {
  
  if (status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    status_ = p;
  }
  return status_;
}
inline ::osirixgrpc::Status* DicomStudyPatientSexResponse::mutable_status() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomStudyPatientSexResponse.status)
  return _internal_mutable_status();
}
inline void DicomStudyPatientSexResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status)->GetArena();
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomStudyPatientSexResponse.status)
}

// string patient_sex = 2;
inline void DicomStudyPatientSexResponse::clear_patient_sex() {
  patient_sex_.ClearToEmpty();
}
inline const std::string& DicomStudyPatientSexResponse::patient_sex() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomStudyPatientSexResponse.patient_sex)
  return _internal_patient_sex();
}
inline void DicomStudyPatientSexResponse::set_patient_sex(const std::string& value) {
  _internal_set_patient_sex(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomStudyPatientSexResponse.patient_sex)
}
inline std::string* DicomStudyPatientSexResponse::mutable_patient_sex() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomStudyPatientSexResponse.patient_sex)
  return _internal_mutable_patient_sex();
}
inline const std::string& DicomStudyPatientSexResponse::_internal_patient_sex() const {
  return patient_sex_.Get();
}
inline void DicomStudyPatientSexResponse::_internal_set_patient_sex(const std::string& value) {
  
  patient_sex_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void DicomStudyPatientSexResponse::set_patient_sex(std::string&& value) {
  
  patient_sex_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:osirixgrpc.DicomStudyPatientSexResponse.patient_sex)
}
inline void DicomStudyPatientSexResponse::set_patient_sex(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  patient_sex_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:osirixgrpc.DicomStudyPatientSexResponse.patient_sex)
}
inline void DicomStudyPatientSexResponse::set_patient_sex(const char* value,
    size_t size) {
  
  patient_sex_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:osirixgrpc.DicomStudyPatientSexResponse.patient_sex)
}
inline std::string* DicomStudyPatientSexResponse::_internal_mutable_patient_sex() {
  
  return patient_sex_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* DicomStudyPatientSexResponse::release_patient_sex() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomStudyPatientSexResponse.patient_sex)
  return patient_sex_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void DicomStudyPatientSexResponse::set_allocated_patient_sex(std::string* patient_sex) {
  if (patient_sex != nullptr) {
    
  } else {
    
  }
  patient_sex_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), patient_sex,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomStudyPatientSexResponse.patient_sex)
}

// -------------------------------------------------------------------

// DicomStudyPerformingPhysicianResponse

// .osirixgrpc.Status status = 1;
inline bool DicomStudyPerformingPhysicianResponse::_internal_has_status() const {
  return this != internal_default_instance() && status_ != nullptr;
}
inline bool DicomStudyPerformingPhysicianResponse::has_status() const {
  return _internal_has_status();
}
inline const ::osirixgrpc::Status& DicomStudyPerformingPhysicianResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DicomStudyPerformingPhysicianResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomStudyPerformingPhysicianResponse.status)
  return _internal_status();
}
inline void DicomStudyPerformingPhysicianResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomStudyPerformingPhysicianResponse.status)
}
inline ::osirixgrpc::Status* DicomStudyPerformingPhysicianResponse::release_status() {
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::Status* DicomStudyPerformingPhysicianResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomStudyPerformingPhysicianResponse.status)
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DicomStudyPerformingPhysicianResponse::_internal_mutable_status() {
  
  if (status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    status_ = p;
  }
  return status_;
}
inline ::osirixgrpc::Status* DicomStudyPerformingPhysicianResponse::mutable_status() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomStudyPerformingPhysicianResponse.status)
  return _internal_mutable_status();
}
inline void DicomStudyPerformingPhysicianResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status)->GetArena();
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomStudyPerformingPhysicianResponse.status)
}

// string performing_physician = 2;
inline void DicomStudyPerformingPhysicianResponse::clear_performing_physician() {
  performing_physician_.ClearToEmpty();
}
inline const std::string& DicomStudyPerformingPhysicianResponse::performing_physician() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomStudyPerformingPhysicianResponse.performing_physician)
  return _internal_performing_physician();
}
inline void DicomStudyPerformingPhysicianResponse::set_performing_physician(const std::string& value) {
  _internal_set_performing_physician(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomStudyPerformingPhysicianResponse.performing_physician)
}
inline std::string* DicomStudyPerformingPhysicianResponse::mutable_performing_physician() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomStudyPerformingPhysicianResponse.performing_physician)
  return _internal_mutable_performing_physician();
}
inline const std::string& DicomStudyPerformingPhysicianResponse::_internal_performing_physician() const {
  return performing_physician_.Get();
}
inline void DicomStudyPerformingPhysicianResponse::_internal_set_performing_physician(const std::string& value) {
  
  performing_physician_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void DicomStudyPerformingPhysicianResponse::set_performing_physician(std::string&& value) {
  
  performing_physician_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:osirixgrpc.DicomStudyPerformingPhysicianResponse.performing_physician)
}
inline void DicomStudyPerformingPhysicianResponse::set_performing_physician(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  performing_physician_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:osirixgrpc.DicomStudyPerformingPhysicianResponse.performing_physician)
}
inline void DicomStudyPerformingPhysicianResponse::set_performing_physician(const char* value,
    size_t size) {
  
  performing_physician_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:osirixgrpc.DicomStudyPerformingPhysicianResponse.performing_physician)
}
inline std::string* DicomStudyPerformingPhysicianResponse::_internal_mutable_performing_physician() {
  
  return performing_physician_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* DicomStudyPerformingPhysicianResponse::release_performing_physician() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomStudyPerformingPhysicianResponse.performing_physician)
  return performing_physician_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void DicomStudyPerformingPhysicianResponse::set_allocated_performing_physician(std::string* performing_physician) {
  if (performing_physician != nullptr) {
    
  } else {
    
  }
  performing_physician_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), performing_physician,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomStudyPerformingPhysicianResponse.performing_physician)
}

// -------------------------------------------------------------------

// DicomStudyReferringPhysicianResponse

// .osirixgrpc.Status status = 1;
inline bool DicomStudyReferringPhysicianResponse::_internal_has_status() const {
  return this != internal_default_instance() && status_ != nullptr;
}
inline bool DicomStudyReferringPhysicianResponse::has_status() const {
  return _internal_has_status();
}
inline const ::osirixgrpc::Status& DicomStudyReferringPhysicianResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DicomStudyReferringPhysicianResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomStudyReferringPhysicianResponse.status)
  return _internal_status();
}
inline void DicomStudyReferringPhysicianResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomStudyReferringPhysicianResponse.status)
}
inline ::osirixgrpc::Status* DicomStudyReferringPhysicianResponse::release_status() {
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::Status* DicomStudyReferringPhysicianResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomStudyReferringPhysicianResponse.status)
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DicomStudyReferringPhysicianResponse::_internal_mutable_status() {
  
  if (status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    status_ = p;
  }
  return status_;
}
inline ::osirixgrpc::Status* DicomStudyReferringPhysicianResponse::mutable_status() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomStudyReferringPhysicianResponse.status)
  return _internal_mutable_status();
}
inline void DicomStudyReferringPhysicianResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status)->GetArena();
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomStudyReferringPhysicianResponse.status)
}

// string referring_physician = 2;
inline void DicomStudyReferringPhysicianResponse::clear_referring_physician() {
  referring_physician_.ClearToEmpty();
}
inline const std::string& DicomStudyReferringPhysicianResponse::referring_physician() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomStudyReferringPhysicianResponse.referring_physician)
  return _internal_referring_physician();
}
inline void DicomStudyReferringPhysicianResponse::set_referring_physician(const std::string& value) {
  _internal_set_referring_physician(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomStudyReferringPhysicianResponse.referring_physician)
}
inline std::string* DicomStudyReferringPhysicianResponse::mutable_referring_physician() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomStudyReferringPhysicianResponse.referring_physician)
  return _internal_mutable_referring_physician();
}
inline const std::string& DicomStudyReferringPhysicianResponse::_internal_referring_physician() const {
  return referring_physician_.Get();
}
inline void DicomStudyReferringPhysicianResponse::_internal_set_referring_physician(const std::string& value) {
  
  referring_physician_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void DicomStudyReferringPhysicianResponse::set_referring_physician(std::string&& value) {
  
  referring_physician_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:osirixgrpc.DicomStudyReferringPhysicianResponse.referring_physician)
}
inline void DicomStudyReferringPhysicianResponse::set_referring_physician(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  referring_physician_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:osirixgrpc.DicomStudyReferringPhysicianResponse.referring_physician)
}
inline void DicomStudyReferringPhysicianResponse::set_referring_physician(const char* value,
    size_t size) {
  
  referring_physician_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:osirixgrpc.DicomStudyReferringPhysicianResponse.referring_physician)
}
inline std::string* DicomStudyReferringPhysicianResponse::_internal_mutable_referring_physician() {
  
  return referring_physician_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* DicomStudyReferringPhysicianResponse::release_referring_physician() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomStudyReferringPhysicianResponse.referring_physician)
  return referring_physician_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void DicomStudyReferringPhysicianResponse::set_allocated_referring_physician(std::string* referring_physician) {
  if (referring_physician != nullptr) {
    
  } else {
    
  }
  referring_physician_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), referring_physician,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomStudyReferringPhysicianResponse.referring_physician)
}

// -------------------------------------------------------------------

// DicomStudyStudyInstanceUIDResponse

// .osirixgrpc.Status status = 1;
inline bool DicomStudyStudyInstanceUIDResponse::_internal_has_status() const {
  return this != internal_default_instance() && status_ != nullptr;
}
inline bool DicomStudyStudyInstanceUIDResponse::has_status() const {
  return _internal_has_status();
}
inline const ::osirixgrpc::Status& DicomStudyStudyInstanceUIDResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DicomStudyStudyInstanceUIDResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomStudyStudyInstanceUIDResponse.status)
  return _internal_status();
}
inline void DicomStudyStudyInstanceUIDResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomStudyStudyInstanceUIDResponse.status)
}
inline ::osirixgrpc::Status* DicomStudyStudyInstanceUIDResponse::release_status() {
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::Status* DicomStudyStudyInstanceUIDResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomStudyStudyInstanceUIDResponse.status)
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DicomStudyStudyInstanceUIDResponse::_internal_mutable_status() {
  
  if (status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    status_ = p;
  }
  return status_;
}
inline ::osirixgrpc::Status* DicomStudyStudyInstanceUIDResponse::mutable_status() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomStudyStudyInstanceUIDResponse.status)
  return _internal_mutable_status();
}
inline void DicomStudyStudyInstanceUIDResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status)->GetArena();
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomStudyStudyInstanceUIDResponse.status)
}

// string study_instance_uid = 2;
inline void DicomStudyStudyInstanceUIDResponse::clear_study_instance_uid() {
  study_instance_uid_.ClearToEmpty();
}
inline const std::string& DicomStudyStudyInstanceUIDResponse::study_instance_uid() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomStudyStudyInstanceUIDResponse.study_instance_uid)
  return _internal_study_instance_uid();
}
inline void DicomStudyStudyInstanceUIDResponse::set_study_instance_uid(const std::string& value) {
  _internal_set_study_instance_uid(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomStudyStudyInstanceUIDResponse.study_instance_uid)
}
inline std::string* DicomStudyStudyInstanceUIDResponse::mutable_study_instance_uid() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomStudyStudyInstanceUIDResponse.study_instance_uid)
  return _internal_mutable_study_instance_uid();
}
inline const std::string& DicomStudyStudyInstanceUIDResponse::_internal_study_instance_uid() const {
  return study_instance_uid_.Get();
}
inline void DicomStudyStudyInstanceUIDResponse::_internal_set_study_instance_uid(const std::string& value) {
  
  study_instance_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void DicomStudyStudyInstanceUIDResponse::set_study_instance_uid(std::string&& value) {
  
  study_instance_uid_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:osirixgrpc.DicomStudyStudyInstanceUIDResponse.study_instance_uid)
}
inline void DicomStudyStudyInstanceUIDResponse::set_study_instance_uid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  study_instance_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:osirixgrpc.DicomStudyStudyInstanceUIDResponse.study_instance_uid)
}
inline void DicomStudyStudyInstanceUIDResponse::set_study_instance_uid(const char* value,
    size_t size) {
  
  study_instance_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:osirixgrpc.DicomStudyStudyInstanceUIDResponse.study_instance_uid)
}
inline std::string* DicomStudyStudyInstanceUIDResponse::_internal_mutable_study_instance_uid() {
  
  return study_instance_uid_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* DicomStudyStudyInstanceUIDResponse::release_study_instance_uid() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomStudyStudyInstanceUIDResponse.study_instance_uid)
  return study_instance_uid_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void DicomStudyStudyInstanceUIDResponse::set_allocated_study_instance_uid(std::string* study_instance_uid) {
  if (study_instance_uid != nullptr) {
    
  } else {
    
  }
  study_instance_uid_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), study_instance_uid,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomStudyStudyInstanceUIDResponse.study_instance_uid)
}

// -------------------------------------------------------------------

// DicomStudyStudyNameResponse

// .osirixgrpc.Status status = 1;
inline bool DicomStudyStudyNameResponse::_internal_has_status() const {
  return this != internal_default_instance() && status_ != nullptr;
}
inline bool DicomStudyStudyNameResponse::has_status() const {
  return _internal_has_status();
}
inline const ::osirixgrpc::Status& DicomStudyStudyNameResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DicomStudyStudyNameResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomStudyStudyNameResponse.status)
  return _internal_status();
}
inline void DicomStudyStudyNameResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomStudyStudyNameResponse.status)
}
inline ::osirixgrpc::Status* DicomStudyStudyNameResponse::release_status() {
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::Status* DicomStudyStudyNameResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomStudyStudyNameResponse.status)
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DicomStudyStudyNameResponse::_internal_mutable_status() {
  
  if (status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    status_ = p;
  }
  return status_;
}
inline ::osirixgrpc::Status* DicomStudyStudyNameResponse::mutable_status() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomStudyStudyNameResponse.status)
  return _internal_mutable_status();
}
inline void DicomStudyStudyNameResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status)->GetArena();
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomStudyStudyNameResponse.status)
}

// string study_name = 2;
inline void DicomStudyStudyNameResponse::clear_study_name() {
  study_name_.ClearToEmpty();
}
inline const std::string& DicomStudyStudyNameResponse::study_name() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomStudyStudyNameResponse.study_name)
  return _internal_study_name();
}
inline void DicomStudyStudyNameResponse::set_study_name(const std::string& value) {
  _internal_set_study_name(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomStudyStudyNameResponse.study_name)
}
inline std::string* DicomStudyStudyNameResponse::mutable_study_name() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomStudyStudyNameResponse.study_name)
  return _internal_mutable_study_name();
}
inline const std::string& DicomStudyStudyNameResponse::_internal_study_name() const {
  return study_name_.Get();
}
inline void DicomStudyStudyNameResponse::_internal_set_study_name(const std::string& value) {
  
  study_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void DicomStudyStudyNameResponse::set_study_name(std::string&& value) {
  
  study_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:osirixgrpc.DicomStudyStudyNameResponse.study_name)
}
inline void DicomStudyStudyNameResponse::set_study_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  study_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:osirixgrpc.DicomStudyStudyNameResponse.study_name)
}
inline void DicomStudyStudyNameResponse::set_study_name(const char* value,
    size_t size) {
  
  study_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:osirixgrpc.DicomStudyStudyNameResponse.study_name)
}
inline std::string* DicomStudyStudyNameResponse::_internal_mutable_study_name() {
  
  return study_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* DicomStudyStudyNameResponse::release_study_name() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomStudyStudyNameResponse.study_name)
  return study_name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void DicomStudyStudyNameResponse::set_allocated_study_name(std::string* study_name) {
  if (study_name != nullptr) {
    
  } else {
    
  }
  study_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), study_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomStudyStudyNameResponse.study_name)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace osirixgrpc

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_dicomstudy_2eproto
