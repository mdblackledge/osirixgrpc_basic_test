// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dicomseries.proto

#include "dicomseries.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_types_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DicomImage_types_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_types_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DicomSeries_types_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_types_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DicomStudy_types_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_utilities_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Status_utilities_2eproto;
namespace osirixgrpc {
class DicomSeriesPathsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DicomSeriesPathsResponse> _instance;
} _DicomSeriesPathsResponse_default_instance_;
class DicomSeriesPreviousSeriesResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DicomSeriesPreviousSeriesResponse> _instance;
} _DicomSeriesPreviousSeriesResponse_default_instance_;
class DicomSeriesNextSeriesResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DicomSeriesNextSeriesResponse> _instance;
} _DicomSeriesNextSeriesResponse_default_instance_;
class DicomSeriesSortedImagesResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DicomSeriesSortedImagesResponse> _instance;
} _DicomSeriesSortedImagesResponse_default_instance_;
class DicomSeriesStudyResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DicomSeriesStudyResponse> _instance;
} _DicomSeriesStudyResponse_default_instance_;
class DicomSeriesImagesResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DicomSeriesImagesResponse> _instance;
} _DicomSeriesImagesResponse_default_instance_;
class DicomSeriesSeriesInstanceUIDResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DicomSeriesSeriesInstanceUIDResponse> _instance;
} _DicomSeriesSeriesInstanceUIDResponse_default_instance_;
class DicomSeriesSeriesSOPClassUIDResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DicomSeriesSeriesSOPClassUIDResponse> _instance;
} _DicomSeriesSeriesSOPClassUIDResponse_default_instance_;
class DicomSeriesSeriesDescriptionResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DicomSeriesSeriesDescriptionResponse> _instance;
} _DicomSeriesSeriesDescriptionResponse_default_instance_;
class DicomSeriesModalityResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DicomSeriesModalityResponse> _instance;
} _DicomSeriesModalityResponse_default_instance_;
class DicomSeriesNameResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DicomSeriesNameResponse> _instance;
} _DicomSeriesNameResponse_default_instance_;
class DicomSeriesNumberOfImagesResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DicomSeriesNumberOfImagesResponse> _instance;
} _DicomSeriesNumberOfImagesResponse_default_instance_;
class DicomSeriesDateResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DicomSeriesDateResponse> _instance;
} _DicomSeriesDateResponse_default_instance_;
}  // namespace osirixgrpc
static void InitDefaultsscc_info_DicomSeriesDateResponse_dicomseries_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_DicomSeriesDateResponse_default_instance_;
    new (ptr) ::osirixgrpc::DicomSeriesDateResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DicomSeriesDateResponse_dicomseries_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DicomSeriesDateResponse_dicomseries_2eproto}, {
      &scc_info_Status_utilities_2eproto.base,}};

static void InitDefaultsscc_info_DicomSeriesImagesResponse_dicomseries_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_DicomSeriesImagesResponse_default_instance_;
    new (ptr) ::osirixgrpc::DicomSeriesImagesResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_DicomSeriesImagesResponse_dicomseries_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_DicomSeriesImagesResponse_dicomseries_2eproto}, {
      &scc_info_Status_utilities_2eproto.base,
      &scc_info_DicomImage_types_2eproto.base,}};

static void InitDefaultsscc_info_DicomSeriesModalityResponse_dicomseries_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_DicomSeriesModalityResponse_default_instance_;
    new (ptr) ::osirixgrpc::DicomSeriesModalityResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DicomSeriesModalityResponse_dicomseries_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DicomSeriesModalityResponse_dicomseries_2eproto}, {
      &scc_info_Status_utilities_2eproto.base,}};

static void InitDefaultsscc_info_DicomSeriesNameResponse_dicomseries_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_DicomSeriesNameResponse_default_instance_;
    new (ptr) ::osirixgrpc::DicomSeriesNameResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DicomSeriesNameResponse_dicomseries_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DicomSeriesNameResponse_dicomseries_2eproto}, {
      &scc_info_Status_utilities_2eproto.base,}};

static void InitDefaultsscc_info_DicomSeriesNextSeriesResponse_dicomseries_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_DicomSeriesNextSeriesResponse_default_instance_;
    new (ptr) ::osirixgrpc::DicomSeriesNextSeriesResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_DicomSeriesNextSeriesResponse_dicomseries_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_DicomSeriesNextSeriesResponse_dicomseries_2eproto}, {
      &scc_info_Status_utilities_2eproto.base,
      &scc_info_DicomSeries_types_2eproto.base,}};

static void InitDefaultsscc_info_DicomSeriesNumberOfImagesResponse_dicomseries_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_DicomSeriesNumberOfImagesResponse_default_instance_;
    new (ptr) ::osirixgrpc::DicomSeriesNumberOfImagesResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DicomSeriesNumberOfImagesResponse_dicomseries_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DicomSeriesNumberOfImagesResponse_dicomseries_2eproto}, {
      &scc_info_Status_utilities_2eproto.base,}};

static void InitDefaultsscc_info_DicomSeriesPathsResponse_dicomseries_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_DicomSeriesPathsResponse_default_instance_;
    new (ptr) ::osirixgrpc::DicomSeriesPathsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DicomSeriesPathsResponse_dicomseries_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DicomSeriesPathsResponse_dicomseries_2eproto}, {
      &scc_info_Status_utilities_2eproto.base,}};

static void InitDefaultsscc_info_DicomSeriesPreviousSeriesResponse_dicomseries_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_DicomSeriesPreviousSeriesResponse_default_instance_;
    new (ptr) ::osirixgrpc::DicomSeriesPreviousSeriesResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_DicomSeriesPreviousSeriesResponse_dicomseries_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_DicomSeriesPreviousSeriesResponse_dicomseries_2eproto}, {
      &scc_info_Status_utilities_2eproto.base,
      &scc_info_DicomSeries_types_2eproto.base,}};

static void InitDefaultsscc_info_DicomSeriesSeriesDescriptionResponse_dicomseries_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_DicomSeriesSeriesDescriptionResponse_default_instance_;
    new (ptr) ::osirixgrpc::DicomSeriesSeriesDescriptionResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DicomSeriesSeriesDescriptionResponse_dicomseries_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DicomSeriesSeriesDescriptionResponse_dicomseries_2eproto}, {
      &scc_info_Status_utilities_2eproto.base,}};

static void InitDefaultsscc_info_DicomSeriesSeriesInstanceUIDResponse_dicomseries_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_DicomSeriesSeriesInstanceUIDResponse_default_instance_;
    new (ptr) ::osirixgrpc::DicomSeriesSeriesInstanceUIDResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DicomSeriesSeriesInstanceUIDResponse_dicomseries_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DicomSeriesSeriesInstanceUIDResponse_dicomseries_2eproto}, {
      &scc_info_Status_utilities_2eproto.base,}};

static void InitDefaultsscc_info_DicomSeriesSeriesSOPClassUIDResponse_dicomseries_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_DicomSeriesSeriesSOPClassUIDResponse_default_instance_;
    new (ptr) ::osirixgrpc::DicomSeriesSeriesSOPClassUIDResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DicomSeriesSeriesSOPClassUIDResponse_dicomseries_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DicomSeriesSeriesSOPClassUIDResponse_dicomseries_2eproto}, {
      &scc_info_Status_utilities_2eproto.base,}};

static void InitDefaultsscc_info_DicomSeriesSortedImagesResponse_dicomseries_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_DicomSeriesSortedImagesResponse_default_instance_;
    new (ptr) ::osirixgrpc::DicomSeriesSortedImagesResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_DicomSeriesSortedImagesResponse_dicomseries_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_DicomSeriesSortedImagesResponse_dicomseries_2eproto}, {
      &scc_info_Status_utilities_2eproto.base,
      &scc_info_DicomImage_types_2eproto.base,}};

static void InitDefaultsscc_info_DicomSeriesStudyResponse_dicomseries_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_DicomSeriesStudyResponse_default_instance_;
    new (ptr) ::osirixgrpc::DicomSeriesStudyResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_DicomSeriesStudyResponse_dicomseries_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_DicomSeriesStudyResponse_dicomseries_2eproto}, {
      &scc_info_Status_utilities_2eproto.base,
      &scc_info_DicomStudy_types_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_dicomseries_2eproto[13];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_dicomseries_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_dicomseries_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_dicomseries_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesPathsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesPathsResponse, status_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesPathsResponse, paths_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesPreviousSeriesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesPreviousSeriesResponse, status_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesPreviousSeriesResponse, previous_series_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesNextSeriesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesNextSeriesResponse, status_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesNextSeriesResponse, next_series_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesSortedImagesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesSortedImagesResponse, status_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesSortedImagesResponse, sorted_images_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesStudyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesStudyResponse, status_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesStudyResponse, study_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesImagesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesImagesResponse, status_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesImagesResponse, images_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesSeriesInstanceUIDResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesSeriesInstanceUIDResponse, status_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesSeriesInstanceUIDResponse, series_instance_uid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesSeriesSOPClassUIDResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesSeriesSOPClassUIDResponse, status_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesSeriesSOPClassUIDResponse, series_sop_class_uid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesSeriesDescriptionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesSeriesDescriptionResponse, status_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesSeriesDescriptionResponse, series_description_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesModalityResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesModalityResponse, status_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesModalityResponse, modality_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesNameResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesNameResponse, status_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesNameResponse, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesNumberOfImagesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesNumberOfImagesResponse, status_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesNumberOfImagesResponse, number_of_images_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesDateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesDateResponse, status_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesDateResponse, year_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesDateResponse, month_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesDateResponse, day_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesDateResponse, hour_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesDateResponse, minute_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesDateResponse, second_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::DicomSeriesDateResponse, millisecond_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::osirixgrpc::DicomSeriesPathsResponse)},
  { 7, -1, sizeof(::osirixgrpc::DicomSeriesPreviousSeriesResponse)},
  { 14, -1, sizeof(::osirixgrpc::DicomSeriesNextSeriesResponse)},
  { 21, -1, sizeof(::osirixgrpc::DicomSeriesSortedImagesResponse)},
  { 28, -1, sizeof(::osirixgrpc::DicomSeriesStudyResponse)},
  { 35, -1, sizeof(::osirixgrpc::DicomSeriesImagesResponse)},
  { 42, -1, sizeof(::osirixgrpc::DicomSeriesSeriesInstanceUIDResponse)},
  { 49, -1, sizeof(::osirixgrpc::DicomSeriesSeriesSOPClassUIDResponse)},
  { 56, -1, sizeof(::osirixgrpc::DicomSeriesSeriesDescriptionResponse)},
  { 63, -1, sizeof(::osirixgrpc::DicomSeriesModalityResponse)},
  { 70, -1, sizeof(::osirixgrpc::DicomSeriesNameResponse)},
  { 77, -1, sizeof(::osirixgrpc::DicomSeriesNumberOfImagesResponse)},
  { 84, -1, sizeof(::osirixgrpc::DicomSeriesDateResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_DicomSeriesPathsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_DicomSeriesPreviousSeriesResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_DicomSeriesNextSeriesResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_DicomSeriesSortedImagesResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_DicomSeriesStudyResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_DicomSeriesImagesResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_DicomSeriesSeriesInstanceUIDResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_DicomSeriesSeriesSOPClassUIDResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_DicomSeriesSeriesDescriptionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_DicomSeriesModalityResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_DicomSeriesNameResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_DicomSeriesNumberOfImagesResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_DicomSeriesDateResponse_default_instance_),
};

const char descriptor_table_protodef_dicomseries_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\021dicomseries.proto\022\nosirixgrpc\032\017utiliti"
  "es.proto\032\013types.proto\"M\n\030DicomSeriesPath"
  "sResponse\022\"\n\006status\030\001 \001(\0132\022.osirixgrpc.S"
  "tatus\022\r\n\005paths\030\002 \003(\t\"y\n!DicomSeriesPrevi"
  "ousSeriesResponse\022\"\n\006status\030\001 \001(\0132\022.osir"
  "ixgrpc.Status\0220\n\017previous_series\030\002 \001(\0132\027"
  ".osirixgrpc.DicomSeries\"q\n\035DicomSeriesNe"
  "xtSeriesResponse\022\"\n\006status\030\001 \001(\0132\022.osiri"
  "xgrpc.Status\022,\n\013next_series\030\002 \001(\0132\027.osir"
  "ixgrpc.DicomSeries\"t\n\037DicomSeriesSortedI"
  "magesResponse\022\"\n\006status\030\001 \001(\0132\022.osirixgr"
  "pc.Status\022-\n\rsorted_images\030\002 \003(\0132\026.osiri"
  "xgrpc.DicomImage\"e\n\030DicomSeriesStudyResp"
  "onse\022\"\n\006status\030\001 \001(\0132\022.osirixgrpc.Status"
  "\022%\n\005study\030\002 \001(\0132\026.osirixgrpc.DicomStudy\""
  "g\n\031DicomSeriesImagesResponse\022\"\n\006status\030\001"
  " \001(\0132\022.osirixgrpc.Status\022&\n\006images\030\002 \003(\013"
  "2\026.osirixgrpc.DicomImage\"g\n$DicomSeriesS"
  "eriesInstanceUIDResponse\022\"\n\006status\030\001 \001(\013"
  "2\022.osirixgrpc.Status\022\033\n\023series_instance_"
  "uid\030\002 \001(\t\"h\n$DicomSeriesSeriesSOPClassUI"
  "DResponse\022\"\n\006status\030\001 \001(\0132\022.osirixgrpc.S"
  "tatus\022\034\n\024series_sop_class_uid\030\002 \001(\t\"f\n$D"
  "icomSeriesSeriesDescriptionResponse\022\"\n\006s"
  "tatus\030\001 \001(\0132\022.osirixgrpc.Status\022\032\n\022serie"
  "s_description\030\002 \001(\t\"S\n\033DicomSeriesModali"
  "tyResponse\022\"\n\006status\030\001 \001(\0132\022.osirixgrpc."
  "Status\022\020\n\010modality\030\002 \001(\t\"K\n\027DicomSeriesN"
  "ameResponse\022\"\n\006status\030\001 \001(\0132\022.osirixgrpc"
  ".Status\022\014\n\004name\030\002 \001(\t\"a\n!DicomSeriesNumb"
  "erOfImagesResponse\022\"\n\006status\030\001 \001(\0132\022.osi"
  "rixgrpc.Status\022\030\n\020number_of_images\030\002 \001(\005"
  "\"\252\001\n\027DicomSeriesDateResponse\022\"\n\006status\030\001"
  " \001(\0132\022.osirixgrpc.Status\022\014\n\004year\030\002 \001(\005\022\r"
  "\n\005month\030\003 \001(\005\022\013\n\003day\030\004 \001(\005\022\014\n\004hour\030\005 \001(\005"
  "\022\016\n\006minute\030\006 \001(\005\022\016\n\006second\030\007 \001(\005\022\023\n\013mill"
  "isecond\030\010 \001(\005b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_dicomseries_2eproto_deps[2] = {
  &::descriptor_table_types_2eproto,
  &::descriptor_table_utilities_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_dicomseries_2eproto_sccs[13] = {
  &scc_info_DicomSeriesDateResponse_dicomseries_2eproto.base,
  &scc_info_DicomSeriesImagesResponse_dicomseries_2eproto.base,
  &scc_info_DicomSeriesModalityResponse_dicomseries_2eproto.base,
  &scc_info_DicomSeriesNameResponse_dicomseries_2eproto.base,
  &scc_info_DicomSeriesNextSeriesResponse_dicomseries_2eproto.base,
  &scc_info_DicomSeriesNumberOfImagesResponse_dicomseries_2eproto.base,
  &scc_info_DicomSeriesPathsResponse_dicomseries_2eproto.base,
  &scc_info_DicomSeriesPreviousSeriesResponse_dicomseries_2eproto.base,
  &scc_info_DicomSeriesSeriesDescriptionResponse_dicomseries_2eproto.base,
  &scc_info_DicomSeriesSeriesInstanceUIDResponse_dicomseries_2eproto.base,
  &scc_info_DicomSeriesSeriesSOPClassUIDResponse_dicomseries_2eproto.base,
  &scc_info_DicomSeriesSortedImagesResponse_dicomseries_2eproto.base,
  &scc_info_DicomSeriesStudyResponse_dicomseries_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_dicomseries_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_dicomseries_2eproto = {
  false, false, descriptor_table_protodef_dicomseries_2eproto, "dicomseries.proto", 1461,
  &descriptor_table_dicomseries_2eproto_once, descriptor_table_dicomseries_2eproto_sccs, descriptor_table_dicomseries_2eproto_deps, 13, 2,
  schemas, file_default_instances, TableStruct_dicomseries_2eproto::offsets,
  file_level_metadata_dicomseries_2eproto, 13, file_level_enum_descriptors_dicomseries_2eproto, file_level_service_descriptors_dicomseries_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_dicomseries_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_dicomseries_2eproto)), true);
namespace osirixgrpc {

// ===================================================================

class DicomSeriesPathsResponse::_Internal {
 public:
  static const ::osirixgrpc::Status& status(const DicomSeriesPathsResponse* msg);
};

const ::osirixgrpc::Status&
DicomSeriesPathsResponse::_Internal::status(const DicomSeriesPathsResponse* msg) {
  return *msg->status_;
}
void DicomSeriesPathsResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
DicomSeriesPathsResponse::DicomSeriesPathsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  paths_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.DicomSeriesPathsResponse)
}
DicomSeriesPathsResponse::DicomSeriesPathsResponse(const DicomSeriesPathsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      paths_(from.paths_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::osirixgrpc::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.DicomSeriesPathsResponse)
}

void DicomSeriesPathsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DicomSeriesPathsResponse_dicomseries_2eproto.base);
  status_ = nullptr;
}

DicomSeriesPathsResponse::~DicomSeriesPathsResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.DicomSeriesPathsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DicomSeriesPathsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void DicomSeriesPathsResponse::ArenaDtor(void* object) {
  DicomSeriesPathsResponse* _this = reinterpret_cast< DicomSeriesPathsResponse* >(object);
  (void)_this;
}
void DicomSeriesPathsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DicomSeriesPathsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DicomSeriesPathsResponse& DicomSeriesPathsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DicomSeriesPathsResponse_dicomseries_2eproto.base);
  return *internal_default_instance();
}


void DicomSeriesPathsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.DicomSeriesPathsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  paths_.Clear();
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DicomSeriesPathsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string paths = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_paths();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "osirixgrpc.DicomSeriesPathsResponse.paths"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DicomSeriesPathsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.DicomSeriesPathsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // repeated string paths = 2;
  for (int i = 0, n = this->_internal_paths_size(); i < n; i++) {
    const auto& s = this->_internal_paths(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "osirixgrpc.DicomSeriesPathsResponse.paths");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.DicomSeriesPathsResponse)
  return target;
}

size_t DicomSeriesPathsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.DicomSeriesPathsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string paths = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(paths_.size());
  for (int i = 0, n = paths_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      paths_.Get(i));
  }

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DicomSeriesPathsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.DicomSeriesPathsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DicomSeriesPathsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DicomSeriesPathsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.DicomSeriesPathsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.DicomSeriesPathsResponse)
    MergeFrom(*source);
  }
}

void DicomSeriesPathsResponse::MergeFrom(const DicomSeriesPathsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.DicomSeriesPathsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  paths_.MergeFrom(from.paths_);
  if (from.has_status()) {
    _internal_mutable_status()->::osirixgrpc::Status::MergeFrom(from._internal_status());
  }
}

void DicomSeriesPathsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.DicomSeriesPathsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DicomSeriesPathsResponse::CopyFrom(const DicomSeriesPathsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.DicomSeriesPathsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DicomSeriesPathsResponse::IsInitialized() const {
  return true;
}

void DicomSeriesPathsResponse::InternalSwap(DicomSeriesPathsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  paths_.InternalSwap(&other->paths_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DicomSeriesPathsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DicomSeriesPreviousSeriesResponse::_Internal {
 public:
  static const ::osirixgrpc::Status& status(const DicomSeriesPreviousSeriesResponse* msg);
  static const ::osirixgrpc::DicomSeries& previous_series(const DicomSeriesPreviousSeriesResponse* msg);
};

const ::osirixgrpc::Status&
DicomSeriesPreviousSeriesResponse::_Internal::status(const DicomSeriesPreviousSeriesResponse* msg) {
  return *msg->status_;
}
const ::osirixgrpc::DicomSeries&
DicomSeriesPreviousSeriesResponse::_Internal::previous_series(const DicomSeriesPreviousSeriesResponse* msg) {
  return *msg->previous_series_;
}
void DicomSeriesPreviousSeriesResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
void DicomSeriesPreviousSeriesResponse::clear_previous_series() {
  if (GetArena() == nullptr && previous_series_ != nullptr) {
    delete previous_series_;
  }
  previous_series_ = nullptr;
}
DicomSeriesPreviousSeriesResponse::DicomSeriesPreviousSeriesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.DicomSeriesPreviousSeriesResponse)
}
DicomSeriesPreviousSeriesResponse::DicomSeriesPreviousSeriesResponse(const DicomSeriesPreviousSeriesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::osirixgrpc::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  if (from._internal_has_previous_series()) {
    previous_series_ = new ::osirixgrpc::DicomSeries(*from.previous_series_);
  } else {
    previous_series_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.DicomSeriesPreviousSeriesResponse)
}

void DicomSeriesPreviousSeriesResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DicomSeriesPreviousSeriesResponse_dicomseries_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&previous_series_) -
      reinterpret_cast<char*>(&status_)) + sizeof(previous_series_));
}

DicomSeriesPreviousSeriesResponse::~DicomSeriesPreviousSeriesResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.DicomSeriesPreviousSeriesResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DicomSeriesPreviousSeriesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete previous_series_;
}

void DicomSeriesPreviousSeriesResponse::ArenaDtor(void* object) {
  DicomSeriesPreviousSeriesResponse* _this = reinterpret_cast< DicomSeriesPreviousSeriesResponse* >(object);
  (void)_this;
}
void DicomSeriesPreviousSeriesResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DicomSeriesPreviousSeriesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DicomSeriesPreviousSeriesResponse& DicomSeriesPreviousSeriesResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DicomSeriesPreviousSeriesResponse_dicomseries_2eproto.base);
  return *internal_default_instance();
}


void DicomSeriesPreviousSeriesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.DicomSeriesPreviousSeriesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  if (GetArena() == nullptr && previous_series_ != nullptr) {
    delete previous_series_;
  }
  previous_series_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DicomSeriesPreviousSeriesResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .osirixgrpc.DicomSeries previous_series = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_previous_series(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DicomSeriesPreviousSeriesResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.DicomSeriesPreviousSeriesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // .osirixgrpc.DicomSeries previous_series = 2;
  if (this->has_previous_series()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::previous_series(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.DicomSeriesPreviousSeriesResponse)
  return target;
}

size_t DicomSeriesPreviousSeriesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.DicomSeriesPreviousSeriesResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .osirixgrpc.DicomSeries previous_series = 2;
  if (this->has_previous_series()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *previous_series_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DicomSeriesPreviousSeriesResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.DicomSeriesPreviousSeriesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DicomSeriesPreviousSeriesResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DicomSeriesPreviousSeriesResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.DicomSeriesPreviousSeriesResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.DicomSeriesPreviousSeriesResponse)
    MergeFrom(*source);
  }
}

void DicomSeriesPreviousSeriesResponse::MergeFrom(const DicomSeriesPreviousSeriesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.DicomSeriesPreviousSeriesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::osirixgrpc::Status::MergeFrom(from._internal_status());
  }
  if (from.has_previous_series()) {
    _internal_mutable_previous_series()->::osirixgrpc::DicomSeries::MergeFrom(from._internal_previous_series());
  }
}

void DicomSeriesPreviousSeriesResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.DicomSeriesPreviousSeriesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DicomSeriesPreviousSeriesResponse::CopyFrom(const DicomSeriesPreviousSeriesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.DicomSeriesPreviousSeriesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DicomSeriesPreviousSeriesResponse::IsInitialized() const {
  return true;
}

void DicomSeriesPreviousSeriesResponse::InternalSwap(DicomSeriesPreviousSeriesResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DicomSeriesPreviousSeriesResponse, previous_series_)
      + sizeof(DicomSeriesPreviousSeriesResponse::previous_series_)
      - PROTOBUF_FIELD_OFFSET(DicomSeriesPreviousSeriesResponse, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DicomSeriesPreviousSeriesResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DicomSeriesNextSeriesResponse::_Internal {
 public:
  static const ::osirixgrpc::Status& status(const DicomSeriesNextSeriesResponse* msg);
  static const ::osirixgrpc::DicomSeries& next_series(const DicomSeriesNextSeriesResponse* msg);
};

const ::osirixgrpc::Status&
DicomSeriesNextSeriesResponse::_Internal::status(const DicomSeriesNextSeriesResponse* msg) {
  return *msg->status_;
}
const ::osirixgrpc::DicomSeries&
DicomSeriesNextSeriesResponse::_Internal::next_series(const DicomSeriesNextSeriesResponse* msg) {
  return *msg->next_series_;
}
void DicomSeriesNextSeriesResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
void DicomSeriesNextSeriesResponse::clear_next_series() {
  if (GetArena() == nullptr && next_series_ != nullptr) {
    delete next_series_;
  }
  next_series_ = nullptr;
}
DicomSeriesNextSeriesResponse::DicomSeriesNextSeriesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.DicomSeriesNextSeriesResponse)
}
DicomSeriesNextSeriesResponse::DicomSeriesNextSeriesResponse(const DicomSeriesNextSeriesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::osirixgrpc::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  if (from._internal_has_next_series()) {
    next_series_ = new ::osirixgrpc::DicomSeries(*from.next_series_);
  } else {
    next_series_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.DicomSeriesNextSeriesResponse)
}

void DicomSeriesNextSeriesResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DicomSeriesNextSeriesResponse_dicomseries_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&next_series_) -
      reinterpret_cast<char*>(&status_)) + sizeof(next_series_));
}

DicomSeriesNextSeriesResponse::~DicomSeriesNextSeriesResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.DicomSeriesNextSeriesResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DicomSeriesNextSeriesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete next_series_;
}

void DicomSeriesNextSeriesResponse::ArenaDtor(void* object) {
  DicomSeriesNextSeriesResponse* _this = reinterpret_cast< DicomSeriesNextSeriesResponse* >(object);
  (void)_this;
}
void DicomSeriesNextSeriesResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DicomSeriesNextSeriesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DicomSeriesNextSeriesResponse& DicomSeriesNextSeriesResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DicomSeriesNextSeriesResponse_dicomseries_2eproto.base);
  return *internal_default_instance();
}


void DicomSeriesNextSeriesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.DicomSeriesNextSeriesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  if (GetArena() == nullptr && next_series_ != nullptr) {
    delete next_series_;
  }
  next_series_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DicomSeriesNextSeriesResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .osirixgrpc.DicomSeries next_series = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_next_series(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DicomSeriesNextSeriesResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.DicomSeriesNextSeriesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // .osirixgrpc.DicomSeries next_series = 2;
  if (this->has_next_series()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::next_series(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.DicomSeriesNextSeriesResponse)
  return target;
}

size_t DicomSeriesNextSeriesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.DicomSeriesNextSeriesResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .osirixgrpc.DicomSeries next_series = 2;
  if (this->has_next_series()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *next_series_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DicomSeriesNextSeriesResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.DicomSeriesNextSeriesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DicomSeriesNextSeriesResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DicomSeriesNextSeriesResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.DicomSeriesNextSeriesResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.DicomSeriesNextSeriesResponse)
    MergeFrom(*source);
  }
}

void DicomSeriesNextSeriesResponse::MergeFrom(const DicomSeriesNextSeriesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.DicomSeriesNextSeriesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::osirixgrpc::Status::MergeFrom(from._internal_status());
  }
  if (from.has_next_series()) {
    _internal_mutable_next_series()->::osirixgrpc::DicomSeries::MergeFrom(from._internal_next_series());
  }
}

void DicomSeriesNextSeriesResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.DicomSeriesNextSeriesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DicomSeriesNextSeriesResponse::CopyFrom(const DicomSeriesNextSeriesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.DicomSeriesNextSeriesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DicomSeriesNextSeriesResponse::IsInitialized() const {
  return true;
}

void DicomSeriesNextSeriesResponse::InternalSwap(DicomSeriesNextSeriesResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DicomSeriesNextSeriesResponse, next_series_)
      + sizeof(DicomSeriesNextSeriesResponse::next_series_)
      - PROTOBUF_FIELD_OFFSET(DicomSeriesNextSeriesResponse, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DicomSeriesNextSeriesResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DicomSeriesSortedImagesResponse::_Internal {
 public:
  static const ::osirixgrpc::Status& status(const DicomSeriesSortedImagesResponse* msg);
};

const ::osirixgrpc::Status&
DicomSeriesSortedImagesResponse::_Internal::status(const DicomSeriesSortedImagesResponse* msg) {
  return *msg->status_;
}
void DicomSeriesSortedImagesResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
void DicomSeriesSortedImagesResponse::clear_sorted_images() {
  sorted_images_.Clear();
}
DicomSeriesSortedImagesResponse::DicomSeriesSortedImagesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  sorted_images_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.DicomSeriesSortedImagesResponse)
}
DicomSeriesSortedImagesResponse::DicomSeriesSortedImagesResponse(const DicomSeriesSortedImagesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      sorted_images_(from.sorted_images_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::osirixgrpc::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.DicomSeriesSortedImagesResponse)
}

void DicomSeriesSortedImagesResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DicomSeriesSortedImagesResponse_dicomseries_2eproto.base);
  status_ = nullptr;
}

DicomSeriesSortedImagesResponse::~DicomSeriesSortedImagesResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.DicomSeriesSortedImagesResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DicomSeriesSortedImagesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void DicomSeriesSortedImagesResponse::ArenaDtor(void* object) {
  DicomSeriesSortedImagesResponse* _this = reinterpret_cast< DicomSeriesSortedImagesResponse* >(object);
  (void)_this;
}
void DicomSeriesSortedImagesResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DicomSeriesSortedImagesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DicomSeriesSortedImagesResponse& DicomSeriesSortedImagesResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DicomSeriesSortedImagesResponse_dicomseries_2eproto.base);
  return *internal_default_instance();
}


void DicomSeriesSortedImagesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.DicomSeriesSortedImagesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sorted_images_.Clear();
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DicomSeriesSortedImagesResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .osirixgrpc.DicomImage sorted_images = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_sorted_images(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DicomSeriesSortedImagesResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.DicomSeriesSortedImagesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // repeated .osirixgrpc.DicomImage sorted_images = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_sorted_images_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_sorted_images(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.DicomSeriesSortedImagesResponse)
  return target;
}

size_t DicomSeriesSortedImagesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.DicomSeriesSortedImagesResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .osirixgrpc.DicomImage sorted_images = 2;
  total_size += 1UL * this->_internal_sorted_images_size();
  for (const auto& msg : this->sorted_images_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DicomSeriesSortedImagesResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.DicomSeriesSortedImagesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DicomSeriesSortedImagesResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DicomSeriesSortedImagesResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.DicomSeriesSortedImagesResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.DicomSeriesSortedImagesResponse)
    MergeFrom(*source);
  }
}

void DicomSeriesSortedImagesResponse::MergeFrom(const DicomSeriesSortedImagesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.DicomSeriesSortedImagesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sorted_images_.MergeFrom(from.sorted_images_);
  if (from.has_status()) {
    _internal_mutable_status()->::osirixgrpc::Status::MergeFrom(from._internal_status());
  }
}

void DicomSeriesSortedImagesResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.DicomSeriesSortedImagesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DicomSeriesSortedImagesResponse::CopyFrom(const DicomSeriesSortedImagesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.DicomSeriesSortedImagesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DicomSeriesSortedImagesResponse::IsInitialized() const {
  return true;
}

void DicomSeriesSortedImagesResponse::InternalSwap(DicomSeriesSortedImagesResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  sorted_images_.InternalSwap(&other->sorted_images_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DicomSeriesSortedImagesResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DicomSeriesStudyResponse::_Internal {
 public:
  static const ::osirixgrpc::Status& status(const DicomSeriesStudyResponse* msg);
  static const ::osirixgrpc::DicomStudy& study(const DicomSeriesStudyResponse* msg);
};

const ::osirixgrpc::Status&
DicomSeriesStudyResponse::_Internal::status(const DicomSeriesStudyResponse* msg) {
  return *msg->status_;
}
const ::osirixgrpc::DicomStudy&
DicomSeriesStudyResponse::_Internal::study(const DicomSeriesStudyResponse* msg) {
  return *msg->study_;
}
void DicomSeriesStudyResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
void DicomSeriesStudyResponse::clear_study() {
  if (GetArena() == nullptr && study_ != nullptr) {
    delete study_;
  }
  study_ = nullptr;
}
DicomSeriesStudyResponse::DicomSeriesStudyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.DicomSeriesStudyResponse)
}
DicomSeriesStudyResponse::DicomSeriesStudyResponse(const DicomSeriesStudyResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::osirixgrpc::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  if (from._internal_has_study()) {
    study_ = new ::osirixgrpc::DicomStudy(*from.study_);
  } else {
    study_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.DicomSeriesStudyResponse)
}

void DicomSeriesStudyResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DicomSeriesStudyResponse_dicomseries_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&study_) -
      reinterpret_cast<char*>(&status_)) + sizeof(study_));
}

DicomSeriesStudyResponse::~DicomSeriesStudyResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.DicomSeriesStudyResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DicomSeriesStudyResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete study_;
}

void DicomSeriesStudyResponse::ArenaDtor(void* object) {
  DicomSeriesStudyResponse* _this = reinterpret_cast< DicomSeriesStudyResponse* >(object);
  (void)_this;
}
void DicomSeriesStudyResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DicomSeriesStudyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DicomSeriesStudyResponse& DicomSeriesStudyResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DicomSeriesStudyResponse_dicomseries_2eproto.base);
  return *internal_default_instance();
}


void DicomSeriesStudyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.DicomSeriesStudyResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  if (GetArena() == nullptr && study_ != nullptr) {
    delete study_;
  }
  study_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DicomSeriesStudyResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .osirixgrpc.DicomStudy study = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_study(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DicomSeriesStudyResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.DicomSeriesStudyResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // .osirixgrpc.DicomStudy study = 2;
  if (this->has_study()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::study(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.DicomSeriesStudyResponse)
  return target;
}

size_t DicomSeriesStudyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.DicomSeriesStudyResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .osirixgrpc.DicomStudy study = 2;
  if (this->has_study()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *study_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DicomSeriesStudyResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.DicomSeriesStudyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DicomSeriesStudyResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DicomSeriesStudyResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.DicomSeriesStudyResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.DicomSeriesStudyResponse)
    MergeFrom(*source);
  }
}

void DicomSeriesStudyResponse::MergeFrom(const DicomSeriesStudyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.DicomSeriesStudyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::osirixgrpc::Status::MergeFrom(from._internal_status());
  }
  if (from.has_study()) {
    _internal_mutable_study()->::osirixgrpc::DicomStudy::MergeFrom(from._internal_study());
  }
}

void DicomSeriesStudyResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.DicomSeriesStudyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DicomSeriesStudyResponse::CopyFrom(const DicomSeriesStudyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.DicomSeriesStudyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DicomSeriesStudyResponse::IsInitialized() const {
  return true;
}

void DicomSeriesStudyResponse::InternalSwap(DicomSeriesStudyResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DicomSeriesStudyResponse, study_)
      + sizeof(DicomSeriesStudyResponse::study_)
      - PROTOBUF_FIELD_OFFSET(DicomSeriesStudyResponse, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DicomSeriesStudyResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DicomSeriesImagesResponse::_Internal {
 public:
  static const ::osirixgrpc::Status& status(const DicomSeriesImagesResponse* msg);
};

const ::osirixgrpc::Status&
DicomSeriesImagesResponse::_Internal::status(const DicomSeriesImagesResponse* msg) {
  return *msg->status_;
}
void DicomSeriesImagesResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
void DicomSeriesImagesResponse::clear_images() {
  images_.Clear();
}
DicomSeriesImagesResponse::DicomSeriesImagesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  images_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.DicomSeriesImagesResponse)
}
DicomSeriesImagesResponse::DicomSeriesImagesResponse(const DicomSeriesImagesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      images_(from.images_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::osirixgrpc::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.DicomSeriesImagesResponse)
}

void DicomSeriesImagesResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DicomSeriesImagesResponse_dicomseries_2eproto.base);
  status_ = nullptr;
}

DicomSeriesImagesResponse::~DicomSeriesImagesResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.DicomSeriesImagesResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DicomSeriesImagesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void DicomSeriesImagesResponse::ArenaDtor(void* object) {
  DicomSeriesImagesResponse* _this = reinterpret_cast< DicomSeriesImagesResponse* >(object);
  (void)_this;
}
void DicomSeriesImagesResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DicomSeriesImagesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DicomSeriesImagesResponse& DicomSeriesImagesResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DicomSeriesImagesResponse_dicomseries_2eproto.base);
  return *internal_default_instance();
}


void DicomSeriesImagesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.DicomSeriesImagesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  images_.Clear();
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DicomSeriesImagesResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .osirixgrpc.DicomImage images = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_images(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DicomSeriesImagesResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.DicomSeriesImagesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // repeated .osirixgrpc.DicomImage images = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_images_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_images(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.DicomSeriesImagesResponse)
  return target;
}

size_t DicomSeriesImagesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.DicomSeriesImagesResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .osirixgrpc.DicomImage images = 2;
  total_size += 1UL * this->_internal_images_size();
  for (const auto& msg : this->images_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DicomSeriesImagesResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.DicomSeriesImagesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DicomSeriesImagesResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DicomSeriesImagesResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.DicomSeriesImagesResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.DicomSeriesImagesResponse)
    MergeFrom(*source);
  }
}

void DicomSeriesImagesResponse::MergeFrom(const DicomSeriesImagesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.DicomSeriesImagesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  images_.MergeFrom(from.images_);
  if (from.has_status()) {
    _internal_mutable_status()->::osirixgrpc::Status::MergeFrom(from._internal_status());
  }
}

void DicomSeriesImagesResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.DicomSeriesImagesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DicomSeriesImagesResponse::CopyFrom(const DicomSeriesImagesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.DicomSeriesImagesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DicomSeriesImagesResponse::IsInitialized() const {
  return true;
}

void DicomSeriesImagesResponse::InternalSwap(DicomSeriesImagesResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  images_.InternalSwap(&other->images_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DicomSeriesImagesResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DicomSeriesSeriesInstanceUIDResponse::_Internal {
 public:
  static const ::osirixgrpc::Status& status(const DicomSeriesSeriesInstanceUIDResponse* msg);
};

const ::osirixgrpc::Status&
DicomSeriesSeriesInstanceUIDResponse::_Internal::status(const DicomSeriesSeriesInstanceUIDResponse* msg) {
  return *msg->status_;
}
void DicomSeriesSeriesInstanceUIDResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
DicomSeriesSeriesInstanceUIDResponse::DicomSeriesSeriesInstanceUIDResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.DicomSeriesSeriesInstanceUIDResponse)
}
DicomSeriesSeriesInstanceUIDResponse::DicomSeriesSeriesInstanceUIDResponse(const DicomSeriesSeriesInstanceUIDResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  series_instance_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_series_instance_uid().empty()) {
    series_instance_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_series_instance_uid(), 
      GetArena());
  }
  if (from._internal_has_status()) {
    status_ = new ::osirixgrpc::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.DicomSeriesSeriesInstanceUIDResponse)
}

void DicomSeriesSeriesInstanceUIDResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DicomSeriesSeriesInstanceUIDResponse_dicomseries_2eproto.base);
  series_instance_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_ = nullptr;
}

DicomSeriesSeriesInstanceUIDResponse::~DicomSeriesSeriesInstanceUIDResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.DicomSeriesSeriesInstanceUIDResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DicomSeriesSeriesInstanceUIDResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  series_instance_uid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete status_;
}

void DicomSeriesSeriesInstanceUIDResponse::ArenaDtor(void* object) {
  DicomSeriesSeriesInstanceUIDResponse* _this = reinterpret_cast< DicomSeriesSeriesInstanceUIDResponse* >(object);
  (void)_this;
}
void DicomSeriesSeriesInstanceUIDResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DicomSeriesSeriesInstanceUIDResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DicomSeriesSeriesInstanceUIDResponse& DicomSeriesSeriesInstanceUIDResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DicomSeriesSeriesInstanceUIDResponse_dicomseries_2eproto.base);
  return *internal_default_instance();
}


void DicomSeriesSeriesInstanceUIDResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.DicomSeriesSeriesInstanceUIDResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  series_instance_uid_.ClearToEmpty();
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DicomSeriesSeriesInstanceUIDResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string series_instance_uid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_series_instance_uid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "osirixgrpc.DicomSeriesSeriesInstanceUIDResponse.series_instance_uid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DicomSeriesSeriesInstanceUIDResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.DicomSeriesSeriesInstanceUIDResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // string series_instance_uid = 2;
  if (this->series_instance_uid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_series_instance_uid().data(), static_cast<int>(this->_internal_series_instance_uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "osirixgrpc.DicomSeriesSeriesInstanceUIDResponse.series_instance_uid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_series_instance_uid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.DicomSeriesSeriesInstanceUIDResponse)
  return target;
}

size_t DicomSeriesSeriesInstanceUIDResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.DicomSeriesSeriesInstanceUIDResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string series_instance_uid = 2;
  if (this->series_instance_uid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_series_instance_uid());
  }

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DicomSeriesSeriesInstanceUIDResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.DicomSeriesSeriesInstanceUIDResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DicomSeriesSeriesInstanceUIDResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DicomSeriesSeriesInstanceUIDResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.DicomSeriesSeriesInstanceUIDResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.DicomSeriesSeriesInstanceUIDResponse)
    MergeFrom(*source);
  }
}

void DicomSeriesSeriesInstanceUIDResponse::MergeFrom(const DicomSeriesSeriesInstanceUIDResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.DicomSeriesSeriesInstanceUIDResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.series_instance_uid().size() > 0) {
    _internal_set_series_instance_uid(from._internal_series_instance_uid());
  }
  if (from.has_status()) {
    _internal_mutable_status()->::osirixgrpc::Status::MergeFrom(from._internal_status());
  }
}

void DicomSeriesSeriesInstanceUIDResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.DicomSeriesSeriesInstanceUIDResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DicomSeriesSeriesInstanceUIDResponse::CopyFrom(const DicomSeriesSeriesInstanceUIDResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.DicomSeriesSeriesInstanceUIDResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DicomSeriesSeriesInstanceUIDResponse::IsInitialized() const {
  return true;
}

void DicomSeriesSeriesInstanceUIDResponse::InternalSwap(DicomSeriesSeriesInstanceUIDResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  series_instance_uid_.Swap(&other->series_instance_uid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DicomSeriesSeriesInstanceUIDResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DicomSeriesSeriesSOPClassUIDResponse::_Internal {
 public:
  static const ::osirixgrpc::Status& status(const DicomSeriesSeriesSOPClassUIDResponse* msg);
};

const ::osirixgrpc::Status&
DicomSeriesSeriesSOPClassUIDResponse::_Internal::status(const DicomSeriesSeriesSOPClassUIDResponse* msg) {
  return *msg->status_;
}
void DicomSeriesSeriesSOPClassUIDResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
DicomSeriesSeriesSOPClassUIDResponse::DicomSeriesSeriesSOPClassUIDResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.DicomSeriesSeriesSOPClassUIDResponse)
}
DicomSeriesSeriesSOPClassUIDResponse::DicomSeriesSeriesSOPClassUIDResponse(const DicomSeriesSeriesSOPClassUIDResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  series_sop_class_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_series_sop_class_uid().empty()) {
    series_sop_class_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_series_sop_class_uid(), 
      GetArena());
  }
  if (from._internal_has_status()) {
    status_ = new ::osirixgrpc::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.DicomSeriesSeriesSOPClassUIDResponse)
}

void DicomSeriesSeriesSOPClassUIDResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DicomSeriesSeriesSOPClassUIDResponse_dicomseries_2eproto.base);
  series_sop_class_uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_ = nullptr;
}

DicomSeriesSeriesSOPClassUIDResponse::~DicomSeriesSeriesSOPClassUIDResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.DicomSeriesSeriesSOPClassUIDResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DicomSeriesSeriesSOPClassUIDResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  series_sop_class_uid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete status_;
}

void DicomSeriesSeriesSOPClassUIDResponse::ArenaDtor(void* object) {
  DicomSeriesSeriesSOPClassUIDResponse* _this = reinterpret_cast< DicomSeriesSeriesSOPClassUIDResponse* >(object);
  (void)_this;
}
void DicomSeriesSeriesSOPClassUIDResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DicomSeriesSeriesSOPClassUIDResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DicomSeriesSeriesSOPClassUIDResponse& DicomSeriesSeriesSOPClassUIDResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DicomSeriesSeriesSOPClassUIDResponse_dicomseries_2eproto.base);
  return *internal_default_instance();
}


void DicomSeriesSeriesSOPClassUIDResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.DicomSeriesSeriesSOPClassUIDResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  series_sop_class_uid_.ClearToEmpty();
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DicomSeriesSeriesSOPClassUIDResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string series_sop_class_uid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_series_sop_class_uid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "osirixgrpc.DicomSeriesSeriesSOPClassUIDResponse.series_sop_class_uid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DicomSeriesSeriesSOPClassUIDResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.DicomSeriesSeriesSOPClassUIDResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // string series_sop_class_uid = 2;
  if (this->series_sop_class_uid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_series_sop_class_uid().data(), static_cast<int>(this->_internal_series_sop_class_uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "osirixgrpc.DicomSeriesSeriesSOPClassUIDResponse.series_sop_class_uid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_series_sop_class_uid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.DicomSeriesSeriesSOPClassUIDResponse)
  return target;
}

size_t DicomSeriesSeriesSOPClassUIDResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.DicomSeriesSeriesSOPClassUIDResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string series_sop_class_uid = 2;
  if (this->series_sop_class_uid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_series_sop_class_uid());
  }

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DicomSeriesSeriesSOPClassUIDResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.DicomSeriesSeriesSOPClassUIDResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DicomSeriesSeriesSOPClassUIDResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DicomSeriesSeriesSOPClassUIDResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.DicomSeriesSeriesSOPClassUIDResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.DicomSeriesSeriesSOPClassUIDResponse)
    MergeFrom(*source);
  }
}

void DicomSeriesSeriesSOPClassUIDResponse::MergeFrom(const DicomSeriesSeriesSOPClassUIDResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.DicomSeriesSeriesSOPClassUIDResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.series_sop_class_uid().size() > 0) {
    _internal_set_series_sop_class_uid(from._internal_series_sop_class_uid());
  }
  if (from.has_status()) {
    _internal_mutable_status()->::osirixgrpc::Status::MergeFrom(from._internal_status());
  }
}

void DicomSeriesSeriesSOPClassUIDResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.DicomSeriesSeriesSOPClassUIDResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DicomSeriesSeriesSOPClassUIDResponse::CopyFrom(const DicomSeriesSeriesSOPClassUIDResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.DicomSeriesSeriesSOPClassUIDResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DicomSeriesSeriesSOPClassUIDResponse::IsInitialized() const {
  return true;
}

void DicomSeriesSeriesSOPClassUIDResponse::InternalSwap(DicomSeriesSeriesSOPClassUIDResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  series_sop_class_uid_.Swap(&other->series_sop_class_uid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DicomSeriesSeriesSOPClassUIDResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DicomSeriesSeriesDescriptionResponse::_Internal {
 public:
  static const ::osirixgrpc::Status& status(const DicomSeriesSeriesDescriptionResponse* msg);
};

const ::osirixgrpc::Status&
DicomSeriesSeriesDescriptionResponse::_Internal::status(const DicomSeriesSeriesDescriptionResponse* msg) {
  return *msg->status_;
}
void DicomSeriesSeriesDescriptionResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
DicomSeriesSeriesDescriptionResponse::DicomSeriesSeriesDescriptionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.DicomSeriesSeriesDescriptionResponse)
}
DicomSeriesSeriesDescriptionResponse::DicomSeriesSeriesDescriptionResponse(const DicomSeriesSeriesDescriptionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  series_description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_series_description().empty()) {
    series_description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_series_description(), 
      GetArena());
  }
  if (from._internal_has_status()) {
    status_ = new ::osirixgrpc::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.DicomSeriesSeriesDescriptionResponse)
}

void DicomSeriesSeriesDescriptionResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DicomSeriesSeriesDescriptionResponse_dicomseries_2eproto.base);
  series_description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_ = nullptr;
}

DicomSeriesSeriesDescriptionResponse::~DicomSeriesSeriesDescriptionResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.DicomSeriesSeriesDescriptionResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DicomSeriesSeriesDescriptionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  series_description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete status_;
}

void DicomSeriesSeriesDescriptionResponse::ArenaDtor(void* object) {
  DicomSeriesSeriesDescriptionResponse* _this = reinterpret_cast< DicomSeriesSeriesDescriptionResponse* >(object);
  (void)_this;
}
void DicomSeriesSeriesDescriptionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DicomSeriesSeriesDescriptionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DicomSeriesSeriesDescriptionResponse& DicomSeriesSeriesDescriptionResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DicomSeriesSeriesDescriptionResponse_dicomseries_2eproto.base);
  return *internal_default_instance();
}


void DicomSeriesSeriesDescriptionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.DicomSeriesSeriesDescriptionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  series_description_.ClearToEmpty();
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DicomSeriesSeriesDescriptionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string series_description = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_series_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "osirixgrpc.DicomSeriesSeriesDescriptionResponse.series_description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DicomSeriesSeriesDescriptionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.DicomSeriesSeriesDescriptionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // string series_description = 2;
  if (this->series_description().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_series_description().data(), static_cast<int>(this->_internal_series_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "osirixgrpc.DicomSeriesSeriesDescriptionResponse.series_description");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_series_description(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.DicomSeriesSeriesDescriptionResponse)
  return target;
}

size_t DicomSeriesSeriesDescriptionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.DicomSeriesSeriesDescriptionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string series_description = 2;
  if (this->series_description().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_series_description());
  }

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DicomSeriesSeriesDescriptionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.DicomSeriesSeriesDescriptionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DicomSeriesSeriesDescriptionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DicomSeriesSeriesDescriptionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.DicomSeriesSeriesDescriptionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.DicomSeriesSeriesDescriptionResponse)
    MergeFrom(*source);
  }
}

void DicomSeriesSeriesDescriptionResponse::MergeFrom(const DicomSeriesSeriesDescriptionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.DicomSeriesSeriesDescriptionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.series_description().size() > 0) {
    _internal_set_series_description(from._internal_series_description());
  }
  if (from.has_status()) {
    _internal_mutable_status()->::osirixgrpc::Status::MergeFrom(from._internal_status());
  }
}

void DicomSeriesSeriesDescriptionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.DicomSeriesSeriesDescriptionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DicomSeriesSeriesDescriptionResponse::CopyFrom(const DicomSeriesSeriesDescriptionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.DicomSeriesSeriesDescriptionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DicomSeriesSeriesDescriptionResponse::IsInitialized() const {
  return true;
}

void DicomSeriesSeriesDescriptionResponse::InternalSwap(DicomSeriesSeriesDescriptionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  series_description_.Swap(&other->series_description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DicomSeriesSeriesDescriptionResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DicomSeriesModalityResponse::_Internal {
 public:
  static const ::osirixgrpc::Status& status(const DicomSeriesModalityResponse* msg);
};

const ::osirixgrpc::Status&
DicomSeriesModalityResponse::_Internal::status(const DicomSeriesModalityResponse* msg) {
  return *msg->status_;
}
void DicomSeriesModalityResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
DicomSeriesModalityResponse::DicomSeriesModalityResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.DicomSeriesModalityResponse)
}
DicomSeriesModalityResponse::DicomSeriesModalityResponse(const DicomSeriesModalityResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  modality_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_modality().empty()) {
    modality_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_modality(), 
      GetArena());
  }
  if (from._internal_has_status()) {
    status_ = new ::osirixgrpc::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.DicomSeriesModalityResponse)
}

void DicomSeriesModalityResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DicomSeriesModalityResponse_dicomseries_2eproto.base);
  modality_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_ = nullptr;
}

DicomSeriesModalityResponse::~DicomSeriesModalityResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.DicomSeriesModalityResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DicomSeriesModalityResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  modality_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete status_;
}

void DicomSeriesModalityResponse::ArenaDtor(void* object) {
  DicomSeriesModalityResponse* _this = reinterpret_cast< DicomSeriesModalityResponse* >(object);
  (void)_this;
}
void DicomSeriesModalityResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DicomSeriesModalityResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DicomSeriesModalityResponse& DicomSeriesModalityResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DicomSeriesModalityResponse_dicomseries_2eproto.base);
  return *internal_default_instance();
}


void DicomSeriesModalityResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.DicomSeriesModalityResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  modality_.ClearToEmpty();
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DicomSeriesModalityResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string modality = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_modality();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "osirixgrpc.DicomSeriesModalityResponse.modality"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DicomSeriesModalityResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.DicomSeriesModalityResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // string modality = 2;
  if (this->modality().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_modality().data(), static_cast<int>(this->_internal_modality().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "osirixgrpc.DicomSeriesModalityResponse.modality");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_modality(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.DicomSeriesModalityResponse)
  return target;
}

size_t DicomSeriesModalityResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.DicomSeriesModalityResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string modality = 2;
  if (this->modality().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_modality());
  }

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DicomSeriesModalityResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.DicomSeriesModalityResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DicomSeriesModalityResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DicomSeriesModalityResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.DicomSeriesModalityResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.DicomSeriesModalityResponse)
    MergeFrom(*source);
  }
}

void DicomSeriesModalityResponse::MergeFrom(const DicomSeriesModalityResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.DicomSeriesModalityResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.modality().size() > 0) {
    _internal_set_modality(from._internal_modality());
  }
  if (from.has_status()) {
    _internal_mutable_status()->::osirixgrpc::Status::MergeFrom(from._internal_status());
  }
}

void DicomSeriesModalityResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.DicomSeriesModalityResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DicomSeriesModalityResponse::CopyFrom(const DicomSeriesModalityResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.DicomSeriesModalityResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DicomSeriesModalityResponse::IsInitialized() const {
  return true;
}

void DicomSeriesModalityResponse::InternalSwap(DicomSeriesModalityResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  modality_.Swap(&other->modality_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DicomSeriesModalityResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DicomSeriesNameResponse::_Internal {
 public:
  static const ::osirixgrpc::Status& status(const DicomSeriesNameResponse* msg);
};

const ::osirixgrpc::Status&
DicomSeriesNameResponse::_Internal::status(const DicomSeriesNameResponse* msg) {
  return *msg->status_;
}
void DicomSeriesNameResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
DicomSeriesNameResponse::DicomSeriesNameResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.DicomSeriesNameResponse)
}
DicomSeriesNameResponse::DicomSeriesNameResponse(const DicomSeriesNameResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  if (from._internal_has_status()) {
    status_ = new ::osirixgrpc::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.DicomSeriesNameResponse)
}

void DicomSeriesNameResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DicomSeriesNameResponse_dicomseries_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_ = nullptr;
}

DicomSeriesNameResponse::~DicomSeriesNameResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.DicomSeriesNameResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DicomSeriesNameResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete status_;
}

void DicomSeriesNameResponse::ArenaDtor(void* object) {
  DicomSeriesNameResponse* _this = reinterpret_cast< DicomSeriesNameResponse* >(object);
  (void)_this;
}
void DicomSeriesNameResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DicomSeriesNameResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DicomSeriesNameResponse& DicomSeriesNameResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DicomSeriesNameResponse_dicomseries_2eproto.base);
  return *internal_default_instance();
}


void DicomSeriesNameResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.DicomSeriesNameResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DicomSeriesNameResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "osirixgrpc.DicomSeriesNameResponse.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DicomSeriesNameResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.DicomSeriesNameResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "osirixgrpc.DicomSeriesNameResponse.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.DicomSeriesNameResponse)
  return target;
}

size_t DicomSeriesNameResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.DicomSeriesNameResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DicomSeriesNameResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.DicomSeriesNameResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DicomSeriesNameResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DicomSeriesNameResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.DicomSeriesNameResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.DicomSeriesNameResponse)
    MergeFrom(*source);
  }
}

void DicomSeriesNameResponse::MergeFrom(const DicomSeriesNameResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.DicomSeriesNameResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.has_status()) {
    _internal_mutable_status()->::osirixgrpc::Status::MergeFrom(from._internal_status());
  }
}

void DicomSeriesNameResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.DicomSeriesNameResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DicomSeriesNameResponse::CopyFrom(const DicomSeriesNameResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.DicomSeriesNameResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DicomSeriesNameResponse::IsInitialized() const {
  return true;
}

void DicomSeriesNameResponse::InternalSwap(DicomSeriesNameResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DicomSeriesNameResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DicomSeriesNumberOfImagesResponse::_Internal {
 public:
  static const ::osirixgrpc::Status& status(const DicomSeriesNumberOfImagesResponse* msg);
};

const ::osirixgrpc::Status&
DicomSeriesNumberOfImagesResponse::_Internal::status(const DicomSeriesNumberOfImagesResponse* msg) {
  return *msg->status_;
}
void DicomSeriesNumberOfImagesResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
DicomSeriesNumberOfImagesResponse::DicomSeriesNumberOfImagesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.DicomSeriesNumberOfImagesResponse)
}
DicomSeriesNumberOfImagesResponse::DicomSeriesNumberOfImagesResponse(const DicomSeriesNumberOfImagesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::osirixgrpc::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  number_of_images_ = from.number_of_images_;
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.DicomSeriesNumberOfImagesResponse)
}

void DicomSeriesNumberOfImagesResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DicomSeriesNumberOfImagesResponse_dicomseries_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&number_of_images_) -
      reinterpret_cast<char*>(&status_)) + sizeof(number_of_images_));
}

DicomSeriesNumberOfImagesResponse::~DicomSeriesNumberOfImagesResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.DicomSeriesNumberOfImagesResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DicomSeriesNumberOfImagesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void DicomSeriesNumberOfImagesResponse::ArenaDtor(void* object) {
  DicomSeriesNumberOfImagesResponse* _this = reinterpret_cast< DicomSeriesNumberOfImagesResponse* >(object);
  (void)_this;
}
void DicomSeriesNumberOfImagesResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DicomSeriesNumberOfImagesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DicomSeriesNumberOfImagesResponse& DicomSeriesNumberOfImagesResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DicomSeriesNumberOfImagesResponse_dicomseries_2eproto.base);
  return *internal_default_instance();
}


void DicomSeriesNumberOfImagesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.DicomSeriesNumberOfImagesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  number_of_images_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DicomSeriesNumberOfImagesResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 number_of_images = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          number_of_images_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DicomSeriesNumberOfImagesResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.DicomSeriesNumberOfImagesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // int32 number_of_images = 2;
  if (this->number_of_images() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_number_of_images(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.DicomSeriesNumberOfImagesResponse)
  return target;
}

size_t DicomSeriesNumberOfImagesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.DicomSeriesNumberOfImagesResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // int32 number_of_images = 2;
  if (this->number_of_images() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_number_of_images());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DicomSeriesNumberOfImagesResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.DicomSeriesNumberOfImagesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DicomSeriesNumberOfImagesResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DicomSeriesNumberOfImagesResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.DicomSeriesNumberOfImagesResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.DicomSeriesNumberOfImagesResponse)
    MergeFrom(*source);
  }
}

void DicomSeriesNumberOfImagesResponse::MergeFrom(const DicomSeriesNumberOfImagesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.DicomSeriesNumberOfImagesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::osirixgrpc::Status::MergeFrom(from._internal_status());
  }
  if (from.number_of_images() != 0) {
    _internal_set_number_of_images(from._internal_number_of_images());
  }
}

void DicomSeriesNumberOfImagesResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.DicomSeriesNumberOfImagesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DicomSeriesNumberOfImagesResponse::CopyFrom(const DicomSeriesNumberOfImagesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.DicomSeriesNumberOfImagesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DicomSeriesNumberOfImagesResponse::IsInitialized() const {
  return true;
}

void DicomSeriesNumberOfImagesResponse::InternalSwap(DicomSeriesNumberOfImagesResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DicomSeriesNumberOfImagesResponse, number_of_images_)
      + sizeof(DicomSeriesNumberOfImagesResponse::number_of_images_)
      - PROTOBUF_FIELD_OFFSET(DicomSeriesNumberOfImagesResponse, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DicomSeriesNumberOfImagesResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DicomSeriesDateResponse::_Internal {
 public:
  static const ::osirixgrpc::Status& status(const DicomSeriesDateResponse* msg);
};

const ::osirixgrpc::Status&
DicomSeriesDateResponse::_Internal::status(const DicomSeriesDateResponse* msg) {
  return *msg->status_;
}
void DicomSeriesDateResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
DicomSeriesDateResponse::DicomSeriesDateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.DicomSeriesDateResponse)
}
DicomSeriesDateResponse::DicomSeriesDateResponse(const DicomSeriesDateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::osirixgrpc::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  ::memcpy(&year_, &from.year_,
    static_cast<size_t>(reinterpret_cast<char*>(&millisecond_) -
    reinterpret_cast<char*>(&year_)) + sizeof(millisecond_));
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.DicomSeriesDateResponse)
}

void DicomSeriesDateResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DicomSeriesDateResponse_dicomseries_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&millisecond_) -
      reinterpret_cast<char*>(&status_)) + sizeof(millisecond_));
}

DicomSeriesDateResponse::~DicomSeriesDateResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.DicomSeriesDateResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DicomSeriesDateResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void DicomSeriesDateResponse::ArenaDtor(void* object) {
  DicomSeriesDateResponse* _this = reinterpret_cast< DicomSeriesDateResponse* >(object);
  (void)_this;
}
void DicomSeriesDateResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DicomSeriesDateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DicomSeriesDateResponse& DicomSeriesDateResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DicomSeriesDateResponse_dicomseries_2eproto.base);
  return *internal_default_instance();
}


void DicomSeriesDateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.DicomSeriesDateResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  ::memset(&year_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&millisecond_) -
      reinterpret_cast<char*>(&year_)) + sizeof(millisecond_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DicomSeriesDateResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 year = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          year_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 month = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          month_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 day = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          day_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 hour = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          hour_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 minute = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          minute_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 second = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          second_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 millisecond = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          millisecond_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DicomSeriesDateResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.DicomSeriesDateResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // int32 year = 2;
  if (this->year() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_year(), target);
  }

  // int32 month = 3;
  if (this->month() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_month(), target);
  }

  // int32 day = 4;
  if (this->day() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_day(), target);
  }

  // int32 hour = 5;
  if (this->hour() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_hour(), target);
  }

  // int32 minute = 6;
  if (this->minute() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_minute(), target);
  }

  // int32 second = 7;
  if (this->second() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_second(), target);
  }

  // int32 millisecond = 8;
  if (this->millisecond() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->_internal_millisecond(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.DicomSeriesDateResponse)
  return target;
}

size_t DicomSeriesDateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.DicomSeriesDateResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // int32 year = 2;
  if (this->year() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_year());
  }

  // int32 month = 3;
  if (this->month() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_month());
  }

  // int32 day = 4;
  if (this->day() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_day());
  }

  // int32 hour = 5;
  if (this->hour() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_hour());
  }

  // int32 minute = 6;
  if (this->minute() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_minute());
  }

  // int32 second = 7;
  if (this->second() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_second());
  }

  // int32 millisecond = 8;
  if (this->millisecond() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_millisecond());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DicomSeriesDateResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.DicomSeriesDateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DicomSeriesDateResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DicomSeriesDateResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.DicomSeriesDateResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.DicomSeriesDateResponse)
    MergeFrom(*source);
  }
}

void DicomSeriesDateResponse::MergeFrom(const DicomSeriesDateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.DicomSeriesDateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::osirixgrpc::Status::MergeFrom(from._internal_status());
  }
  if (from.year() != 0) {
    _internal_set_year(from._internal_year());
  }
  if (from.month() != 0) {
    _internal_set_month(from._internal_month());
  }
  if (from.day() != 0) {
    _internal_set_day(from._internal_day());
  }
  if (from.hour() != 0) {
    _internal_set_hour(from._internal_hour());
  }
  if (from.minute() != 0) {
    _internal_set_minute(from._internal_minute());
  }
  if (from.second() != 0) {
    _internal_set_second(from._internal_second());
  }
  if (from.millisecond() != 0) {
    _internal_set_millisecond(from._internal_millisecond());
  }
}

void DicomSeriesDateResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.DicomSeriesDateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DicomSeriesDateResponse::CopyFrom(const DicomSeriesDateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.DicomSeriesDateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DicomSeriesDateResponse::IsInitialized() const {
  return true;
}

void DicomSeriesDateResponse::InternalSwap(DicomSeriesDateResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DicomSeriesDateResponse, millisecond_)
      + sizeof(DicomSeriesDateResponse::millisecond_)
      - PROTOBUF_FIELD_OFFSET(DicomSeriesDateResponse, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DicomSeriesDateResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace osirixgrpc
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::osirixgrpc::DicomSeriesPathsResponse* Arena::CreateMaybeMessage< ::osirixgrpc::DicomSeriesPathsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::DicomSeriesPathsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::DicomSeriesPreviousSeriesResponse* Arena::CreateMaybeMessage< ::osirixgrpc::DicomSeriesPreviousSeriesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::DicomSeriesPreviousSeriesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::DicomSeriesNextSeriesResponse* Arena::CreateMaybeMessage< ::osirixgrpc::DicomSeriesNextSeriesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::DicomSeriesNextSeriesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::DicomSeriesSortedImagesResponse* Arena::CreateMaybeMessage< ::osirixgrpc::DicomSeriesSortedImagesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::DicomSeriesSortedImagesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::DicomSeriesStudyResponse* Arena::CreateMaybeMessage< ::osirixgrpc::DicomSeriesStudyResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::DicomSeriesStudyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::DicomSeriesImagesResponse* Arena::CreateMaybeMessage< ::osirixgrpc::DicomSeriesImagesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::DicomSeriesImagesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::DicomSeriesSeriesInstanceUIDResponse* Arena::CreateMaybeMessage< ::osirixgrpc::DicomSeriesSeriesInstanceUIDResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::DicomSeriesSeriesInstanceUIDResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::DicomSeriesSeriesSOPClassUIDResponse* Arena::CreateMaybeMessage< ::osirixgrpc::DicomSeriesSeriesSOPClassUIDResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::DicomSeriesSeriesSOPClassUIDResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::DicomSeriesSeriesDescriptionResponse* Arena::CreateMaybeMessage< ::osirixgrpc::DicomSeriesSeriesDescriptionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::DicomSeriesSeriesDescriptionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::DicomSeriesModalityResponse* Arena::CreateMaybeMessage< ::osirixgrpc::DicomSeriesModalityResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::DicomSeriesModalityResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::DicomSeriesNameResponse* Arena::CreateMaybeMessage< ::osirixgrpc::DicomSeriesNameResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::DicomSeriesNameResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::DicomSeriesNumberOfImagesResponse* Arena::CreateMaybeMessage< ::osirixgrpc::DicomSeriesNumberOfImagesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::DicomSeriesNumberOfImagesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::DicomSeriesDateResponse* Arena::CreateMaybeMessage< ::osirixgrpc::DicomSeriesDateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::DicomSeriesDateResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
