// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dicomimage.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_dicomimage_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_dicomimage_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "utilities.pb.h"
#include "types.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_dicomimage_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_dicomimage_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[10]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_dicomimage_2eproto;
namespace osirixgrpc {
class DicomImageCompletePathResponse;
class DicomImageCompletePathResponseDefaultTypeInternal;
extern DicomImageCompletePathResponseDefaultTypeInternal _DicomImageCompletePathResponse_default_instance_;
class DicomImageDateResponse;
class DicomImageDateResponseDefaultTypeInternal;
extern DicomImageDateResponseDefaultTypeInternal _DicomImageDateResponse_default_instance_;
class DicomImageHeightResponse;
class DicomImageHeightResponseDefaultTypeInternal;
extern DicomImageHeightResponseDefaultTypeInternal _DicomImageHeightResponse_default_instance_;
class DicomImageInstanceNumberResponse;
class DicomImageInstanceNumberResponseDefaultTypeInternal;
extern DicomImageInstanceNumberResponseDefaultTypeInternal _DicomImageInstanceNumberResponse_default_instance_;
class DicomImageModalityResponse;
class DicomImageModalityResponseDefaultTypeInternal;
extern DicomImageModalityResponseDefaultTypeInternal _DicomImageModalityResponse_default_instance_;
class DicomImageNumberOfFramesResponse;
class DicomImageNumberOfFramesResponseDefaultTypeInternal;
extern DicomImageNumberOfFramesResponseDefaultTypeInternal _DicomImageNumberOfFramesResponse_default_instance_;
class DicomImageSOPInstanceUIDResponse;
class DicomImageSOPInstanceUIDResponseDefaultTypeInternal;
extern DicomImageSOPInstanceUIDResponseDefaultTypeInternal _DicomImageSOPInstanceUIDResponse_default_instance_;
class DicomImageSeriesResponse;
class DicomImageSeriesResponseDefaultTypeInternal;
extern DicomImageSeriesResponseDefaultTypeInternal _DicomImageSeriesResponse_default_instance_;
class DicomImageSliceLocationResponse;
class DicomImageSliceLocationResponseDefaultTypeInternal;
extern DicomImageSliceLocationResponseDefaultTypeInternal _DicomImageSliceLocationResponse_default_instance_;
class DicomImageWidthResponse;
class DicomImageWidthResponseDefaultTypeInternal;
extern DicomImageWidthResponseDefaultTypeInternal _DicomImageWidthResponse_default_instance_;
}  // namespace osirixgrpc
PROTOBUF_NAMESPACE_OPEN
template<> ::osirixgrpc::DicomImageCompletePathResponse* Arena::CreateMaybeMessage<::osirixgrpc::DicomImageCompletePathResponse>(Arena*);
template<> ::osirixgrpc::DicomImageDateResponse* Arena::CreateMaybeMessage<::osirixgrpc::DicomImageDateResponse>(Arena*);
template<> ::osirixgrpc::DicomImageHeightResponse* Arena::CreateMaybeMessage<::osirixgrpc::DicomImageHeightResponse>(Arena*);
template<> ::osirixgrpc::DicomImageInstanceNumberResponse* Arena::CreateMaybeMessage<::osirixgrpc::DicomImageInstanceNumberResponse>(Arena*);
template<> ::osirixgrpc::DicomImageModalityResponse* Arena::CreateMaybeMessage<::osirixgrpc::DicomImageModalityResponse>(Arena*);
template<> ::osirixgrpc::DicomImageNumberOfFramesResponse* Arena::CreateMaybeMessage<::osirixgrpc::DicomImageNumberOfFramesResponse>(Arena*);
template<> ::osirixgrpc::DicomImageSOPInstanceUIDResponse* Arena::CreateMaybeMessage<::osirixgrpc::DicomImageSOPInstanceUIDResponse>(Arena*);
template<> ::osirixgrpc::DicomImageSeriesResponse* Arena::CreateMaybeMessage<::osirixgrpc::DicomImageSeriesResponse>(Arena*);
template<> ::osirixgrpc::DicomImageSliceLocationResponse* Arena::CreateMaybeMessage<::osirixgrpc::DicomImageSliceLocationResponse>(Arena*);
template<> ::osirixgrpc::DicomImageWidthResponse* Arena::CreateMaybeMessage<::osirixgrpc::DicomImageWidthResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace osirixgrpc {

// ===================================================================

class DicomImageWidthResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DicomImageWidthResponse) */ {
 public:
  inline DicomImageWidthResponse() : DicomImageWidthResponse(nullptr) {}
  virtual ~DicomImageWidthResponse();

  DicomImageWidthResponse(const DicomImageWidthResponse& from);
  DicomImageWidthResponse(DicomImageWidthResponse&& from) noexcept
    : DicomImageWidthResponse() {
    *this = ::std::move(from);
  }

  inline DicomImageWidthResponse& operator=(const DicomImageWidthResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DicomImageWidthResponse& operator=(DicomImageWidthResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DicomImageWidthResponse& default_instance();

  static inline const DicomImageWidthResponse* internal_default_instance() {
    return reinterpret_cast<const DicomImageWidthResponse*>(
               &_DicomImageWidthResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(DicomImageWidthResponse& a, DicomImageWidthResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DicomImageWidthResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DicomImageWidthResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DicomImageWidthResponse* New() const final {
    return CreateMaybeMessage<DicomImageWidthResponse>(nullptr);
  }

  DicomImageWidthResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DicomImageWidthResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DicomImageWidthResponse& from);
  void MergeFrom(const DicomImageWidthResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DicomImageWidthResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "osirixgrpc.DicomImageWidthResponse";
  }
  protected:
  explicit DicomImageWidthResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dicomimage_2eproto);
    return ::descriptor_table_dicomimage_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
    kWidthFieldNumber = 2,
  };
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  const ::osirixgrpc::Status& status() const;
  ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  // uint32 width = 2;
  void clear_width();
  ::PROTOBUF_NAMESPACE_ID::uint32 width() const;
  void set_width(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_width() const;
  void _internal_set_width(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:osirixgrpc.DicomImageWidthResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::osirixgrpc::Status* status_;
  ::PROTOBUF_NAMESPACE_ID::uint32 width_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dicomimage_2eproto;
};
// -------------------------------------------------------------------

class DicomImageHeightResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DicomImageHeightResponse) */ {
 public:
  inline DicomImageHeightResponse() : DicomImageHeightResponse(nullptr) {}
  virtual ~DicomImageHeightResponse();

  DicomImageHeightResponse(const DicomImageHeightResponse& from);
  DicomImageHeightResponse(DicomImageHeightResponse&& from) noexcept
    : DicomImageHeightResponse() {
    *this = ::std::move(from);
  }

  inline DicomImageHeightResponse& operator=(const DicomImageHeightResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DicomImageHeightResponse& operator=(DicomImageHeightResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DicomImageHeightResponse& default_instance();

  static inline const DicomImageHeightResponse* internal_default_instance() {
    return reinterpret_cast<const DicomImageHeightResponse*>(
               &_DicomImageHeightResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(DicomImageHeightResponse& a, DicomImageHeightResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DicomImageHeightResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DicomImageHeightResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DicomImageHeightResponse* New() const final {
    return CreateMaybeMessage<DicomImageHeightResponse>(nullptr);
  }

  DicomImageHeightResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DicomImageHeightResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DicomImageHeightResponse& from);
  void MergeFrom(const DicomImageHeightResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DicomImageHeightResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "osirixgrpc.DicomImageHeightResponse";
  }
  protected:
  explicit DicomImageHeightResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dicomimage_2eproto);
    return ::descriptor_table_dicomimage_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
    kHeightFieldNumber = 2,
  };
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  const ::osirixgrpc::Status& status() const;
  ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  // uint32 height = 2;
  void clear_height();
  ::PROTOBUF_NAMESPACE_ID::uint32 height() const;
  void set_height(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_height() const;
  void _internal_set_height(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:osirixgrpc.DicomImageHeightResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::osirixgrpc::Status* status_;
  ::PROTOBUF_NAMESPACE_ID::uint32 height_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dicomimage_2eproto;
};
// -------------------------------------------------------------------

class DicomImageSOPInstanceUIDResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DicomImageSOPInstanceUIDResponse) */ {
 public:
  inline DicomImageSOPInstanceUIDResponse() : DicomImageSOPInstanceUIDResponse(nullptr) {}
  virtual ~DicomImageSOPInstanceUIDResponse();

  DicomImageSOPInstanceUIDResponse(const DicomImageSOPInstanceUIDResponse& from);
  DicomImageSOPInstanceUIDResponse(DicomImageSOPInstanceUIDResponse&& from) noexcept
    : DicomImageSOPInstanceUIDResponse() {
    *this = ::std::move(from);
  }

  inline DicomImageSOPInstanceUIDResponse& operator=(const DicomImageSOPInstanceUIDResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DicomImageSOPInstanceUIDResponse& operator=(DicomImageSOPInstanceUIDResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DicomImageSOPInstanceUIDResponse& default_instance();

  static inline const DicomImageSOPInstanceUIDResponse* internal_default_instance() {
    return reinterpret_cast<const DicomImageSOPInstanceUIDResponse*>(
               &_DicomImageSOPInstanceUIDResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(DicomImageSOPInstanceUIDResponse& a, DicomImageSOPInstanceUIDResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DicomImageSOPInstanceUIDResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DicomImageSOPInstanceUIDResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DicomImageSOPInstanceUIDResponse* New() const final {
    return CreateMaybeMessage<DicomImageSOPInstanceUIDResponse>(nullptr);
  }

  DicomImageSOPInstanceUIDResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DicomImageSOPInstanceUIDResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DicomImageSOPInstanceUIDResponse& from);
  void MergeFrom(const DicomImageSOPInstanceUIDResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DicomImageSOPInstanceUIDResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "osirixgrpc.DicomImageSOPInstanceUIDResponse";
  }
  protected:
  explicit DicomImageSOPInstanceUIDResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dicomimage_2eproto);
    return ::descriptor_table_dicomimage_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSopInstanceUidFieldNumber = 2,
    kStatusFieldNumber = 1,
  };
  // string sop_instance_uid = 2;
  void clear_sop_instance_uid();
  const std::string& sop_instance_uid() const;
  void set_sop_instance_uid(const std::string& value);
  void set_sop_instance_uid(std::string&& value);
  void set_sop_instance_uid(const char* value);
  void set_sop_instance_uid(const char* value, size_t size);
  std::string* mutable_sop_instance_uid();
  std::string* release_sop_instance_uid();
  void set_allocated_sop_instance_uid(std::string* sop_instance_uid);
  private:
  const std::string& _internal_sop_instance_uid() const;
  void _internal_set_sop_instance_uid(const std::string& value);
  std::string* _internal_mutable_sop_instance_uid();
  public:

  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  const ::osirixgrpc::Status& status() const;
  ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  // @@protoc_insertion_point(class_scope:osirixgrpc.DicomImageSOPInstanceUIDResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sop_instance_uid_;
  ::osirixgrpc::Status* status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dicomimage_2eproto;
};
// -------------------------------------------------------------------

class DicomImageCompletePathResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DicomImageCompletePathResponse) */ {
 public:
  inline DicomImageCompletePathResponse() : DicomImageCompletePathResponse(nullptr) {}
  virtual ~DicomImageCompletePathResponse();

  DicomImageCompletePathResponse(const DicomImageCompletePathResponse& from);
  DicomImageCompletePathResponse(DicomImageCompletePathResponse&& from) noexcept
    : DicomImageCompletePathResponse() {
    *this = ::std::move(from);
  }

  inline DicomImageCompletePathResponse& operator=(const DicomImageCompletePathResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DicomImageCompletePathResponse& operator=(DicomImageCompletePathResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DicomImageCompletePathResponse& default_instance();

  static inline const DicomImageCompletePathResponse* internal_default_instance() {
    return reinterpret_cast<const DicomImageCompletePathResponse*>(
               &_DicomImageCompletePathResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(DicomImageCompletePathResponse& a, DicomImageCompletePathResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DicomImageCompletePathResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DicomImageCompletePathResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DicomImageCompletePathResponse* New() const final {
    return CreateMaybeMessage<DicomImageCompletePathResponse>(nullptr);
  }

  DicomImageCompletePathResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DicomImageCompletePathResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DicomImageCompletePathResponse& from);
  void MergeFrom(const DicomImageCompletePathResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DicomImageCompletePathResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "osirixgrpc.DicomImageCompletePathResponse";
  }
  protected:
  explicit DicomImageCompletePathResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dicomimage_2eproto);
    return ::descriptor_table_dicomimage_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPathNameFieldNumber = 2,
    kStatusFieldNumber = 1,
  };
  // string path_name = 2;
  void clear_path_name();
  const std::string& path_name() const;
  void set_path_name(const std::string& value);
  void set_path_name(std::string&& value);
  void set_path_name(const char* value);
  void set_path_name(const char* value, size_t size);
  std::string* mutable_path_name();
  std::string* release_path_name();
  void set_allocated_path_name(std::string* path_name);
  private:
  const std::string& _internal_path_name() const;
  void _internal_set_path_name(const std::string& value);
  std::string* _internal_mutable_path_name();
  public:

  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  const ::osirixgrpc::Status& status() const;
  ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  // @@protoc_insertion_point(class_scope:osirixgrpc.DicomImageCompletePathResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr path_name_;
  ::osirixgrpc::Status* status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dicomimage_2eproto;
};
// -------------------------------------------------------------------

class DicomImageDateResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DicomImageDateResponse) */ {
 public:
  inline DicomImageDateResponse() : DicomImageDateResponse(nullptr) {}
  virtual ~DicomImageDateResponse();

  DicomImageDateResponse(const DicomImageDateResponse& from);
  DicomImageDateResponse(DicomImageDateResponse&& from) noexcept
    : DicomImageDateResponse() {
    *this = ::std::move(from);
  }

  inline DicomImageDateResponse& operator=(const DicomImageDateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DicomImageDateResponse& operator=(DicomImageDateResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DicomImageDateResponse& default_instance();

  static inline const DicomImageDateResponse* internal_default_instance() {
    return reinterpret_cast<const DicomImageDateResponse*>(
               &_DicomImageDateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(DicomImageDateResponse& a, DicomImageDateResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DicomImageDateResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DicomImageDateResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DicomImageDateResponse* New() const final {
    return CreateMaybeMessage<DicomImageDateResponse>(nullptr);
  }

  DicomImageDateResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DicomImageDateResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DicomImageDateResponse& from);
  void MergeFrom(const DicomImageDateResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DicomImageDateResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "osirixgrpc.DicomImageDateResponse";
  }
  protected:
  explicit DicomImageDateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dicomimage_2eproto);
    return ::descriptor_table_dicomimage_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
    kYearFieldNumber = 2,
    kMonthFieldNumber = 3,
    kDayFieldNumber = 4,
    kHourFieldNumber = 5,
    kMinuteFieldNumber = 6,
    kSecondFieldNumber = 7,
    kMillisecondFieldNumber = 8,
  };
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  const ::osirixgrpc::Status& status() const;
  ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  // int32 year = 2;
  void clear_year();
  ::PROTOBUF_NAMESPACE_ID::int32 year() const;
  void set_year(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_year() const;
  void _internal_set_year(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 month = 3;
  void clear_month();
  ::PROTOBUF_NAMESPACE_ID::int32 month() const;
  void set_month(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_month() const;
  void _internal_set_month(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 day = 4;
  void clear_day();
  ::PROTOBUF_NAMESPACE_ID::int32 day() const;
  void set_day(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_day() const;
  void _internal_set_day(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 hour = 5;
  void clear_hour();
  ::PROTOBUF_NAMESPACE_ID::int32 hour() const;
  void set_hour(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_hour() const;
  void _internal_set_hour(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 minute = 6;
  void clear_minute();
  ::PROTOBUF_NAMESPACE_ID::int32 minute() const;
  void set_minute(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_minute() const;
  void _internal_set_minute(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 second = 7;
  void clear_second();
  ::PROTOBUF_NAMESPACE_ID::int32 second() const;
  void set_second(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_second() const;
  void _internal_set_second(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 millisecond = 8;
  void clear_millisecond();
  ::PROTOBUF_NAMESPACE_ID::int32 millisecond() const;
  void set_millisecond(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_millisecond() const;
  void _internal_set_millisecond(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:osirixgrpc.DicomImageDateResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::osirixgrpc::Status* status_;
  ::PROTOBUF_NAMESPACE_ID::int32 year_;
  ::PROTOBUF_NAMESPACE_ID::int32 month_;
  ::PROTOBUF_NAMESPACE_ID::int32 day_;
  ::PROTOBUF_NAMESPACE_ID::int32 hour_;
  ::PROTOBUF_NAMESPACE_ID::int32 minute_;
  ::PROTOBUF_NAMESPACE_ID::int32 second_;
  ::PROTOBUF_NAMESPACE_ID::int32 millisecond_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dicomimage_2eproto;
};
// -------------------------------------------------------------------

class DicomImageNumberOfFramesResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DicomImageNumberOfFramesResponse) */ {
 public:
  inline DicomImageNumberOfFramesResponse() : DicomImageNumberOfFramesResponse(nullptr) {}
  virtual ~DicomImageNumberOfFramesResponse();

  DicomImageNumberOfFramesResponse(const DicomImageNumberOfFramesResponse& from);
  DicomImageNumberOfFramesResponse(DicomImageNumberOfFramesResponse&& from) noexcept
    : DicomImageNumberOfFramesResponse() {
    *this = ::std::move(from);
  }

  inline DicomImageNumberOfFramesResponse& operator=(const DicomImageNumberOfFramesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DicomImageNumberOfFramesResponse& operator=(DicomImageNumberOfFramesResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DicomImageNumberOfFramesResponse& default_instance();

  static inline const DicomImageNumberOfFramesResponse* internal_default_instance() {
    return reinterpret_cast<const DicomImageNumberOfFramesResponse*>(
               &_DicomImageNumberOfFramesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(DicomImageNumberOfFramesResponse& a, DicomImageNumberOfFramesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DicomImageNumberOfFramesResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DicomImageNumberOfFramesResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DicomImageNumberOfFramesResponse* New() const final {
    return CreateMaybeMessage<DicomImageNumberOfFramesResponse>(nullptr);
  }

  DicomImageNumberOfFramesResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DicomImageNumberOfFramesResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DicomImageNumberOfFramesResponse& from);
  void MergeFrom(const DicomImageNumberOfFramesResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DicomImageNumberOfFramesResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "osirixgrpc.DicomImageNumberOfFramesResponse";
  }
  protected:
  explicit DicomImageNumberOfFramesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dicomimage_2eproto);
    return ::descriptor_table_dicomimage_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
    kNumberOfFramesFieldNumber = 2,
  };
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  const ::osirixgrpc::Status& status() const;
  ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  // uint32 number_of_frames = 2;
  void clear_number_of_frames();
  ::PROTOBUF_NAMESPACE_ID::uint32 number_of_frames() const;
  void set_number_of_frames(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_number_of_frames() const;
  void _internal_set_number_of_frames(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:osirixgrpc.DicomImageNumberOfFramesResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::osirixgrpc::Status* status_;
  ::PROTOBUF_NAMESPACE_ID::uint32 number_of_frames_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dicomimage_2eproto;
};
// -------------------------------------------------------------------

class DicomImageModalityResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DicomImageModalityResponse) */ {
 public:
  inline DicomImageModalityResponse() : DicomImageModalityResponse(nullptr) {}
  virtual ~DicomImageModalityResponse();

  DicomImageModalityResponse(const DicomImageModalityResponse& from);
  DicomImageModalityResponse(DicomImageModalityResponse&& from) noexcept
    : DicomImageModalityResponse() {
    *this = ::std::move(from);
  }

  inline DicomImageModalityResponse& operator=(const DicomImageModalityResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DicomImageModalityResponse& operator=(DicomImageModalityResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DicomImageModalityResponse& default_instance();

  static inline const DicomImageModalityResponse* internal_default_instance() {
    return reinterpret_cast<const DicomImageModalityResponse*>(
               &_DicomImageModalityResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(DicomImageModalityResponse& a, DicomImageModalityResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DicomImageModalityResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DicomImageModalityResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DicomImageModalityResponse* New() const final {
    return CreateMaybeMessage<DicomImageModalityResponse>(nullptr);
  }

  DicomImageModalityResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DicomImageModalityResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DicomImageModalityResponse& from);
  void MergeFrom(const DicomImageModalityResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DicomImageModalityResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "osirixgrpc.DicomImageModalityResponse";
  }
  protected:
  explicit DicomImageModalityResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dicomimage_2eproto);
    return ::descriptor_table_dicomimage_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kModalityFieldNumber = 2,
    kStatusFieldNumber = 1,
  };
  // string modality = 2;
  void clear_modality();
  const std::string& modality() const;
  void set_modality(const std::string& value);
  void set_modality(std::string&& value);
  void set_modality(const char* value);
  void set_modality(const char* value, size_t size);
  std::string* mutable_modality();
  std::string* release_modality();
  void set_allocated_modality(std::string* modality);
  private:
  const std::string& _internal_modality() const;
  void _internal_set_modality(const std::string& value);
  std::string* _internal_mutable_modality();
  public:

  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  const ::osirixgrpc::Status& status() const;
  ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  // @@protoc_insertion_point(class_scope:osirixgrpc.DicomImageModalityResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr modality_;
  ::osirixgrpc::Status* status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dicomimage_2eproto;
};
// -------------------------------------------------------------------

class DicomImageSeriesResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DicomImageSeriesResponse) */ {
 public:
  inline DicomImageSeriesResponse() : DicomImageSeriesResponse(nullptr) {}
  virtual ~DicomImageSeriesResponse();

  DicomImageSeriesResponse(const DicomImageSeriesResponse& from);
  DicomImageSeriesResponse(DicomImageSeriesResponse&& from) noexcept
    : DicomImageSeriesResponse() {
    *this = ::std::move(from);
  }

  inline DicomImageSeriesResponse& operator=(const DicomImageSeriesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DicomImageSeriesResponse& operator=(DicomImageSeriesResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DicomImageSeriesResponse& default_instance();

  static inline const DicomImageSeriesResponse* internal_default_instance() {
    return reinterpret_cast<const DicomImageSeriesResponse*>(
               &_DicomImageSeriesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(DicomImageSeriesResponse& a, DicomImageSeriesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DicomImageSeriesResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DicomImageSeriesResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DicomImageSeriesResponse* New() const final {
    return CreateMaybeMessage<DicomImageSeriesResponse>(nullptr);
  }

  DicomImageSeriesResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DicomImageSeriesResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DicomImageSeriesResponse& from);
  void MergeFrom(const DicomImageSeriesResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DicomImageSeriesResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "osirixgrpc.DicomImageSeriesResponse";
  }
  protected:
  explicit DicomImageSeriesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dicomimage_2eproto);
    return ::descriptor_table_dicomimage_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
    kSeriesFieldNumber = 2,
  };
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  const ::osirixgrpc::Status& status() const;
  ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  // .osirixgrpc.DicomSeries series = 2;
  bool has_series() const;
  private:
  bool _internal_has_series() const;
  public:
  void clear_series();
  const ::osirixgrpc::DicomSeries& series() const;
  ::osirixgrpc::DicomSeries* release_series();
  ::osirixgrpc::DicomSeries* mutable_series();
  void set_allocated_series(::osirixgrpc::DicomSeries* series);
  private:
  const ::osirixgrpc::DicomSeries& _internal_series() const;
  ::osirixgrpc::DicomSeries* _internal_mutable_series();
  public:
  void unsafe_arena_set_allocated_series(
      ::osirixgrpc::DicomSeries* series);
  ::osirixgrpc::DicomSeries* unsafe_arena_release_series();

  // @@protoc_insertion_point(class_scope:osirixgrpc.DicomImageSeriesResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::osirixgrpc::Status* status_;
  ::osirixgrpc::DicomSeries* series_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dicomimage_2eproto;
};
// -------------------------------------------------------------------

class DicomImageSliceLocationResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DicomImageSliceLocationResponse) */ {
 public:
  inline DicomImageSliceLocationResponse() : DicomImageSliceLocationResponse(nullptr) {}
  virtual ~DicomImageSliceLocationResponse();

  DicomImageSliceLocationResponse(const DicomImageSliceLocationResponse& from);
  DicomImageSliceLocationResponse(DicomImageSliceLocationResponse&& from) noexcept
    : DicomImageSliceLocationResponse() {
    *this = ::std::move(from);
  }

  inline DicomImageSliceLocationResponse& operator=(const DicomImageSliceLocationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DicomImageSliceLocationResponse& operator=(DicomImageSliceLocationResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DicomImageSliceLocationResponse& default_instance();

  static inline const DicomImageSliceLocationResponse* internal_default_instance() {
    return reinterpret_cast<const DicomImageSliceLocationResponse*>(
               &_DicomImageSliceLocationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(DicomImageSliceLocationResponse& a, DicomImageSliceLocationResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DicomImageSliceLocationResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DicomImageSliceLocationResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DicomImageSliceLocationResponse* New() const final {
    return CreateMaybeMessage<DicomImageSliceLocationResponse>(nullptr);
  }

  DicomImageSliceLocationResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DicomImageSliceLocationResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DicomImageSliceLocationResponse& from);
  void MergeFrom(const DicomImageSliceLocationResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DicomImageSliceLocationResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "osirixgrpc.DicomImageSliceLocationResponse";
  }
  protected:
  explicit DicomImageSliceLocationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dicomimage_2eproto);
    return ::descriptor_table_dicomimage_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
    kSliceLocationsFieldNumber = 2,
  };
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  const ::osirixgrpc::Status& status() const;
  ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  // float slice_locations = 2;
  void clear_slice_locations();
  float slice_locations() const;
  void set_slice_locations(float value);
  private:
  float _internal_slice_locations() const;
  void _internal_set_slice_locations(float value);
  public:

  // @@protoc_insertion_point(class_scope:osirixgrpc.DicomImageSliceLocationResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::osirixgrpc::Status* status_;
  float slice_locations_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dicomimage_2eproto;
};
// -------------------------------------------------------------------

class DicomImageInstanceNumberResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.DicomImageInstanceNumberResponse) */ {
 public:
  inline DicomImageInstanceNumberResponse() : DicomImageInstanceNumberResponse(nullptr) {}
  virtual ~DicomImageInstanceNumberResponse();

  DicomImageInstanceNumberResponse(const DicomImageInstanceNumberResponse& from);
  DicomImageInstanceNumberResponse(DicomImageInstanceNumberResponse&& from) noexcept
    : DicomImageInstanceNumberResponse() {
    *this = ::std::move(from);
  }

  inline DicomImageInstanceNumberResponse& operator=(const DicomImageInstanceNumberResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DicomImageInstanceNumberResponse& operator=(DicomImageInstanceNumberResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DicomImageInstanceNumberResponse& default_instance();

  static inline const DicomImageInstanceNumberResponse* internal_default_instance() {
    return reinterpret_cast<const DicomImageInstanceNumberResponse*>(
               &_DicomImageInstanceNumberResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(DicomImageInstanceNumberResponse& a, DicomImageInstanceNumberResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DicomImageInstanceNumberResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DicomImageInstanceNumberResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DicomImageInstanceNumberResponse* New() const final {
    return CreateMaybeMessage<DicomImageInstanceNumberResponse>(nullptr);
  }

  DicomImageInstanceNumberResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DicomImageInstanceNumberResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DicomImageInstanceNumberResponse& from);
  void MergeFrom(const DicomImageInstanceNumberResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DicomImageInstanceNumberResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "osirixgrpc.DicomImageInstanceNumberResponse";
  }
  protected:
  explicit DicomImageInstanceNumberResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dicomimage_2eproto);
    return ::descriptor_table_dicomimage_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
    kInstanceNumberFieldNumber = 2,
  };
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  const ::osirixgrpc::Status& status() const;
  ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  // uint32 instance_number = 2;
  void clear_instance_number();
  ::PROTOBUF_NAMESPACE_ID::uint32 instance_number() const;
  void set_instance_number(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_instance_number() const;
  void _internal_set_instance_number(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:osirixgrpc.DicomImageInstanceNumberResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::osirixgrpc::Status* status_;
  ::PROTOBUF_NAMESPACE_ID::uint32 instance_number_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dicomimage_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// DicomImageWidthResponse

// .osirixgrpc.Status status = 1;
inline bool DicomImageWidthResponse::_internal_has_status() const {
  return this != internal_default_instance() && status_ != nullptr;
}
inline bool DicomImageWidthResponse::has_status() const {
  return _internal_has_status();
}
inline const ::osirixgrpc::Status& DicomImageWidthResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DicomImageWidthResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomImageWidthResponse.status)
  return _internal_status();
}
inline void DicomImageWidthResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomImageWidthResponse.status)
}
inline ::osirixgrpc::Status* DicomImageWidthResponse::release_status() {
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::Status* DicomImageWidthResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomImageWidthResponse.status)
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DicomImageWidthResponse::_internal_mutable_status() {
  
  if (status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    status_ = p;
  }
  return status_;
}
inline ::osirixgrpc::Status* DicomImageWidthResponse::mutable_status() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomImageWidthResponse.status)
  return _internal_mutable_status();
}
inline void DicomImageWidthResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status)->GetArena();
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomImageWidthResponse.status)
}

// uint32 width = 2;
inline void DicomImageWidthResponse::clear_width() {
  width_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DicomImageWidthResponse::_internal_width() const {
  return width_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DicomImageWidthResponse::width() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomImageWidthResponse.width)
  return _internal_width();
}
inline void DicomImageWidthResponse::_internal_set_width(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  width_ = value;
}
inline void DicomImageWidthResponse::set_width(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_width(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomImageWidthResponse.width)
}

// -------------------------------------------------------------------

// DicomImageHeightResponse

// .osirixgrpc.Status status = 1;
inline bool DicomImageHeightResponse::_internal_has_status() const {
  return this != internal_default_instance() && status_ != nullptr;
}
inline bool DicomImageHeightResponse::has_status() const {
  return _internal_has_status();
}
inline const ::osirixgrpc::Status& DicomImageHeightResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DicomImageHeightResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomImageHeightResponse.status)
  return _internal_status();
}
inline void DicomImageHeightResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomImageHeightResponse.status)
}
inline ::osirixgrpc::Status* DicomImageHeightResponse::release_status() {
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::Status* DicomImageHeightResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomImageHeightResponse.status)
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DicomImageHeightResponse::_internal_mutable_status() {
  
  if (status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    status_ = p;
  }
  return status_;
}
inline ::osirixgrpc::Status* DicomImageHeightResponse::mutable_status() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomImageHeightResponse.status)
  return _internal_mutable_status();
}
inline void DicomImageHeightResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status)->GetArena();
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomImageHeightResponse.status)
}

// uint32 height = 2;
inline void DicomImageHeightResponse::clear_height() {
  height_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DicomImageHeightResponse::_internal_height() const {
  return height_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DicomImageHeightResponse::height() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomImageHeightResponse.height)
  return _internal_height();
}
inline void DicomImageHeightResponse::_internal_set_height(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  height_ = value;
}
inline void DicomImageHeightResponse::set_height(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_height(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomImageHeightResponse.height)
}

// -------------------------------------------------------------------

// DicomImageSOPInstanceUIDResponse

// .osirixgrpc.Status status = 1;
inline bool DicomImageSOPInstanceUIDResponse::_internal_has_status() const {
  return this != internal_default_instance() && status_ != nullptr;
}
inline bool DicomImageSOPInstanceUIDResponse::has_status() const {
  return _internal_has_status();
}
inline const ::osirixgrpc::Status& DicomImageSOPInstanceUIDResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DicomImageSOPInstanceUIDResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomImageSOPInstanceUIDResponse.status)
  return _internal_status();
}
inline void DicomImageSOPInstanceUIDResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomImageSOPInstanceUIDResponse.status)
}
inline ::osirixgrpc::Status* DicomImageSOPInstanceUIDResponse::release_status() {
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::Status* DicomImageSOPInstanceUIDResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomImageSOPInstanceUIDResponse.status)
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DicomImageSOPInstanceUIDResponse::_internal_mutable_status() {
  
  if (status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    status_ = p;
  }
  return status_;
}
inline ::osirixgrpc::Status* DicomImageSOPInstanceUIDResponse::mutable_status() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomImageSOPInstanceUIDResponse.status)
  return _internal_mutable_status();
}
inline void DicomImageSOPInstanceUIDResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status)->GetArena();
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomImageSOPInstanceUIDResponse.status)
}

// string sop_instance_uid = 2;
inline void DicomImageSOPInstanceUIDResponse::clear_sop_instance_uid() {
  sop_instance_uid_.ClearToEmpty();
}
inline const std::string& DicomImageSOPInstanceUIDResponse::sop_instance_uid() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomImageSOPInstanceUIDResponse.sop_instance_uid)
  return _internal_sop_instance_uid();
}
inline void DicomImageSOPInstanceUIDResponse::set_sop_instance_uid(const std::string& value) {
  _internal_set_sop_instance_uid(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomImageSOPInstanceUIDResponse.sop_instance_uid)
}
inline std::string* DicomImageSOPInstanceUIDResponse::mutable_sop_instance_uid() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomImageSOPInstanceUIDResponse.sop_instance_uid)
  return _internal_mutable_sop_instance_uid();
}
inline const std::string& DicomImageSOPInstanceUIDResponse::_internal_sop_instance_uid() const {
  return sop_instance_uid_.Get();
}
inline void DicomImageSOPInstanceUIDResponse::_internal_set_sop_instance_uid(const std::string& value) {
  
  sop_instance_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void DicomImageSOPInstanceUIDResponse::set_sop_instance_uid(std::string&& value) {
  
  sop_instance_uid_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:osirixgrpc.DicomImageSOPInstanceUIDResponse.sop_instance_uid)
}
inline void DicomImageSOPInstanceUIDResponse::set_sop_instance_uid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  sop_instance_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:osirixgrpc.DicomImageSOPInstanceUIDResponse.sop_instance_uid)
}
inline void DicomImageSOPInstanceUIDResponse::set_sop_instance_uid(const char* value,
    size_t size) {
  
  sop_instance_uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:osirixgrpc.DicomImageSOPInstanceUIDResponse.sop_instance_uid)
}
inline std::string* DicomImageSOPInstanceUIDResponse::_internal_mutable_sop_instance_uid() {
  
  return sop_instance_uid_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* DicomImageSOPInstanceUIDResponse::release_sop_instance_uid() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomImageSOPInstanceUIDResponse.sop_instance_uid)
  return sop_instance_uid_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void DicomImageSOPInstanceUIDResponse::set_allocated_sop_instance_uid(std::string* sop_instance_uid) {
  if (sop_instance_uid != nullptr) {
    
  } else {
    
  }
  sop_instance_uid_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sop_instance_uid,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomImageSOPInstanceUIDResponse.sop_instance_uid)
}

// -------------------------------------------------------------------

// DicomImageCompletePathResponse

// .osirixgrpc.Status status = 1;
inline bool DicomImageCompletePathResponse::_internal_has_status() const {
  return this != internal_default_instance() && status_ != nullptr;
}
inline bool DicomImageCompletePathResponse::has_status() const {
  return _internal_has_status();
}
inline const ::osirixgrpc::Status& DicomImageCompletePathResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DicomImageCompletePathResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomImageCompletePathResponse.status)
  return _internal_status();
}
inline void DicomImageCompletePathResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomImageCompletePathResponse.status)
}
inline ::osirixgrpc::Status* DicomImageCompletePathResponse::release_status() {
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::Status* DicomImageCompletePathResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomImageCompletePathResponse.status)
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DicomImageCompletePathResponse::_internal_mutable_status() {
  
  if (status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    status_ = p;
  }
  return status_;
}
inline ::osirixgrpc::Status* DicomImageCompletePathResponse::mutable_status() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomImageCompletePathResponse.status)
  return _internal_mutable_status();
}
inline void DicomImageCompletePathResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status)->GetArena();
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomImageCompletePathResponse.status)
}

// string path_name = 2;
inline void DicomImageCompletePathResponse::clear_path_name() {
  path_name_.ClearToEmpty();
}
inline const std::string& DicomImageCompletePathResponse::path_name() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomImageCompletePathResponse.path_name)
  return _internal_path_name();
}
inline void DicomImageCompletePathResponse::set_path_name(const std::string& value) {
  _internal_set_path_name(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomImageCompletePathResponse.path_name)
}
inline std::string* DicomImageCompletePathResponse::mutable_path_name() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomImageCompletePathResponse.path_name)
  return _internal_mutable_path_name();
}
inline const std::string& DicomImageCompletePathResponse::_internal_path_name() const {
  return path_name_.Get();
}
inline void DicomImageCompletePathResponse::_internal_set_path_name(const std::string& value) {
  
  path_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void DicomImageCompletePathResponse::set_path_name(std::string&& value) {
  
  path_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:osirixgrpc.DicomImageCompletePathResponse.path_name)
}
inline void DicomImageCompletePathResponse::set_path_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  path_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:osirixgrpc.DicomImageCompletePathResponse.path_name)
}
inline void DicomImageCompletePathResponse::set_path_name(const char* value,
    size_t size) {
  
  path_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:osirixgrpc.DicomImageCompletePathResponse.path_name)
}
inline std::string* DicomImageCompletePathResponse::_internal_mutable_path_name() {
  
  return path_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* DicomImageCompletePathResponse::release_path_name() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomImageCompletePathResponse.path_name)
  return path_name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void DicomImageCompletePathResponse::set_allocated_path_name(std::string* path_name) {
  if (path_name != nullptr) {
    
  } else {
    
  }
  path_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), path_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomImageCompletePathResponse.path_name)
}

// -------------------------------------------------------------------

// DicomImageDateResponse

// .osirixgrpc.Status status = 1;
inline bool DicomImageDateResponse::_internal_has_status() const {
  return this != internal_default_instance() && status_ != nullptr;
}
inline bool DicomImageDateResponse::has_status() const {
  return _internal_has_status();
}
inline const ::osirixgrpc::Status& DicomImageDateResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DicomImageDateResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomImageDateResponse.status)
  return _internal_status();
}
inline void DicomImageDateResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomImageDateResponse.status)
}
inline ::osirixgrpc::Status* DicomImageDateResponse::release_status() {
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::Status* DicomImageDateResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomImageDateResponse.status)
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DicomImageDateResponse::_internal_mutable_status() {
  
  if (status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    status_ = p;
  }
  return status_;
}
inline ::osirixgrpc::Status* DicomImageDateResponse::mutable_status() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomImageDateResponse.status)
  return _internal_mutable_status();
}
inline void DicomImageDateResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status)->GetArena();
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomImageDateResponse.status)
}

// int32 year = 2;
inline void DicomImageDateResponse::clear_year() {
  year_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomImageDateResponse::_internal_year() const {
  return year_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomImageDateResponse::year() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomImageDateResponse.year)
  return _internal_year();
}
inline void DicomImageDateResponse::_internal_set_year(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  year_ = value;
}
inline void DicomImageDateResponse::set_year(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_year(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomImageDateResponse.year)
}

// int32 month = 3;
inline void DicomImageDateResponse::clear_month() {
  month_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomImageDateResponse::_internal_month() const {
  return month_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomImageDateResponse::month() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomImageDateResponse.month)
  return _internal_month();
}
inline void DicomImageDateResponse::_internal_set_month(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  month_ = value;
}
inline void DicomImageDateResponse::set_month(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_month(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomImageDateResponse.month)
}

// int32 day = 4;
inline void DicomImageDateResponse::clear_day() {
  day_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomImageDateResponse::_internal_day() const {
  return day_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomImageDateResponse::day() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomImageDateResponse.day)
  return _internal_day();
}
inline void DicomImageDateResponse::_internal_set_day(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  day_ = value;
}
inline void DicomImageDateResponse::set_day(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_day(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomImageDateResponse.day)
}

// int32 hour = 5;
inline void DicomImageDateResponse::clear_hour() {
  hour_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomImageDateResponse::_internal_hour() const {
  return hour_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomImageDateResponse::hour() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomImageDateResponse.hour)
  return _internal_hour();
}
inline void DicomImageDateResponse::_internal_set_hour(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  hour_ = value;
}
inline void DicomImageDateResponse::set_hour(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_hour(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomImageDateResponse.hour)
}

// int32 minute = 6;
inline void DicomImageDateResponse::clear_minute() {
  minute_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomImageDateResponse::_internal_minute() const {
  return minute_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomImageDateResponse::minute() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomImageDateResponse.minute)
  return _internal_minute();
}
inline void DicomImageDateResponse::_internal_set_minute(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  minute_ = value;
}
inline void DicomImageDateResponse::set_minute(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_minute(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomImageDateResponse.minute)
}

// int32 second = 7;
inline void DicomImageDateResponse::clear_second() {
  second_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomImageDateResponse::_internal_second() const {
  return second_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomImageDateResponse::second() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomImageDateResponse.second)
  return _internal_second();
}
inline void DicomImageDateResponse::_internal_set_second(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  second_ = value;
}
inline void DicomImageDateResponse::set_second(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_second(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomImageDateResponse.second)
}

// int32 millisecond = 8;
inline void DicomImageDateResponse::clear_millisecond() {
  millisecond_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomImageDateResponse::_internal_millisecond() const {
  return millisecond_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DicomImageDateResponse::millisecond() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomImageDateResponse.millisecond)
  return _internal_millisecond();
}
inline void DicomImageDateResponse::_internal_set_millisecond(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  millisecond_ = value;
}
inline void DicomImageDateResponse::set_millisecond(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_millisecond(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomImageDateResponse.millisecond)
}

// -------------------------------------------------------------------

// DicomImageNumberOfFramesResponse

// .osirixgrpc.Status status = 1;
inline bool DicomImageNumberOfFramesResponse::_internal_has_status() const {
  return this != internal_default_instance() && status_ != nullptr;
}
inline bool DicomImageNumberOfFramesResponse::has_status() const {
  return _internal_has_status();
}
inline const ::osirixgrpc::Status& DicomImageNumberOfFramesResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DicomImageNumberOfFramesResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomImageNumberOfFramesResponse.status)
  return _internal_status();
}
inline void DicomImageNumberOfFramesResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomImageNumberOfFramesResponse.status)
}
inline ::osirixgrpc::Status* DicomImageNumberOfFramesResponse::release_status() {
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::Status* DicomImageNumberOfFramesResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomImageNumberOfFramesResponse.status)
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DicomImageNumberOfFramesResponse::_internal_mutable_status() {
  
  if (status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    status_ = p;
  }
  return status_;
}
inline ::osirixgrpc::Status* DicomImageNumberOfFramesResponse::mutable_status() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomImageNumberOfFramesResponse.status)
  return _internal_mutable_status();
}
inline void DicomImageNumberOfFramesResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status)->GetArena();
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomImageNumberOfFramesResponse.status)
}

// uint32 number_of_frames = 2;
inline void DicomImageNumberOfFramesResponse::clear_number_of_frames() {
  number_of_frames_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DicomImageNumberOfFramesResponse::_internal_number_of_frames() const {
  return number_of_frames_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DicomImageNumberOfFramesResponse::number_of_frames() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomImageNumberOfFramesResponse.number_of_frames)
  return _internal_number_of_frames();
}
inline void DicomImageNumberOfFramesResponse::_internal_set_number_of_frames(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  number_of_frames_ = value;
}
inline void DicomImageNumberOfFramesResponse::set_number_of_frames(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_number_of_frames(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomImageNumberOfFramesResponse.number_of_frames)
}

// -------------------------------------------------------------------

// DicomImageModalityResponse

// .osirixgrpc.Status status = 1;
inline bool DicomImageModalityResponse::_internal_has_status() const {
  return this != internal_default_instance() && status_ != nullptr;
}
inline bool DicomImageModalityResponse::has_status() const {
  return _internal_has_status();
}
inline const ::osirixgrpc::Status& DicomImageModalityResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DicomImageModalityResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomImageModalityResponse.status)
  return _internal_status();
}
inline void DicomImageModalityResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomImageModalityResponse.status)
}
inline ::osirixgrpc::Status* DicomImageModalityResponse::release_status() {
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::Status* DicomImageModalityResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomImageModalityResponse.status)
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DicomImageModalityResponse::_internal_mutable_status() {
  
  if (status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    status_ = p;
  }
  return status_;
}
inline ::osirixgrpc::Status* DicomImageModalityResponse::mutable_status() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomImageModalityResponse.status)
  return _internal_mutable_status();
}
inline void DicomImageModalityResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status)->GetArena();
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomImageModalityResponse.status)
}

// string modality = 2;
inline void DicomImageModalityResponse::clear_modality() {
  modality_.ClearToEmpty();
}
inline const std::string& DicomImageModalityResponse::modality() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomImageModalityResponse.modality)
  return _internal_modality();
}
inline void DicomImageModalityResponse::set_modality(const std::string& value) {
  _internal_set_modality(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomImageModalityResponse.modality)
}
inline std::string* DicomImageModalityResponse::mutable_modality() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomImageModalityResponse.modality)
  return _internal_mutable_modality();
}
inline const std::string& DicomImageModalityResponse::_internal_modality() const {
  return modality_.Get();
}
inline void DicomImageModalityResponse::_internal_set_modality(const std::string& value) {
  
  modality_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void DicomImageModalityResponse::set_modality(std::string&& value) {
  
  modality_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:osirixgrpc.DicomImageModalityResponse.modality)
}
inline void DicomImageModalityResponse::set_modality(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  modality_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:osirixgrpc.DicomImageModalityResponse.modality)
}
inline void DicomImageModalityResponse::set_modality(const char* value,
    size_t size) {
  
  modality_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:osirixgrpc.DicomImageModalityResponse.modality)
}
inline std::string* DicomImageModalityResponse::_internal_mutable_modality() {
  
  return modality_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* DicomImageModalityResponse::release_modality() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomImageModalityResponse.modality)
  return modality_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void DicomImageModalityResponse::set_allocated_modality(std::string* modality) {
  if (modality != nullptr) {
    
  } else {
    
  }
  modality_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), modality,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomImageModalityResponse.modality)
}

// -------------------------------------------------------------------

// DicomImageSeriesResponse

// .osirixgrpc.Status status = 1;
inline bool DicomImageSeriesResponse::_internal_has_status() const {
  return this != internal_default_instance() && status_ != nullptr;
}
inline bool DicomImageSeriesResponse::has_status() const {
  return _internal_has_status();
}
inline const ::osirixgrpc::Status& DicomImageSeriesResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DicomImageSeriesResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomImageSeriesResponse.status)
  return _internal_status();
}
inline void DicomImageSeriesResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomImageSeriesResponse.status)
}
inline ::osirixgrpc::Status* DicomImageSeriesResponse::release_status() {
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::Status* DicomImageSeriesResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomImageSeriesResponse.status)
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DicomImageSeriesResponse::_internal_mutable_status() {
  
  if (status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    status_ = p;
  }
  return status_;
}
inline ::osirixgrpc::Status* DicomImageSeriesResponse::mutable_status() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomImageSeriesResponse.status)
  return _internal_mutable_status();
}
inline void DicomImageSeriesResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status)->GetArena();
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomImageSeriesResponse.status)
}

// .osirixgrpc.DicomSeries series = 2;
inline bool DicomImageSeriesResponse::_internal_has_series() const {
  return this != internal_default_instance() && series_ != nullptr;
}
inline bool DicomImageSeriesResponse::has_series() const {
  return _internal_has_series();
}
inline const ::osirixgrpc::DicomSeries& DicomImageSeriesResponse::_internal_series() const {
  const ::osirixgrpc::DicomSeries* p = series_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::DicomSeries&>(
      ::osirixgrpc::_DicomSeries_default_instance_);
}
inline const ::osirixgrpc::DicomSeries& DicomImageSeriesResponse::series() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomImageSeriesResponse.series)
  return _internal_series();
}
inline void DicomImageSeriesResponse::unsafe_arena_set_allocated_series(
    ::osirixgrpc::DicomSeries* series) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(series_);
  }
  series_ = series;
  if (series) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomImageSeriesResponse.series)
}
inline ::osirixgrpc::DicomSeries* DicomImageSeriesResponse::release_series() {
  
  ::osirixgrpc::DicomSeries* temp = series_;
  series_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::DicomSeries* DicomImageSeriesResponse::unsafe_arena_release_series() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomImageSeriesResponse.series)
  
  ::osirixgrpc::DicomSeries* temp = series_;
  series_ = nullptr;
  return temp;
}
inline ::osirixgrpc::DicomSeries* DicomImageSeriesResponse::_internal_mutable_series() {
  
  if (series_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::DicomSeries>(GetArena());
    series_ = p;
  }
  return series_;
}
inline ::osirixgrpc::DicomSeries* DicomImageSeriesResponse::mutable_series() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomImageSeriesResponse.series)
  return _internal_mutable_series();
}
inline void DicomImageSeriesResponse::set_allocated_series(::osirixgrpc::DicomSeries* series) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(series_);
  }
  if (series) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(series)->GetArena();
    if (message_arena != submessage_arena) {
      series = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, series, submessage_arena);
    }
    
  } else {
    
  }
  series_ = series;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomImageSeriesResponse.series)
}

// -------------------------------------------------------------------

// DicomImageSliceLocationResponse

// .osirixgrpc.Status status = 1;
inline bool DicomImageSliceLocationResponse::_internal_has_status() const {
  return this != internal_default_instance() && status_ != nullptr;
}
inline bool DicomImageSliceLocationResponse::has_status() const {
  return _internal_has_status();
}
inline const ::osirixgrpc::Status& DicomImageSliceLocationResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DicomImageSliceLocationResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomImageSliceLocationResponse.status)
  return _internal_status();
}
inline void DicomImageSliceLocationResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomImageSliceLocationResponse.status)
}
inline ::osirixgrpc::Status* DicomImageSliceLocationResponse::release_status() {
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::Status* DicomImageSliceLocationResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomImageSliceLocationResponse.status)
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DicomImageSliceLocationResponse::_internal_mutable_status() {
  
  if (status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    status_ = p;
  }
  return status_;
}
inline ::osirixgrpc::Status* DicomImageSliceLocationResponse::mutable_status() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomImageSliceLocationResponse.status)
  return _internal_mutable_status();
}
inline void DicomImageSliceLocationResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status)->GetArena();
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomImageSliceLocationResponse.status)
}

// float slice_locations = 2;
inline void DicomImageSliceLocationResponse::clear_slice_locations() {
  slice_locations_ = 0;
}
inline float DicomImageSliceLocationResponse::_internal_slice_locations() const {
  return slice_locations_;
}
inline float DicomImageSliceLocationResponse::slice_locations() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomImageSliceLocationResponse.slice_locations)
  return _internal_slice_locations();
}
inline void DicomImageSliceLocationResponse::_internal_set_slice_locations(float value) {
  
  slice_locations_ = value;
}
inline void DicomImageSliceLocationResponse::set_slice_locations(float value) {
  _internal_set_slice_locations(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomImageSliceLocationResponse.slice_locations)
}

// -------------------------------------------------------------------

// DicomImageInstanceNumberResponse

// .osirixgrpc.Status status = 1;
inline bool DicomImageInstanceNumberResponse::_internal_has_status() const {
  return this != internal_default_instance() && status_ != nullptr;
}
inline bool DicomImageInstanceNumberResponse::has_status() const {
  return _internal_has_status();
}
inline const ::osirixgrpc::Status& DicomImageInstanceNumberResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& DicomImageInstanceNumberResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomImageInstanceNumberResponse.status)
  return _internal_status();
}
inline void DicomImageInstanceNumberResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.DicomImageInstanceNumberResponse.status)
}
inline ::osirixgrpc::Status* DicomImageInstanceNumberResponse::release_status() {
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::Status* DicomImageInstanceNumberResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.DicomImageInstanceNumberResponse.status)
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* DicomImageInstanceNumberResponse::_internal_mutable_status() {
  
  if (status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    status_ = p;
  }
  return status_;
}
inline ::osirixgrpc::Status* DicomImageInstanceNumberResponse::mutable_status() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.DicomImageInstanceNumberResponse.status)
  return _internal_mutable_status();
}
inline void DicomImageInstanceNumberResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status)->GetArena();
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.DicomImageInstanceNumberResponse.status)
}

// uint32 instance_number = 2;
inline void DicomImageInstanceNumberResponse::clear_instance_number() {
  instance_number_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DicomImageInstanceNumberResponse::_internal_instance_number() const {
  return instance_number_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DicomImageInstanceNumberResponse::instance_number() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.DicomImageInstanceNumberResponse.instance_number)
  return _internal_instance_number();
}
inline void DicomImageInstanceNumberResponse::_internal_set_instance_number(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  instance_number_ = value;
}
inline void DicomImageInstanceNumberResponse::set_instance_number(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_instance_number(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.DicomImageInstanceNumberResponse.instance_number)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace osirixgrpc

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_dicomimage_2eproto
