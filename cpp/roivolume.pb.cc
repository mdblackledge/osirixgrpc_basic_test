// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: roivolume.proto

#include "roivolume.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_types_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ROIVolume_types_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_utilities_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Status_utilities_2eproto;
namespace osirixgrpc {
class ROIVolumeTextureResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ROIVolumeTextureResponse> _instance;
} _ROIVolumeTextureResponse_default_instance_;
class ROIVolumeVolumeResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ROIVolumeVolumeResponse> _instance;
} _ROIVolumeVolumeResponse_default_instance_;
class ROIVolumeColorResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ROIVolumeColorResponse> _instance;
} _ROIVolumeColorResponse_default_instance_;
class ROIVolumeOpacityResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ROIVolumeOpacityResponse> _instance;
} _ROIVolumeOpacityResponse_default_instance_;
class ROIVolumeFactorResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ROIVolumeFactorResponse> _instance;
} _ROIVolumeFactorResponse_default_instance_;
class ROIVolumeVisibleResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ROIVolumeVisibleResponse> _instance;
} _ROIVolumeVisibleResponse_default_instance_;
class ROIVolumeNameResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ROIVolumeNameResponse> _instance;
} _ROIVolumeNameResponse_default_instance_;
class ROIVolumeSetTextureRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ROIVolumeSetTextureRequest> _instance;
} _ROIVolumeSetTextureRequest_default_instance_;
class ROIVolumeSetColorRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ROIVolumeSetColorRequest> _instance;
} _ROIVolumeSetColorRequest_default_instance_;
class ROIVolumeSetOpacityRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ROIVolumeSetOpacityRequest> _instance;
} _ROIVolumeSetOpacityRequest_default_instance_;
class ROIVolumeSetFactorRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ROIVolumeSetFactorRequest> _instance;
} _ROIVolumeSetFactorRequest_default_instance_;
}  // namespace osirixgrpc
static void InitDefaultsscc_info_ROIVolumeColorResponse_roivolume_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_ROIVolumeColorResponse_default_instance_;
    new (ptr) ::osirixgrpc::ROIVolumeColorResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ROIVolumeColorResponse_roivolume_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ROIVolumeColorResponse_roivolume_2eproto}, {
      &scc_info_Status_utilities_2eproto.base,}};

static void InitDefaultsscc_info_ROIVolumeFactorResponse_roivolume_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_ROIVolumeFactorResponse_default_instance_;
    new (ptr) ::osirixgrpc::ROIVolumeFactorResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ROIVolumeFactorResponse_roivolume_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ROIVolumeFactorResponse_roivolume_2eproto}, {
      &scc_info_Status_utilities_2eproto.base,}};

static void InitDefaultsscc_info_ROIVolumeNameResponse_roivolume_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_ROIVolumeNameResponse_default_instance_;
    new (ptr) ::osirixgrpc::ROIVolumeNameResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ROIVolumeNameResponse_roivolume_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ROIVolumeNameResponse_roivolume_2eproto}, {
      &scc_info_Status_utilities_2eproto.base,}};

static void InitDefaultsscc_info_ROIVolumeOpacityResponse_roivolume_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_ROIVolumeOpacityResponse_default_instance_;
    new (ptr) ::osirixgrpc::ROIVolumeOpacityResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ROIVolumeOpacityResponse_roivolume_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ROIVolumeOpacityResponse_roivolume_2eproto}, {
      &scc_info_Status_utilities_2eproto.base,}};

static void InitDefaultsscc_info_ROIVolumeSetColorRequest_roivolume_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_ROIVolumeSetColorRequest_default_instance_;
    new (ptr) ::osirixgrpc::ROIVolumeSetColorRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ROIVolumeSetColorRequest_roivolume_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ROIVolumeSetColorRequest_roivolume_2eproto}, {
      &scc_info_ROIVolume_types_2eproto.base,}};

static void InitDefaultsscc_info_ROIVolumeSetFactorRequest_roivolume_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_ROIVolumeSetFactorRequest_default_instance_;
    new (ptr) ::osirixgrpc::ROIVolumeSetFactorRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ROIVolumeSetFactorRequest_roivolume_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ROIVolumeSetFactorRequest_roivolume_2eproto}, {
      &scc_info_ROIVolume_types_2eproto.base,}};

static void InitDefaultsscc_info_ROIVolumeSetOpacityRequest_roivolume_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_ROIVolumeSetOpacityRequest_default_instance_;
    new (ptr) ::osirixgrpc::ROIVolumeSetOpacityRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ROIVolumeSetOpacityRequest_roivolume_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ROIVolumeSetOpacityRequest_roivolume_2eproto}, {
      &scc_info_ROIVolume_types_2eproto.base,}};

static void InitDefaultsscc_info_ROIVolumeSetTextureRequest_roivolume_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_ROIVolumeSetTextureRequest_default_instance_;
    new (ptr) ::osirixgrpc::ROIVolumeSetTextureRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ROIVolumeSetTextureRequest_roivolume_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ROIVolumeSetTextureRequest_roivolume_2eproto}, {
      &scc_info_ROIVolume_types_2eproto.base,}};

static void InitDefaultsscc_info_ROIVolumeTextureResponse_roivolume_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_ROIVolumeTextureResponse_default_instance_;
    new (ptr) ::osirixgrpc::ROIVolumeTextureResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ROIVolumeTextureResponse_roivolume_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ROIVolumeTextureResponse_roivolume_2eproto}, {
      &scc_info_Status_utilities_2eproto.base,}};

static void InitDefaultsscc_info_ROIVolumeVisibleResponse_roivolume_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_ROIVolumeVisibleResponse_default_instance_;
    new (ptr) ::osirixgrpc::ROIVolumeVisibleResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ROIVolumeVisibleResponse_roivolume_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ROIVolumeVisibleResponse_roivolume_2eproto}, {
      &scc_info_Status_utilities_2eproto.base,}};

static void InitDefaultsscc_info_ROIVolumeVolumeResponse_roivolume_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::osirixgrpc::_ROIVolumeVolumeResponse_default_instance_;
    new (ptr) ::osirixgrpc::ROIVolumeVolumeResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ROIVolumeVolumeResponse_roivolume_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ROIVolumeVolumeResponse_roivolume_2eproto}, {
      &scc_info_Status_utilities_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_roivolume_2eproto[11];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_roivolume_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_roivolume_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_roivolume_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ROIVolumeTextureResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ROIVolumeTextureResponse, status_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ROIVolumeTextureResponse, texture_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ROIVolumeVolumeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ROIVolumeVolumeResponse, status_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ROIVolumeVolumeResponse, volume_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ROIVolumeColorResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ROIVolumeColorResponse, status_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ROIVolumeColorResponse, r_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ROIVolumeColorResponse, g_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ROIVolumeColorResponse, b_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ROIVolumeOpacityResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ROIVolumeOpacityResponse, status_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ROIVolumeOpacityResponse, opacity_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ROIVolumeFactorResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ROIVolumeFactorResponse, status_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ROIVolumeFactorResponse, factor_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ROIVolumeVisibleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ROIVolumeVisibleResponse, status_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ROIVolumeVisibleResponse, visible_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ROIVolumeNameResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ROIVolumeNameResponse, status_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ROIVolumeNameResponse, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ROIVolumeSetTextureRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ROIVolumeSetTextureRequest, roi_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ROIVolumeSetTextureRequest, texture_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ROIVolumeSetColorRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ROIVolumeSetColorRequest, roi_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ROIVolumeSetColorRequest, r_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ROIVolumeSetColorRequest, g_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ROIVolumeSetColorRequest, b_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ROIVolumeSetOpacityRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ROIVolumeSetOpacityRequest, roi_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ROIVolumeSetOpacityRequest, opacity_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ROIVolumeSetFactorRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ROIVolumeSetFactorRequest, roi_),
  PROTOBUF_FIELD_OFFSET(::osirixgrpc::ROIVolumeSetFactorRequest, factor_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::osirixgrpc::ROIVolumeTextureResponse)},
  { 7, -1, sizeof(::osirixgrpc::ROIVolumeVolumeResponse)},
  { 14, -1, sizeof(::osirixgrpc::ROIVolumeColorResponse)},
  { 23, -1, sizeof(::osirixgrpc::ROIVolumeOpacityResponse)},
  { 30, -1, sizeof(::osirixgrpc::ROIVolumeFactorResponse)},
  { 37, -1, sizeof(::osirixgrpc::ROIVolumeVisibleResponse)},
  { 44, -1, sizeof(::osirixgrpc::ROIVolumeNameResponse)},
  { 51, -1, sizeof(::osirixgrpc::ROIVolumeSetTextureRequest)},
  { 58, -1, sizeof(::osirixgrpc::ROIVolumeSetColorRequest)},
  { 67, -1, sizeof(::osirixgrpc::ROIVolumeSetOpacityRequest)},
  { 74, -1, sizeof(::osirixgrpc::ROIVolumeSetFactorRequest)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_ROIVolumeTextureResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_ROIVolumeVolumeResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_ROIVolumeColorResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_ROIVolumeOpacityResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_ROIVolumeFactorResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_ROIVolumeVisibleResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_ROIVolumeNameResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_ROIVolumeSetTextureRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_ROIVolumeSetColorRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_ROIVolumeSetOpacityRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::osirixgrpc::_ROIVolumeSetFactorRequest_default_instance_),
};

const char descriptor_table_protodef_roivolume_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\017roivolume.proto\022\nosirixgrpc\032\017utilities"
  ".proto\032\013types.proto\"O\n\030ROIVolumeTextureR"
  "esponse\022\"\n\006status\030\001 \001(\0132\022.osirixgrpc.Sta"
  "tus\022\017\n\007texture\030\002 \001(\010\"M\n\027ROIVolumeVolumeR"
  "esponse\022\"\n\006status\030\001 \001(\0132\022.osirixgrpc.Sta"
  "tus\022\016\n\006volume\030\002 \001(\002\"]\n\026ROIVolumeColorRes"
  "ponse\022\"\n\006status\030\001 \001(\0132\022.osirixgrpc.Statu"
  "s\022\t\n\001r\030\002 \001(\002\022\t\n\001g\030\003 \001(\002\022\t\n\001b\030\004 \001(\002\"O\n\030RO"
  "IVolumeOpacityResponse\022\"\n\006status\030\001 \001(\0132\022"
  ".osirixgrpc.Status\022\017\n\007opacity\030\002 \001(\002\"M\n\027R"
  "OIVolumeFactorResponse\022\"\n\006status\030\001 \001(\0132\022"
  ".osirixgrpc.Status\022\016\n\006factor\030\002 \001(\002\"O\n\030RO"
  "IVolumeVisibleResponse\022\"\n\006status\030\001 \001(\0132\022"
  ".osirixgrpc.Status\022\017\n\007visible\030\002 \001(\010\"I\n\025R"
  "OIVolumeNameResponse\022\"\n\006status\030\001 \001(\0132\022.o"
  "sirixgrpc.Status\022\014\n\004name\030\002 \001(\t\"Q\n\032ROIVol"
  "umeSetTextureRequest\022\"\n\003roi\030\001 \001(\0132\025.osir"
  "ixgrpc.ROIVolume\022\017\n\007texture\030\002 \001(\010\"_\n\030ROI"
  "VolumeSetColorRequest\022\"\n\003roi\030\001 \001(\0132\025.osi"
  "rixgrpc.ROIVolume\022\t\n\001r\030\002 \001(\002\022\t\n\001g\030\003 \001(\002\022"
  "\t\n\001b\030\004 \001(\002\"Q\n\032ROIVolumeSetOpacityRequest"
  "\022\"\n\003roi\030\001 \001(\0132\025.osirixgrpc.ROIVolume\022\017\n\007"
  "opacity\030\002 \001(\002\"O\n\031ROIVolumeSetFactorReque"
  "st\022\"\n\003roi\030\001 \001(\0132\025.osirixgrpc.ROIVolume\022\016"
  "\n\006factor\030\002 \001(\002b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_roivolume_2eproto_deps[2] = {
  &::descriptor_table_types_2eproto,
  &::descriptor_table_utilities_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_roivolume_2eproto_sccs[11] = {
  &scc_info_ROIVolumeColorResponse_roivolume_2eproto.base,
  &scc_info_ROIVolumeFactorResponse_roivolume_2eproto.base,
  &scc_info_ROIVolumeNameResponse_roivolume_2eproto.base,
  &scc_info_ROIVolumeOpacityResponse_roivolume_2eproto.base,
  &scc_info_ROIVolumeSetColorRequest_roivolume_2eproto.base,
  &scc_info_ROIVolumeSetFactorRequest_roivolume_2eproto.base,
  &scc_info_ROIVolumeSetOpacityRequest_roivolume_2eproto.base,
  &scc_info_ROIVolumeSetTextureRequest_roivolume_2eproto.base,
  &scc_info_ROIVolumeTextureResponse_roivolume_2eproto.base,
  &scc_info_ROIVolumeVisibleResponse_roivolume_2eproto.base,
  &scc_info_ROIVolumeVolumeResponse_roivolume_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_roivolume_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_roivolume_2eproto = {
  false, false, descriptor_table_protodef_roivolume_2eproto, "roivolume.proto", 982,
  &descriptor_table_roivolume_2eproto_once, descriptor_table_roivolume_2eproto_sccs, descriptor_table_roivolume_2eproto_deps, 11, 2,
  schemas, file_default_instances, TableStruct_roivolume_2eproto::offsets,
  file_level_metadata_roivolume_2eproto, 11, file_level_enum_descriptors_roivolume_2eproto, file_level_service_descriptors_roivolume_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_roivolume_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_roivolume_2eproto)), true);
namespace osirixgrpc {

// ===================================================================

class ROIVolumeTextureResponse::_Internal {
 public:
  static const ::osirixgrpc::Status& status(const ROIVolumeTextureResponse* msg);
};

const ::osirixgrpc::Status&
ROIVolumeTextureResponse::_Internal::status(const ROIVolumeTextureResponse* msg) {
  return *msg->status_;
}
void ROIVolumeTextureResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
ROIVolumeTextureResponse::ROIVolumeTextureResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ROIVolumeTextureResponse)
}
ROIVolumeTextureResponse::ROIVolumeTextureResponse(const ROIVolumeTextureResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::osirixgrpc::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  texture_ = from.texture_;
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ROIVolumeTextureResponse)
}

void ROIVolumeTextureResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ROIVolumeTextureResponse_roivolume_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&texture_) -
      reinterpret_cast<char*>(&status_)) + sizeof(texture_));
}

ROIVolumeTextureResponse::~ROIVolumeTextureResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ROIVolumeTextureResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ROIVolumeTextureResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void ROIVolumeTextureResponse::ArenaDtor(void* object) {
  ROIVolumeTextureResponse* _this = reinterpret_cast< ROIVolumeTextureResponse* >(object);
  (void)_this;
}
void ROIVolumeTextureResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ROIVolumeTextureResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ROIVolumeTextureResponse& ROIVolumeTextureResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ROIVolumeTextureResponse_roivolume_2eproto.base);
  return *internal_default_instance();
}


void ROIVolumeTextureResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ROIVolumeTextureResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  texture_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ROIVolumeTextureResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool texture = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          texture_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ROIVolumeTextureResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ROIVolumeTextureResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // bool texture = 2;
  if (this->texture() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_texture(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ROIVolumeTextureResponse)
  return target;
}

size_t ROIVolumeTextureResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ROIVolumeTextureResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // bool texture = 2;
  if (this->texture() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ROIVolumeTextureResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.ROIVolumeTextureResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ROIVolumeTextureResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ROIVolumeTextureResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.ROIVolumeTextureResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.ROIVolumeTextureResponse)
    MergeFrom(*source);
  }
}

void ROIVolumeTextureResponse::MergeFrom(const ROIVolumeTextureResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ROIVolumeTextureResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::osirixgrpc::Status::MergeFrom(from._internal_status());
  }
  if (from.texture() != 0) {
    _internal_set_texture(from._internal_texture());
  }
}

void ROIVolumeTextureResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.ROIVolumeTextureResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ROIVolumeTextureResponse::CopyFrom(const ROIVolumeTextureResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ROIVolumeTextureResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ROIVolumeTextureResponse::IsInitialized() const {
  return true;
}

void ROIVolumeTextureResponse::InternalSwap(ROIVolumeTextureResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ROIVolumeTextureResponse, texture_)
      + sizeof(ROIVolumeTextureResponse::texture_)
      - PROTOBUF_FIELD_OFFSET(ROIVolumeTextureResponse, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ROIVolumeTextureResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ROIVolumeVolumeResponse::_Internal {
 public:
  static const ::osirixgrpc::Status& status(const ROIVolumeVolumeResponse* msg);
};

const ::osirixgrpc::Status&
ROIVolumeVolumeResponse::_Internal::status(const ROIVolumeVolumeResponse* msg) {
  return *msg->status_;
}
void ROIVolumeVolumeResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
ROIVolumeVolumeResponse::ROIVolumeVolumeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ROIVolumeVolumeResponse)
}
ROIVolumeVolumeResponse::ROIVolumeVolumeResponse(const ROIVolumeVolumeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::osirixgrpc::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  volume_ = from.volume_;
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ROIVolumeVolumeResponse)
}

void ROIVolumeVolumeResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ROIVolumeVolumeResponse_roivolume_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&volume_) -
      reinterpret_cast<char*>(&status_)) + sizeof(volume_));
}

ROIVolumeVolumeResponse::~ROIVolumeVolumeResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ROIVolumeVolumeResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ROIVolumeVolumeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void ROIVolumeVolumeResponse::ArenaDtor(void* object) {
  ROIVolumeVolumeResponse* _this = reinterpret_cast< ROIVolumeVolumeResponse* >(object);
  (void)_this;
}
void ROIVolumeVolumeResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ROIVolumeVolumeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ROIVolumeVolumeResponse& ROIVolumeVolumeResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ROIVolumeVolumeResponse_roivolume_2eproto.base);
  return *internal_default_instance();
}


void ROIVolumeVolumeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ROIVolumeVolumeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  volume_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ROIVolumeVolumeResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float volume = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          volume_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ROIVolumeVolumeResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ROIVolumeVolumeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // float volume = 2;
  if (!(this->volume() <= 0 && this->volume() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_volume(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ROIVolumeVolumeResponse)
  return target;
}

size_t ROIVolumeVolumeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ROIVolumeVolumeResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // float volume = 2;
  if (!(this->volume() <= 0 && this->volume() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ROIVolumeVolumeResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.ROIVolumeVolumeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ROIVolumeVolumeResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ROIVolumeVolumeResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.ROIVolumeVolumeResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.ROIVolumeVolumeResponse)
    MergeFrom(*source);
  }
}

void ROIVolumeVolumeResponse::MergeFrom(const ROIVolumeVolumeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ROIVolumeVolumeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::osirixgrpc::Status::MergeFrom(from._internal_status());
  }
  if (!(from.volume() <= 0 && from.volume() >= 0)) {
    _internal_set_volume(from._internal_volume());
  }
}

void ROIVolumeVolumeResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.ROIVolumeVolumeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ROIVolumeVolumeResponse::CopyFrom(const ROIVolumeVolumeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ROIVolumeVolumeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ROIVolumeVolumeResponse::IsInitialized() const {
  return true;
}

void ROIVolumeVolumeResponse::InternalSwap(ROIVolumeVolumeResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ROIVolumeVolumeResponse, volume_)
      + sizeof(ROIVolumeVolumeResponse::volume_)
      - PROTOBUF_FIELD_OFFSET(ROIVolumeVolumeResponse, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ROIVolumeVolumeResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ROIVolumeColorResponse::_Internal {
 public:
  static const ::osirixgrpc::Status& status(const ROIVolumeColorResponse* msg);
};

const ::osirixgrpc::Status&
ROIVolumeColorResponse::_Internal::status(const ROIVolumeColorResponse* msg) {
  return *msg->status_;
}
void ROIVolumeColorResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
ROIVolumeColorResponse::ROIVolumeColorResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ROIVolumeColorResponse)
}
ROIVolumeColorResponse::ROIVolumeColorResponse(const ROIVolumeColorResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::osirixgrpc::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  ::memcpy(&r_, &from.r_,
    static_cast<size_t>(reinterpret_cast<char*>(&b_) -
    reinterpret_cast<char*>(&r_)) + sizeof(b_));
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ROIVolumeColorResponse)
}

void ROIVolumeColorResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ROIVolumeColorResponse_roivolume_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&b_) -
      reinterpret_cast<char*>(&status_)) + sizeof(b_));
}

ROIVolumeColorResponse::~ROIVolumeColorResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ROIVolumeColorResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ROIVolumeColorResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void ROIVolumeColorResponse::ArenaDtor(void* object) {
  ROIVolumeColorResponse* _this = reinterpret_cast< ROIVolumeColorResponse* >(object);
  (void)_this;
}
void ROIVolumeColorResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ROIVolumeColorResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ROIVolumeColorResponse& ROIVolumeColorResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ROIVolumeColorResponse_roivolume_2eproto.base);
  return *internal_default_instance();
}


void ROIVolumeColorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ROIVolumeColorResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  ::memset(&r_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&b_) -
      reinterpret_cast<char*>(&r_)) + sizeof(b_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ROIVolumeColorResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float r = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          r_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float g = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29)) {
          g_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float b = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 37)) {
          b_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ROIVolumeColorResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ROIVolumeColorResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // float r = 2;
  if (!(this->r() <= 0 && this->r() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_r(), target);
  }

  // float g = 3;
  if (!(this->g() <= 0 && this->g() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3, this->_internal_g(), target);
  }

  // float b = 4;
  if (!(this->b() <= 0 && this->b() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(4, this->_internal_b(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ROIVolumeColorResponse)
  return target;
}

size_t ROIVolumeColorResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ROIVolumeColorResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // float r = 2;
  if (!(this->r() <= 0 && this->r() >= 0)) {
    total_size += 1 + 4;
  }

  // float g = 3;
  if (!(this->g() <= 0 && this->g() >= 0)) {
    total_size += 1 + 4;
  }

  // float b = 4;
  if (!(this->b() <= 0 && this->b() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ROIVolumeColorResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.ROIVolumeColorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ROIVolumeColorResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ROIVolumeColorResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.ROIVolumeColorResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.ROIVolumeColorResponse)
    MergeFrom(*source);
  }
}

void ROIVolumeColorResponse::MergeFrom(const ROIVolumeColorResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ROIVolumeColorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::osirixgrpc::Status::MergeFrom(from._internal_status());
  }
  if (!(from.r() <= 0 && from.r() >= 0)) {
    _internal_set_r(from._internal_r());
  }
  if (!(from.g() <= 0 && from.g() >= 0)) {
    _internal_set_g(from._internal_g());
  }
  if (!(from.b() <= 0 && from.b() >= 0)) {
    _internal_set_b(from._internal_b());
  }
}

void ROIVolumeColorResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.ROIVolumeColorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ROIVolumeColorResponse::CopyFrom(const ROIVolumeColorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ROIVolumeColorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ROIVolumeColorResponse::IsInitialized() const {
  return true;
}

void ROIVolumeColorResponse::InternalSwap(ROIVolumeColorResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ROIVolumeColorResponse, b_)
      + sizeof(ROIVolumeColorResponse::b_)
      - PROTOBUF_FIELD_OFFSET(ROIVolumeColorResponse, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ROIVolumeColorResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ROIVolumeOpacityResponse::_Internal {
 public:
  static const ::osirixgrpc::Status& status(const ROIVolumeOpacityResponse* msg);
};

const ::osirixgrpc::Status&
ROIVolumeOpacityResponse::_Internal::status(const ROIVolumeOpacityResponse* msg) {
  return *msg->status_;
}
void ROIVolumeOpacityResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
ROIVolumeOpacityResponse::ROIVolumeOpacityResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ROIVolumeOpacityResponse)
}
ROIVolumeOpacityResponse::ROIVolumeOpacityResponse(const ROIVolumeOpacityResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::osirixgrpc::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  opacity_ = from.opacity_;
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ROIVolumeOpacityResponse)
}

void ROIVolumeOpacityResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ROIVolumeOpacityResponse_roivolume_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&opacity_) -
      reinterpret_cast<char*>(&status_)) + sizeof(opacity_));
}

ROIVolumeOpacityResponse::~ROIVolumeOpacityResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ROIVolumeOpacityResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ROIVolumeOpacityResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void ROIVolumeOpacityResponse::ArenaDtor(void* object) {
  ROIVolumeOpacityResponse* _this = reinterpret_cast< ROIVolumeOpacityResponse* >(object);
  (void)_this;
}
void ROIVolumeOpacityResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ROIVolumeOpacityResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ROIVolumeOpacityResponse& ROIVolumeOpacityResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ROIVolumeOpacityResponse_roivolume_2eproto.base);
  return *internal_default_instance();
}


void ROIVolumeOpacityResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ROIVolumeOpacityResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  opacity_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ROIVolumeOpacityResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float opacity = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          opacity_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ROIVolumeOpacityResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ROIVolumeOpacityResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // float opacity = 2;
  if (!(this->opacity() <= 0 && this->opacity() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_opacity(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ROIVolumeOpacityResponse)
  return target;
}

size_t ROIVolumeOpacityResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ROIVolumeOpacityResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // float opacity = 2;
  if (!(this->opacity() <= 0 && this->opacity() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ROIVolumeOpacityResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.ROIVolumeOpacityResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ROIVolumeOpacityResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ROIVolumeOpacityResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.ROIVolumeOpacityResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.ROIVolumeOpacityResponse)
    MergeFrom(*source);
  }
}

void ROIVolumeOpacityResponse::MergeFrom(const ROIVolumeOpacityResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ROIVolumeOpacityResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::osirixgrpc::Status::MergeFrom(from._internal_status());
  }
  if (!(from.opacity() <= 0 && from.opacity() >= 0)) {
    _internal_set_opacity(from._internal_opacity());
  }
}

void ROIVolumeOpacityResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.ROIVolumeOpacityResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ROIVolumeOpacityResponse::CopyFrom(const ROIVolumeOpacityResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ROIVolumeOpacityResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ROIVolumeOpacityResponse::IsInitialized() const {
  return true;
}

void ROIVolumeOpacityResponse::InternalSwap(ROIVolumeOpacityResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ROIVolumeOpacityResponse, opacity_)
      + sizeof(ROIVolumeOpacityResponse::opacity_)
      - PROTOBUF_FIELD_OFFSET(ROIVolumeOpacityResponse, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ROIVolumeOpacityResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ROIVolumeFactorResponse::_Internal {
 public:
  static const ::osirixgrpc::Status& status(const ROIVolumeFactorResponse* msg);
};

const ::osirixgrpc::Status&
ROIVolumeFactorResponse::_Internal::status(const ROIVolumeFactorResponse* msg) {
  return *msg->status_;
}
void ROIVolumeFactorResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
ROIVolumeFactorResponse::ROIVolumeFactorResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ROIVolumeFactorResponse)
}
ROIVolumeFactorResponse::ROIVolumeFactorResponse(const ROIVolumeFactorResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::osirixgrpc::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  factor_ = from.factor_;
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ROIVolumeFactorResponse)
}

void ROIVolumeFactorResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ROIVolumeFactorResponse_roivolume_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&factor_) -
      reinterpret_cast<char*>(&status_)) + sizeof(factor_));
}

ROIVolumeFactorResponse::~ROIVolumeFactorResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ROIVolumeFactorResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ROIVolumeFactorResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void ROIVolumeFactorResponse::ArenaDtor(void* object) {
  ROIVolumeFactorResponse* _this = reinterpret_cast< ROIVolumeFactorResponse* >(object);
  (void)_this;
}
void ROIVolumeFactorResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ROIVolumeFactorResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ROIVolumeFactorResponse& ROIVolumeFactorResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ROIVolumeFactorResponse_roivolume_2eproto.base);
  return *internal_default_instance();
}


void ROIVolumeFactorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ROIVolumeFactorResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  factor_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ROIVolumeFactorResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float factor = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          factor_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ROIVolumeFactorResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ROIVolumeFactorResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // float factor = 2;
  if (!(this->factor() <= 0 && this->factor() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_factor(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ROIVolumeFactorResponse)
  return target;
}

size_t ROIVolumeFactorResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ROIVolumeFactorResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // float factor = 2;
  if (!(this->factor() <= 0 && this->factor() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ROIVolumeFactorResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.ROIVolumeFactorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ROIVolumeFactorResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ROIVolumeFactorResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.ROIVolumeFactorResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.ROIVolumeFactorResponse)
    MergeFrom(*source);
  }
}

void ROIVolumeFactorResponse::MergeFrom(const ROIVolumeFactorResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ROIVolumeFactorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::osirixgrpc::Status::MergeFrom(from._internal_status());
  }
  if (!(from.factor() <= 0 && from.factor() >= 0)) {
    _internal_set_factor(from._internal_factor());
  }
}

void ROIVolumeFactorResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.ROIVolumeFactorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ROIVolumeFactorResponse::CopyFrom(const ROIVolumeFactorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ROIVolumeFactorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ROIVolumeFactorResponse::IsInitialized() const {
  return true;
}

void ROIVolumeFactorResponse::InternalSwap(ROIVolumeFactorResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ROIVolumeFactorResponse, factor_)
      + sizeof(ROIVolumeFactorResponse::factor_)
      - PROTOBUF_FIELD_OFFSET(ROIVolumeFactorResponse, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ROIVolumeFactorResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ROIVolumeVisibleResponse::_Internal {
 public:
  static const ::osirixgrpc::Status& status(const ROIVolumeVisibleResponse* msg);
};

const ::osirixgrpc::Status&
ROIVolumeVisibleResponse::_Internal::status(const ROIVolumeVisibleResponse* msg) {
  return *msg->status_;
}
void ROIVolumeVisibleResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
ROIVolumeVisibleResponse::ROIVolumeVisibleResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ROIVolumeVisibleResponse)
}
ROIVolumeVisibleResponse::ROIVolumeVisibleResponse(const ROIVolumeVisibleResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::osirixgrpc::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  visible_ = from.visible_;
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ROIVolumeVisibleResponse)
}

void ROIVolumeVisibleResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ROIVolumeVisibleResponse_roivolume_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&visible_) -
      reinterpret_cast<char*>(&status_)) + sizeof(visible_));
}

ROIVolumeVisibleResponse::~ROIVolumeVisibleResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ROIVolumeVisibleResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ROIVolumeVisibleResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void ROIVolumeVisibleResponse::ArenaDtor(void* object) {
  ROIVolumeVisibleResponse* _this = reinterpret_cast< ROIVolumeVisibleResponse* >(object);
  (void)_this;
}
void ROIVolumeVisibleResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ROIVolumeVisibleResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ROIVolumeVisibleResponse& ROIVolumeVisibleResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ROIVolumeVisibleResponse_roivolume_2eproto.base);
  return *internal_default_instance();
}


void ROIVolumeVisibleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ROIVolumeVisibleResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  visible_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ROIVolumeVisibleResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool visible = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          visible_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ROIVolumeVisibleResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ROIVolumeVisibleResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // bool visible = 2;
  if (this->visible() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_visible(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ROIVolumeVisibleResponse)
  return target;
}

size_t ROIVolumeVisibleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ROIVolumeVisibleResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // bool visible = 2;
  if (this->visible() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ROIVolumeVisibleResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.ROIVolumeVisibleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ROIVolumeVisibleResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ROIVolumeVisibleResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.ROIVolumeVisibleResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.ROIVolumeVisibleResponse)
    MergeFrom(*source);
  }
}

void ROIVolumeVisibleResponse::MergeFrom(const ROIVolumeVisibleResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ROIVolumeVisibleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::osirixgrpc::Status::MergeFrom(from._internal_status());
  }
  if (from.visible() != 0) {
    _internal_set_visible(from._internal_visible());
  }
}

void ROIVolumeVisibleResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.ROIVolumeVisibleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ROIVolumeVisibleResponse::CopyFrom(const ROIVolumeVisibleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ROIVolumeVisibleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ROIVolumeVisibleResponse::IsInitialized() const {
  return true;
}

void ROIVolumeVisibleResponse::InternalSwap(ROIVolumeVisibleResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ROIVolumeVisibleResponse, visible_)
      + sizeof(ROIVolumeVisibleResponse::visible_)
      - PROTOBUF_FIELD_OFFSET(ROIVolumeVisibleResponse, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ROIVolumeVisibleResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ROIVolumeNameResponse::_Internal {
 public:
  static const ::osirixgrpc::Status& status(const ROIVolumeNameResponse* msg);
};

const ::osirixgrpc::Status&
ROIVolumeNameResponse::_Internal::status(const ROIVolumeNameResponse* msg) {
  return *msg->status_;
}
void ROIVolumeNameResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
ROIVolumeNameResponse::ROIVolumeNameResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ROIVolumeNameResponse)
}
ROIVolumeNameResponse::ROIVolumeNameResponse(const ROIVolumeNameResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  if (from._internal_has_status()) {
    status_ = new ::osirixgrpc::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ROIVolumeNameResponse)
}

void ROIVolumeNameResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ROIVolumeNameResponse_roivolume_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_ = nullptr;
}

ROIVolumeNameResponse::~ROIVolumeNameResponse() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ROIVolumeNameResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ROIVolumeNameResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete status_;
}

void ROIVolumeNameResponse::ArenaDtor(void* object) {
  ROIVolumeNameResponse* _this = reinterpret_cast< ROIVolumeNameResponse* >(object);
  (void)_this;
}
void ROIVolumeNameResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ROIVolumeNameResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ROIVolumeNameResponse& ROIVolumeNameResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ROIVolumeNameResponse_roivolume_2eproto.base);
  return *internal_default_instance();
}


void ROIVolumeNameResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ROIVolumeNameResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ROIVolumeNameResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "osirixgrpc.ROIVolumeNameResponse.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ROIVolumeNameResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ROIVolumeNameResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "osirixgrpc.ROIVolumeNameResponse.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ROIVolumeNameResponse)
  return target;
}

size_t ROIVolumeNameResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ROIVolumeNameResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .osirixgrpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ROIVolumeNameResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.ROIVolumeNameResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ROIVolumeNameResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ROIVolumeNameResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.ROIVolumeNameResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.ROIVolumeNameResponse)
    MergeFrom(*source);
  }
}

void ROIVolumeNameResponse::MergeFrom(const ROIVolumeNameResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ROIVolumeNameResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.has_status()) {
    _internal_mutable_status()->::osirixgrpc::Status::MergeFrom(from._internal_status());
  }
}

void ROIVolumeNameResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.ROIVolumeNameResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ROIVolumeNameResponse::CopyFrom(const ROIVolumeNameResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ROIVolumeNameResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ROIVolumeNameResponse::IsInitialized() const {
  return true;
}

void ROIVolumeNameResponse::InternalSwap(ROIVolumeNameResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ROIVolumeNameResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ROIVolumeSetTextureRequest::_Internal {
 public:
  static const ::osirixgrpc::ROIVolume& roi(const ROIVolumeSetTextureRequest* msg);
};

const ::osirixgrpc::ROIVolume&
ROIVolumeSetTextureRequest::_Internal::roi(const ROIVolumeSetTextureRequest* msg) {
  return *msg->roi_;
}
void ROIVolumeSetTextureRequest::clear_roi() {
  if (GetArena() == nullptr && roi_ != nullptr) {
    delete roi_;
  }
  roi_ = nullptr;
}
ROIVolumeSetTextureRequest::ROIVolumeSetTextureRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ROIVolumeSetTextureRequest)
}
ROIVolumeSetTextureRequest::ROIVolumeSetTextureRequest(const ROIVolumeSetTextureRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_roi()) {
    roi_ = new ::osirixgrpc::ROIVolume(*from.roi_);
  } else {
    roi_ = nullptr;
  }
  texture_ = from.texture_;
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ROIVolumeSetTextureRequest)
}

void ROIVolumeSetTextureRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ROIVolumeSetTextureRequest_roivolume_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&roi_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&texture_) -
      reinterpret_cast<char*>(&roi_)) + sizeof(texture_));
}

ROIVolumeSetTextureRequest::~ROIVolumeSetTextureRequest() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ROIVolumeSetTextureRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ROIVolumeSetTextureRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete roi_;
}

void ROIVolumeSetTextureRequest::ArenaDtor(void* object) {
  ROIVolumeSetTextureRequest* _this = reinterpret_cast< ROIVolumeSetTextureRequest* >(object);
  (void)_this;
}
void ROIVolumeSetTextureRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ROIVolumeSetTextureRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ROIVolumeSetTextureRequest& ROIVolumeSetTextureRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ROIVolumeSetTextureRequest_roivolume_2eproto.base);
  return *internal_default_instance();
}


void ROIVolumeSetTextureRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ROIVolumeSetTextureRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && roi_ != nullptr) {
    delete roi_;
  }
  roi_ = nullptr;
  texture_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ROIVolumeSetTextureRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.ROIVolume roi = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_roi(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool texture = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          texture_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ROIVolumeSetTextureRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ROIVolumeSetTextureRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.ROIVolume roi = 1;
  if (this->has_roi()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::roi(this), target, stream);
  }

  // bool texture = 2;
  if (this->texture() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_texture(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ROIVolumeSetTextureRequest)
  return target;
}

size_t ROIVolumeSetTextureRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ROIVolumeSetTextureRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .osirixgrpc.ROIVolume roi = 1;
  if (this->has_roi()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *roi_);
  }

  // bool texture = 2;
  if (this->texture() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ROIVolumeSetTextureRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.ROIVolumeSetTextureRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ROIVolumeSetTextureRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ROIVolumeSetTextureRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.ROIVolumeSetTextureRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.ROIVolumeSetTextureRequest)
    MergeFrom(*source);
  }
}

void ROIVolumeSetTextureRequest::MergeFrom(const ROIVolumeSetTextureRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ROIVolumeSetTextureRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_roi()) {
    _internal_mutable_roi()->::osirixgrpc::ROIVolume::MergeFrom(from._internal_roi());
  }
  if (from.texture() != 0) {
    _internal_set_texture(from._internal_texture());
  }
}

void ROIVolumeSetTextureRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.ROIVolumeSetTextureRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ROIVolumeSetTextureRequest::CopyFrom(const ROIVolumeSetTextureRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ROIVolumeSetTextureRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ROIVolumeSetTextureRequest::IsInitialized() const {
  return true;
}

void ROIVolumeSetTextureRequest::InternalSwap(ROIVolumeSetTextureRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ROIVolumeSetTextureRequest, texture_)
      + sizeof(ROIVolumeSetTextureRequest::texture_)
      - PROTOBUF_FIELD_OFFSET(ROIVolumeSetTextureRequest, roi_)>(
          reinterpret_cast<char*>(&roi_),
          reinterpret_cast<char*>(&other->roi_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ROIVolumeSetTextureRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ROIVolumeSetColorRequest::_Internal {
 public:
  static const ::osirixgrpc::ROIVolume& roi(const ROIVolumeSetColorRequest* msg);
};

const ::osirixgrpc::ROIVolume&
ROIVolumeSetColorRequest::_Internal::roi(const ROIVolumeSetColorRequest* msg) {
  return *msg->roi_;
}
void ROIVolumeSetColorRequest::clear_roi() {
  if (GetArena() == nullptr && roi_ != nullptr) {
    delete roi_;
  }
  roi_ = nullptr;
}
ROIVolumeSetColorRequest::ROIVolumeSetColorRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ROIVolumeSetColorRequest)
}
ROIVolumeSetColorRequest::ROIVolumeSetColorRequest(const ROIVolumeSetColorRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_roi()) {
    roi_ = new ::osirixgrpc::ROIVolume(*from.roi_);
  } else {
    roi_ = nullptr;
  }
  ::memcpy(&r_, &from.r_,
    static_cast<size_t>(reinterpret_cast<char*>(&b_) -
    reinterpret_cast<char*>(&r_)) + sizeof(b_));
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ROIVolumeSetColorRequest)
}

void ROIVolumeSetColorRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ROIVolumeSetColorRequest_roivolume_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&roi_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&b_) -
      reinterpret_cast<char*>(&roi_)) + sizeof(b_));
}

ROIVolumeSetColorRequest::~ROIVolumeSetColorRequest() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ROIVolumeSetColorRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ROIVolumeSetColorRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete roi_;
}

void ROIVolumeSetColorRequest::ArenaDtor(void* object) {
  ROIVolumeSetColorRequest* _this = reinterpret_cast< ROIVolumeSetColorRequest* >(object);
  (void)_this;
}
void ROIVolumeSetColorRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ROIVolumeSetColorRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ROIVolumeSetColorRequest& ROIVolumeSetColorRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ROIVolumeSetColorRequest_roivolume_2eproto.base);
  return *internal_default_instance();
}


void ROIVolumeSetColorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ROIVolumeSetColorRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && roi_ != nullptr) {
    delete roi_;
  }
  roi_ = nullptr;
  ::memset(&r_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&b_) -
      reinterpret_cast<char*>(&r_)) + sizeof(b_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ROIVolumeSetColorRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.ROIVolume roi = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_roi(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float r = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          r_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float g = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29)) {
          g_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float b = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 37)) {
          b_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ROIVolumeSetColorRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ROIVolumeSetColorRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.ROIVolume roi = 1;
  if (this->has_roi()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::roi(this), target, stream);
  }

  // float r = 2;
  if (!(this->r() <= 0 && this->r() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_r(), target);
  }

  // float g = 3;
  if (!(this->g() <= 0 && this->g() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3, this->_internal_g(), target);
  }

  // float b = 4;
  if (!(this->b() <= 0 && this->b() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(4, this->_internal_b(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ROIVolumeSetColorRequest)
  return target;
}

size_t ROIVolumeSetColorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ROIVolumeSetColorRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .osirixgrpc.ROIVolume roi = 1;
  if (this->has_roi()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *roi_);
  }

  // float r = 2;
  if (!(this->r() <= 0 && this->r() >= 0)) {
    total_size += 1 + 4;
  }

  // float g = 3;
  if (!(this->g() <= 0 && this->g() >= 0)) {
    total_size += 1 + 4;
  }

  // float b = 4;
  if (!(this->b() <= 0 && this->b() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ROIVolumeSetColorRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.ROIVolumeSetColorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ROIVolumeSetColorRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ROIVolumeSetColorRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.ROIVolumeSetColorRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.ROIVolumeSetColorRequest)
    MergeFrom(*source);
  }
}

void ROIVolumeSetColorRequest::MergeFrom(const ROIVolumeSetColorRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ROIVolumeSetColorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_roi()) {
    _internal_mutable_roi()->::osirixgrpc::ROIVolume::MergeFrom(from._internal_roi());
  }
  if (!(from.r() <= 0 && from.r() >= 0)) {
    _internal_set_r(from._internal_r());
  }
  if (!(from.g() <= 0 && from.g() >= 0)) {
    _internal_set_g(from._internal_g());
  }
  if (!(from.b() <= 0 && from.b() >= 0)) {
    _internal_set_b(from._internal_b());
  }
}

void ROIVolumeSetColorRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.ROIVolumeSetColorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ROIVolumeSetColorRequest::CopyFrom(const ROIVolumeSetColorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ROIVolumeSetColorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ROIVolumeSetColorRequest::IsInitialized() const {
  return true;
}

void ROIVolumeSetColorRequest::InternalSwap(ROIVolumeSetColorRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ROIVolumeSetColorRequest, b_)
      + sizeof(ROIVolumeSetColorRequest::b_)
      - PROTOBUF_FIELD_OFFSET(ROIVolumeSetColorRequest, roi_)>(
          reinterpret_cast<char*>(&roi_),
          reinterpret_cast<char*>(&other->roi_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ROIVolumeSetColorRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ROIVolumeSetOpacityRequest::_Internal {
 public:
  static const ::osirixgrpc::ROIVolume& roi(const ROIVolumeSetOpacityRequest* msg);
};

const ::osirixgrpc::ROIVolume&
ROIVolumeSetOpacityRequest::_Internal::roi(const ROIVolumeSetOpacityRequest* msg) {
  return *msg->roi_;
}
void ROIVolumeSetOpacityRequest::clear_roi() {
  if (GetArena() == nullptr && roi_ != nullptr) {
    delete roi_;
  }
  roi_ = nullptr;
}
ROIVolumeSetOpacityRequest::ROIVolumeSetOpacityRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ROIVolumeSetOpacityRequest)
}
ROIVolumeSetOpacityRequest::ROIVolumeSetOpacityRequest(const ROIVolumeSetOpacityRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_roi()) {
    roi_ = new ::osirixgrpc::ROIVolume(*from.roi_);
  } else {
    roi_ = nullptr;
  }
  opacity_ = from.opacity_;
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ROIVolumeSetOpacityRequest)
}

void ROIVolumeSetOpacityRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ROIVolumeSetOpacityRequest_roivolume_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&roi_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&opacity_) -
      reinterpret_cast<char*>(&roi_)) + sizeof(opacity_));
}

ROIVolumeSetOpacityRequest::~ROIVolumeSetOpacityRequest() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ROIVolumeSetOpacityRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ROIVolumeSetOpacityRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete roi_;
}

void ROIVolumeSetOpacityRequest::ArenaDtor(void* object) {
  ROIVolumeSetOpacityRequest* _this = reinterpret_cast< ROIVolumeSetOpacityRequest* >(object);
  (void)_this;
}
void ROIVolumeSetOpacityRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ROIVolumeSetOpacityRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ROIVolumeSetOpacityRequest& ROIVolumeSetOpacityRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ROIVolumeSetOpacityRequest_roivolume_2eproto.base);
  return *internal_default_instance();
}


void ROIVolumeSetOpacityRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ROIVolumeSetOpacityRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && roi_ != nullptr) {
    delete roi_;
  }
  roi_ = nullptr;
  opacity_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ROIVolumeSetOpacityRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.ROIVolume roi = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_roi(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float opacity = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          opacity_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ROIVolumeSetOpacityRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ROIVolumeSetOpacityRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.ROIVolume roi = 1;
  if (this->has_roi()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::roi(this), target, stream);
  }

  // float opacity = 2;
  if (!(this->opacity() <= 0 && this->opacity() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_opacity(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ROIVolumeSetOpacityRequest)
  return target;
}

size_t ROIVolumeSetOpacityRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ROIVolumeSetOpacityRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .osirixgrpc.ROIVolume roi = 1;
  if (this->has_roi()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *roi_);
  }

  // float opacity = 2;
  if (!(this->opacity() <= 0 && this->opacity() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ROIVolumeSetOpacityRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.ROIVolumeSetOpacityRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ROIVolumeSetOpacityRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ROIVolumeSetOpacityRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.ROIVolumeSetOpacityRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.ROIVolumeSetOpacityRequest)
    MergeFrom(*source);
  }
}

void ROIVolumeSetOpacityRequest::MergeFrom(const ROIVolumeSetOpacityRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ROIVolumeSetOpacityRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_roi()) {
    _internal_mutable_roi()->::osirixgrpc::ROIVolume::MergeFrom(from._internal_roi());
  }
  if (!(from.opacity() <= 0 && from.opacity() >= 0)) {
    _internal_set_opacity(from._internal_opacity());
  }
}

void ROIVolumeSetOpacityRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.ROIVolumeSetOpacityRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ROIVolumeSetOpacityRequest::CopyFrom(const ROIVolumeSetOpacityRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ROIVolumeSetOpacityRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ROIVolumeSetOpacityRequest::IsInitialized() const {
  return true;
}

void ROIVolumeSetOpacityRequest::InternalSwap(ROIVolumeSetOpacityRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ROIVolumeSetOpacityRequest, opacity_)
      + sizeof(ROIVolumeSetOpacityRequest::opacity_)
      - PROTOBUF_FIELD_OFFSET(ROIVolumeSetOpacityRequest, roi_)>(
          reinterpret_cast<char*>(&roi_),
          reinterpret_cast<char*>(&other->roi_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ROIVolumeSetOpacityRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ROIVolumeSetFactorRequest::_Internal {
 public:
  static const ::osirixgrpc::ROIVolume& roi(const ROIVolumeSetFactorRequest* msg);
};

const ::osirixgrpc::ROIVolume&
ROIVolumeSetFactorRequest::_Internal::roi(const ROIVolumeSetFactorRequest* msg) {
  return *msg->roi_;
}
void ROIVolumeSetFactorRequest::clear_roi() {
  if (GetArena() == nullptr && roi_ != nullptr) {
    delete roi_;
  }
  roi_ = nullptr;
}
ROIVolumeSetFactorRequest::ROIVolumeSetFactorRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:osirixgrpc.ROIVolumeSetFactorRequest)
}
ROIVolumeSetFactorRequest::ROIVolumeSetFactorRequest(const ROIVolumeSetFactorRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_roi()) {
    roi_ = new ::osirixgrpc::ROIVolume(*from.roi_);
  } else {
    roi_ = nullptr;
  }
  factor_ = from.factor_;
  // @@protoc_insertion_point(copy_constructor:osirixgrpc.ROIVolumeSetFactorRequest)
}

void ROIVolumeSetFactorRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ROIVolumeSetFactorRequest_roivolume_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&roi_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&factor_) -
      reinterpret_cast<char*>(&roi_)) + sizeof(factor_));
}

ROIVolumeSetFactorRequest::~ROIVolumeSetFactorRequest() {
  // @@protoc_insertion_point(destructor:osirixgrpc.ROIVolumeSetFactorRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ROIVolumeSetFactorRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete roi_;
}

void ROIVolumeSetFactorRequest::ArenaDtor(void* object) {
  ROIVolumeSetFactorRequest* _this = reinterpret_cast< ROIVolumeSetFactorRequest* >(object);
  (void)_this;
}
void ROIVolumeSetFactorRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ROIVolumeSetFactorRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ROIVolumeSetFactorRequest& ROIVolumeSetFactorRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ROIVolumeSetFactorRequest_roivolume_2eproto.base);
  return *internal_default_instance();
}


void ROIVolumeSetFactorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:osirixgrpc.ROIVolumeSetFactorRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && roi_ != nullptr) {
    delete roi_;
  }
  roi_ = nullptr;
  factor_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ROIVolumeSetFactorRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .osirixgrpc.ROIVolume roi = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_roi(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float factor = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          factor_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ROIVolumeSetFactorRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osirixgrpc.ROIVolumeSetFactorRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .osirixgrpc.ROIVolume roi = 1;
  if (this->has_roi()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::roi(this), target, stream);
  }

  // float factor = 2;
  if (!(this->factor() <= 0 && this->factor() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_factor(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osirixgrpc.ROIVolumeSetFactorRequest)
  return target;
}

size_t ROIVolumeSetFactorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osirixgrpc.ROIVolumeSetFactorRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .osirixgrpc.ROIVolume roi = 1;
  if (this->has_roi()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *roi_);
  }

  // float factor = 2;
  if (!(this->factor() <= 0 && this->factor() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ROIVolumeSetFactorRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osirixgrpc.ROIVolumeSetFactorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ROIVolumeSetFactorRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ROIVolumeSetFactorRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osirixgrpc.ROIVolumeSetFactorRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osirixgrpc.ROIVolumeSetFactorRequest)
    MergeFrom(*source);
  }
}

void ROIVolumeSetFactorRequest::MergeFrom(const ROIVolumeSetFactorRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osirixgrpc.ROIVolumeSetFactorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_roi()) {
    _internal_mutable_roi()->::osirixgrpc::ROIVolume::MergeFrom(from._internal_roi());
  }
  if (!(from.factor() <= 0 && from.factor() >= 0)) {
    _internal_set_factor(from._internal_factor());
  }
}

void ROIVolumeSetFactorRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osirixgrpc.ROIVolumeSetFactorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ROIVolumeSetFactorRequest::CopyFrom(const ROIVolumeSetFactorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osirixgrpc.ROIVolumeSetFactorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ROIVolumeSetFactorRequest::IsInitialized() const {
  return true;
}

void ROIVolumeSetFactorRequest::InternalSwap(ROIVolumeSetFactorRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ROIVolumeSetFactorRequest, factor_)
      + sizeof(ROIVolumeSetFactorRequest::factor_)
      - PROTOBUF_FIELD_OFFSET(ROIVolumeSetFactorRequest, roi_)>(
          reinterpret_cast<char*>(&roi_),
          reinterpret_cast<char*>(&other->roi_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ROIVolumeSetFactorRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace osirixgrpc
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::osirixgrpc::ROIVolumeTextureResponse* Arena::CreateMaybeMessage< ::osirixgrpc::ROIVolumeTextureResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::ROIVolumeTextureResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::ROIVolumeVolumeResponse* Arena::CreateMaybeMessage< ::osirixgrpc::ROIVolumeVolumeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::ROIVolumeVolumeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::ROIVolumeColorResponse* Arena::CreateMaybeMessage< ::osirixgrpc::ROIVolumeColorResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::ROIVolumeColorResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::ROIVolumeOpacityResponse* Arena::CreateMaybeMessage< ::osirixgrpc::ROIVolumeOpacityResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::ROIVolumeOpacityResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::ROIVolumeFactorResponse* Arena::CreateMaybeMessage< ::osirixgrpc::ROIVolumeFactorResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::ROIVolumeFactorResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::ROIVolumeVisibleResponse* Arena::CreateMaybeMessage< ::osirixgrpc::ROIVolumeVisibleResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::ROIVolumeVisibleResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::ROIVolumeNameResponse* Arena::CreateMaybeMessage< ::osirixgrpc::ROIVolumeNameResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::ROIVolumeNameResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::ROIVolumeSetTextureRequest* Arena::CreateMaybeMessage< ::osirixgrpc::ROIVolumeSetTextureRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::ROIVolumeSetTextureRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::ROIVolumeSetColorRequest* Arena::CreateMaybeMessage< ::osirixgrpc::ROIVolumeSetColorRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::ROIVolumeSetColorRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::ROIVolumeSetOpacityRequest* Arena::CreateMaybeMessage< ::osirixgrpc::ROIVolumeSetOpacityRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::ROIVolumeSetOpacityRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::osirixgrpc::ROIVolumeSetFactorRequest* Arena::CreateMaybeMessage< ::osirixgrpc::ROIVolumeSetFactorRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osirixgrpc::ROIVolumeSetFactorRequest >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
