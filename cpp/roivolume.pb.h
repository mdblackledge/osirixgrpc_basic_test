// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: roivolume.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_roivolume_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_roivolume_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "utilities.pb.h"
#include "types.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_roivolume_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_roivolume_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[11]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_roivolume_2eproto;
namespace osirixgrpc {
class ROIVolumeColorResponse;
class ROIVolumeColorResponseDefaultTypeInternal;
extern ROIVolumeColorResponseDefaultTypeInternal _ROIVolumeColorResponse_default_instance_;
class ROIVolumeFactorResponse;
class ROIVolumeFactorResponseDefaultTypeInternal;
extern ROIVolumeFactorResponseDefaultTypeInternal _ROIVolumeFactorResponse_default_instance_;
class ROIVolumeNameResponse;
class ROIVolumeNameResponseDefaultTypeInternal;
extern ROIVolumeNameResponseDefaultTypeInternal _ROIVolumeNameResponse_default_instance_;
class ROIVolumeOpacityResponse;
class ROIVolumeOpacityResponseDefaultTypeInternal;
extern ROIVolumeOpacityResponseDefaultTypeInternal _ROIVolumeOpacityResponse_default_instance_;
class ROIVolumeSetColorRequest;
class ROIVolumeSetColorRequestDefaultTypeInternal;
extern ROIVolumeSetColorRequestDefaultTypeInternal _ROIVolumeSetColorRequest_default_instance_;
class ROIVolumeSetFactorRequest;
class ROIVolumeSetFactorRequestDefaultTypeInternal;
extern ROIVolumeSetFactorRequestDefaultTypeInternal _ROIVolumeSetFactorRequest_default_instance_;
class ROIVolumeSetOpacityRequest;
class ROIVolumeSetOpacityRequestDefaultTypeInternal;
extern ROIVolumeSetOpacityRequestDefaultTypeInternal _ROIVolumeSetOpacityRequest_default_instance_;
class ROIVolumeSetTextureRequest;
class ROIVolumeSetTextureRequestDefaultTypeInternal;
extern ROIVolumeSetTextureRequestDefaultTypeInternal _ROIVolumeSetTextureRequest_default_instance_;
class ROIVolumeTextureResponse;
class ROIVolumeTextureResponseDefaultTypeInternal;
extern ROIVolumeTextureResponseDefaultTypeInternal _ROIVolumeTextureResponse_default_instance_;
class ROIVolumeVisibleResponse;
class ROIVolumeVisibleResponseDefaultTypeInternal;
extern ROIVolumeVisibleResponseDefaultTypeInternal _ROIVolumeVisibleResponse_default_instance_;
class ROIVolumeVolumeResponse;
class ROIVolumeVolumeResponseDefaultTypeInternal;
extern ROIVolumeVolumeResponseDefaultTypeInternal _ROIVolumeVolumeResponse_default_instance_;
}  // namespace osirixgrpc
PROTOBUF_NAMESPACE_OPEN
template<> ::osirixgrpc::ROIVolumeColorResponse* Arena::CreateMaybeMessage<::osirixgrpc::ROIVolumeColorResponse>(Arena*);
template<> ::osirixgrpc::ROIVolumeFactorResponse* Arena::CreateMaybeMessage<::osirixgrpc::ROIVolumeFactorResponse>(Arena*);
template<> ::osirixgrpc::ROIVolumeNameResponse* Arena::CreateMaybeMessage<::osirixgrpc::ROIVolumeNameResponse>(Arena*);
template<> ::osirixgrpc::ROIVolumeOpacityResponse* Arena::CreateMaybeMessage<::osirixgrpc::ROIVolumeOpacityResponse>(Arena*);
template<> ::osirixgrpc::ROIVolumeSetColorRequest* Arena::CreateMaybeMessage<::osirixgrpc::ROIVolumeSetColorRequest>(Arena*);
template<> ::osirixgrpc::ROIVolumeSetFactorRequest* Arena::CreateMaybeMessage<::osirixgrpc::ROIVolumeSetFactorRequest>(Arena*);
template<> ::osirixgrpc::ROIVolumeSetOpacityRequest* Arena::CreateMaybeMessage<::osirixgrpc::ROIVolumeSetOpacityRequest>(Arena*);
template<> ::osirixgrpc::ROIVolumeSetTextureRequest* Arena::CreateMaybeMessage<::osirixgrpc::ROIVolumeSetTextureRequest>(Arena*);
template<> ::osirixgrpc::ROIVolumeTextureResponse* Arena::CreateMaybeMessage<::osirixgrpc::ROIVolumeTextureResponse>(Arena*);
template<> ::osirixgrpc::ROIVolumeVisibleResponse* Arena::CreateMaybeMessage<::osirixgrpc::ROIVolumeVisibleResponse>(Arena*);
template<> ::osirixgrpc::ROIVolumeVolumeResponse* Arena::CreateMaybeMessage<::osirixgrpc::ROIVolumeVolumeResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace osirixgrpc {

// ===================================================================

class ROIVolumeTextureResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.ROIVolumeTextureResponse) */ {
 public:
  inline ROIVolumeTextureResponse() : ROIVolumeTextureResponse(nullptr) {}
  virtual ~ROIVolumeTextureResponse();

  ROIVolumeTextureResponse(const ROIVolumeTextureResponse& from);
  ROIVolumeTextureResponse(ROIVolumeTextureResponse&& from) noexcept
    : ROIVolumeTextureResponse() {
    *this = ::std::move(from);
  }

  inline ROIVolumeTextureResponse& operator=(const ROIVolumeTextureResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ROIVolumeTextureResponse& operator=(ROIVolumeTextureResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ROIVolumeTextureResponse& default_instance();

  static inline const ROIVolumeTextureResponse* internal_default_instance() {
    return reinterpret_cast<const ROIVolumeTextureResponse*>(
               &_ROIVolumeTextureResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ROIVolumeTextureResponse& a, ROIVolumeTextureResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ROIVolumeTextureResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ROIVolumeTextureResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ROIVolumeTextureResponse* New() const final {
    return CreateMaybeMessage<ROIVolumeTextureResponse>(nullptr);
  }

  ROIVolumeTextureResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ROIVolumeTextureResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ROIVolumeTextureResponse& from);
  void MergeFrom(const ROIVolumeTextureResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ROIVolumeTextureResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "osirixgrpc.ROIVolumeTextureResponse";
  }
  protected:
  explicit ROIVolumeTextureResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_roivolume_2eproto);
    return ::descriptor_table_roivolume_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
    kTextureFieldNumber = 2,
  };
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  const ::osirixgrpc::Status& status() const;
  ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  // bool texture = 2;
  void clear_texture();
  bool texture() const;
  void set_texture(bool value);
  private:
  bool _internal_texture() const;
  void _internal_set_texture(bool value);
  public:

  // @@protoc_insertion_point(class_scope:osirixgrpc.ROIVolumeTextureResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::osirixgrpc::Status* status_;
  bool texture_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_roivolume_2eproto;
};
// -------------------------------------------------------------------

class ROIVolumeVolumeResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.ROIVolumeVolumeResponse) */ {
 public:
  inline ROIVolumeVolumeResponse() : ROIVolumeVolumeResponse(nullptr) {}
  virtual ~ROIVolumeVolumeResponse();

  ROIVolumeVolumeResponse(const ROIVolumeVolumeResponse& from);
  ROIVolumeVolumeResponse(ROIVolumeVolumeResponse&& from) noexcept
    : ROIVolumeVolumeResponse() {
    *this = ::std::move(from);
  }

  inline ROIVolumeVolumeResponse& operator=(const ROIVolumeVolumeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ROIVolumeVolumeResponse& operator=(ROIVolumeVolumeResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ROIVolumeVolumeResponse& default_instance();

  static inline const ROIVolumeVolumeResponse* internal_default_instance() {
    return reinterpret_cast<const ROIVolumeVolumeResponse*>(
               &_ROIVolumeVolumeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ROIVolumeVolumeResponse& a, ROIVolumeVolumeResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ROIVolumeVolumeResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ROIVolumeVolumeResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ROIVolumeVolumeResponse* New() const final {
    return CreateMaybeMessage<ROIVolumeVolumeResponse>(nullptr);
  }

  ROIVolumeVolumeResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ROIVolumeVolumeResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ROIVolumeVolumeResponse& from);
  void MergeFrom(const ROIVolumeVolumeResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ROIVolumeVolumeResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "osirixgrpc.ROIVolumeVolumeResponse";
  }
  protected:
  explicit ROIVolumeVolumeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_roivolume_2eproto);
    return ::descriptor_table_roivolume_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
    kVolumeFieldNumber = 2,
  };
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  const ::osirixgrpc::Status& status() const;
  ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  // float volume = 2;
  void clear_volume();
  float volume() const;
  void set_volume(float value);
  private:
  float _internal_volume() const;
  void _internal_set_volume(float value);
  public:

  // @@protoc_insertion_point(class_scope:osirixgrpc.ROIVolumeVolumeResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::osirixgrpc::Status* status_;
  float volume_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_roivolume_2eproto;
};
// -------------------------------------------------------------------

class ROIVolumeColorResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.ROIVolumeColorResponse) */ {
 public:
  inline ROIVolumeColorResponse() : ROIVolumeColorResponse(nullptr) {}
  virtual ~ROIVolumeColorResponse();

  ROIVolumeColorResponse(const ROIVolumeColorResponse& from);
  ROIVolumeColorResponse(ROIVolumeColorResponse&& from) noexcept
    : ROIVolumeColorResponse() {
    *this = ::std::move(from);
  }

  inline ROIVolumeColorResponse& operator=(const ROIVolumeColorResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ROIVolumeColorResponse& operator=(ROIVolumeColorResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ROIVolumeColorResponse& default_instance();

  static inline const ROIVolumeColorResponse* internal_default_instance() {
    return reinterpret_cast<const ROIVolumeColorResponse*>(
               &_ROIVolumeColorResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ROIVolumeColorResponse& a, ROIVolumeColorResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ROIVolumeColorResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ROIVolumeColorResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ROIVolumeColorResponse* New() const final {
    return CreateMaybeMessage<ROIVolumeColorResponse>(nullptr);
  }

  ROIVolumeColorResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ROIVolumeColorResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ROIVolumeColorResponse& from);
  void MergeFrom(const ROIVolumeColorResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ROIVolumeColorResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "osirixgrpc.ROIVolumeColorResponse";
  }
  protected:
  explicit ROIVolumeColorResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_roivolume_2eproto);
    return ::descriptor_table_roivolume_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
    kRFieldNumber = 2,
    kGFieldNumber = 3,
    kBFieldNumber = 4,
  };
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  const ::osirixgrpc::Status& status() const;
  ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  // float r = 2;
  void clear_r();
  float r() const;
  void set_r(float value);
  private:
  float _internal_r() const;
  void _internal_set_r(float value);
  public:

  // float g = 3;
  void clear_g();
  float g() const;
  void set_g(float value);
  private:
  float _internal_g() const;
  void _internal_set_g(float value);
  public:

  // float b = 4;
  void clear_b();
  float b() const;
  void set_b(float value);
  private:
  float _internal_b() const;
  void _internal_set_b(float value);
  public:

  // @@protoc_insertion_point(class_scope:osirixgrpc.ROIVolumeColorResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::osirixgrpc::Status* status_;
  float r_;
  float g_;
  float b_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_roivolume_2eproto;
};
// -------------------------------------------------------------------

class ROIVolumeOpacityResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.ROIVolumeOpacityResponse) */ {
 public:
  inline ROIVolumeOpacityResponse() : ROIVolumeOpacityResponse(nullptr) {}
  virtual ~ROIVolumeOpacityResponse();

  ROIVolumeOpacityResponse(const ROIVolumeOpacityResponse& from);
  ROIVolumeOpacityResponse(ROIVolumeOpacityResponse&& from) noexcept
    : ROIVolumeOpacityResponse() {
    *this = ::std::move(from);
  }

  inline ROIVolumeOpacityResponse& operator=(const ROIVolumeOpacityResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ROIVolumeOpacityResponse& operator=(ROIVolumeOpacityResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ROIVolumeOpacityResponse& default_instance();

  static inline const ROIVolumeOpacityResponse* internal_default_instance() {
    return reinterpret_cast<const ROIVolumeOpacityResponse*>(
               &_ROIVolumeOpacityResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(ROIVolumeOpacityResponse& a, ROIVolumeOpacityResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ROIVolumeOpacityResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ROIVolumeOpacityResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ROIVolumeOpacityResponse* New() const final {
    return CreateMaybeMessage<ROIVolumeOpacityResponse>(nullptr);
  }

  ROIVolumeOpacityResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ROIVolumeOpacityResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ROIVolumeOpacityResponse& from);
  void MergeFrom(const ROIVolumeOpacityResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ROIVolumeOpacityResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "osirixgrpc.ROIVolumeOpacityResponse";
  }
  protected:
  explicit ROIVolumeOpacityResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_roivolume_2eproto);
    return ::descriptor_table_roivolume_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
    kOpacityFieldNumber = 2,
  };
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  const ::osirixgrpc::Status& status() const;
  ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  // float opacity = 2;
  void clear_opacity();
  float opacity() const;
  void set_opacity(float value);
  private:
  float _internal_opacity() const;
  void _internal_set_opacity(float value);
  public:

  // @@protoc_insertion_point(class_scope:osirixgrpc.ROIVolumeOpacityResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::osirixgrpc::Status* status_;
  float opacity_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_roivolume_2eproto;
};
// -------------------------------------------------------------------

class ROIVolumeFactorResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.ROIVolumeFactorResponse) */ {
 public:
  inline ROIVolumeFactorResponse() : ROIVolumeFactorResponse(nullptr) {}
  virtual ~ROIVolumeFactorResponse();

  ROIVolumeFactorResponse(const ROIVolumeFactorResponse& from);
  ROIVolumeFactorResponse(ROIVolumeFactorResponse&& from) noexcept
    : ROIVolumeFactorResponse() {
    *this = ::std::move(from);
  }

  inline ROIVolumeFactorResponse& operator=(const ROIVolumeFactorResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ROIVolumeFactorResponse& operator=(ROIVolumeFactorResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ROIVolumeFactorResponse& default_instance();

  static inline const ROIVolumeFactorResponse* internal_default_instance() {
    return reinterpret_cast<const ROIVolumeFactorResponse*>(
               &_ROIVolumeFactorResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(ROIVolumeFactorResponse& a, ROIVolumeFactorResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ROIVolumeFactorResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ROIVolumeFactorResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ROIVolumeFactorResponse* New() const final {
    return CreateMaybeMessage<ROIVolumeFactorResponse>(nullptr);
  }

  ROIVolumeFactorResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ROIVolumeFactorResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ROIVolumeFactorResponse& from);
  void MergeFrom(const ROIVolumeFactorResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ROIVolumeFactorResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "osirixgrpc.ROIVolumeFactorResponse";
  }
  protected:
  explicit ROIVolumeFactorResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_roivolume_2eproto);
    return ::descriptor_table_roivolume_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
    kFactorFieldNumber = 2,
  };
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  const ::osirixgrpc::Status& status() const;
  ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  // float factor = 2;
  void clear_factor();
  float factor() const;
  void set_factor(float value);
  private:
  float _internal_factor() const;
  void _internal_set_factor(float value);
  public:

  // @@protoc_insertion_point(class_scope:osirixgrpc.ROIVolumeFactorResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::osirixgrpc::Status* status_;
  float factor_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_roivolume_2eproto;
};
// -------------------------------------------------------------------

class ROIVolumeVisibleResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.ROIVolumeVisibleResponse) */ {
 public:
  inline ROIVolumeVisibleResponse() : ROIVolumeVisibleResponse(nullptr) {}
  virtual ~ROIVolumeVisibleResponse();

  ROIVolumeVisibleResponse(const ROIVolumeVisibleResponse& from);
  ROIVolumeVisibleResponse(ROIVolumeVisibleResponse&& from) noexcept
    : ROIVolumeVisibleResponse() {
    *this = ::std::move(from);
  }

  inline ROIVolumeVisibleResponse& operator=(const ROIVolumeVisibleResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ROIVolumeVisibleResponse& operator=(ROIVolumeVisibleResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ROIVolumeVisibleResponse& default_instance();

  static inline const ROIVolumeVisibleResponse* internal_default_instance() {
    return reinterpret_cast<const ROIVolumeVisibleResponse*>(
               &_ROIVolumeVisibleResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(ROIVolumeVisibleResponse& a, ROIVolumeVisibleResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ROIVolumeVisibleResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ROIVolumeVisibleResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ROIVolumeVisibleResponse* New() const final {
    return CreateMaybeMessage<ROIVolumeVisibleResponse>(nullptr);
  }

  ROIVolumeVisibleResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ROIVolumeVisibleResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ROIVolumeVisibleResponse& from);
  void MergeFrom(const ROIVolumeVisibleResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ROIVolumeVisibleResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "osirixgrpc.ROIVolumeVisibleResponse";
  }
  protected:
  explicit ROIVolumeVisibleResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_roivolume_2eproto);
    return ::descriptor_table_roivolume_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
    kVisibleFieldNumber = 2,
  };
  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  const ::osirixgrpc::Status& status() const;
  ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  // bool visible = 2;
  void clear_visible();
  bool visible() const;
  void set_visible(bool value);
  private:
  bool _internal_visible() const;
  void _internal_set_visible(bool value);
  public:

  // @@protoc_insertion_point(class_scope:osirixgrpc.ROIVolumeVisibleResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::osirixgrpc::Status* status_;
  bool visible_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_roivolume_2eproto;
};
// -------------------------------------------------------------------

class ROIVolumeNameResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.ROIVolumeNameResponse) */ {
 public:
  inline ROIVolumeNameResponse() : ROIVolumeNameResponse(nullptr) {}
  virtual ~ROIVolumeNameResponse();

  ROIVolumeNameResponse(const ROIVolumeNameResponse& from);
  ROIVolumeNameResponse(ROIVolumeNameResponse&& from) noexcept
    : ROIVolumeNameResponse() {
    *this = ::std::move(from);
  }

  inline ROIVolumeNameResponse& operator=(const ROIVolumeNameResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ROIVolumeNameResponse& operator=(ROIVolumeNameResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ROIVolumeNameResponse& default_instance();

  static inline const ROIVolumeNameResponse* internal_default_instance() {
    return reinterpret_cast<const ROIVolumeNameResponse*>(
               &_ROIVolumeNameResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(ROIVolumeNameResponse& a, ROIVolumeNameResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ROIVolumeNameResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ROIVolumeNameResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ROIVolumeNameResponse* New() const final {
    return CreateMaybeMessage<ROIVolumeNameResponse>(nullptr);
  }

  ROIVolumeNameResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ROIVolumeNameResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ROIVolumeNameResponse& from);
  void MergeFrom(const ROIVolumeNameResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ROIVolumeNameResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "osirixgrpc.ROIVolumeNameResponse";
  }
  protected:
  explicit ROIVolumeNameResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_roivolume_2eproto);
    return ::descriptor_table_roivolume_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kStatusFieldNumber = 1,
  };
  // string name = 2;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // .osirixgrpc.Status status = 1;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  const ::osirixgrpc::Status& status() const;
  ::osirixgrpc::Status* release_status();
  ::osirixgrpc::Status* mutable_status();
  void set_allocated_status(::osirixgrpc::Status* status);
  private:
  const ::osirixgrpc::Status& _internal_status() const;
  ::osirixgrpc::Status* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::osirixgrpc::Status* status);
  ::osirixgrpc::Status* unsafe_arena_release_status();

  // @@protoc_insertion_point(class_scope:osirixgrpc.ROIVolumeNameResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::osirixgrpc::Status* status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_roivolume_2eproto;
};
// -------------------------------------------------------------------

class ROIVolumeSetTextureRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.ROIVolumeSetTextureRequest) */ {
 public:
  inline ROIVolumeSetTextureRequest() : ROIVolumeSetTextureRequest(nullptr) {}
  virtual ~ROIVolumeSetTextureRequest();

  ROIVolumeSetTextureRequest(const ROIVolumeSetTextureRequest& from);
  ROIVolumeSetTextureRequest(ROIVolumeSetTextureRequest&& from) noexcept
    : ROIVolumeSetTextureRequest() {
    *this = ::std::move(from);
  }

  inline ROIVolumeSetTextureRequest& operator=(const ROIVolumeSetTextureRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ROIVolumeSetTextureRequest& operator=(ROIVolumeSetTextureRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ROIVolumeSetTextureRequest& default_instance();

  static inline const ROIVolumeSetTextureRequest* internal_default_instance() {
    return reinterpret_cast<const ROIVolumeSetTextureRequest*>(
               &_ROIVolumeSetTextureRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(ROIVolumeSetTextureRequest& a, ROIVolumeSetTextureRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ROIVolumeSetTextureRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ROIVolumeSetTextureRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ROIVolumeSetTextureRequest* New() const final {
    return CreateMaybeMessage<ROIVolumeSetTextureRequest>(nullptr);
  }

  ROIVolumeSetTextureRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ROIVolumeSetTextureRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ROIVolumeSetTextureRequest& from);
  void MergeFrom(const ROIVolumeSetTextureRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ROIVolumeSetTextureRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "osirixgrpc.ROIVolumeSetTextureRequest";
  }
  protected:
  explicit ROIVolumeSetTextureRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_roivolume_2eproto);
    return ::descriptor_table_roivolume_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoiFieldNumber = 1,
    kTextureFieldNumber = 2,
  };
  // .osirixgrpc.ROIVolume roi = 1;
  bool has_roi() const;
  private:
  bool _internal_has_roi() const;
  public:
  void clear_roi();
  const ::osirixgrpc::ROIVolume& roi() const;
  ::osirixgrpc::ROIVolume* release_roi();
  ::osirixgrpc::ROIVolume* mutable_roi();
  void set_allocated_roi(::osirixgrpc::ROIVolume* roi);
  private:
  const ::osirixgrpc::ROIVolume& _internal_roi() const;
  ::osirixgrpc::ROIVolume* _internal_mutable_roi();
  public:
  void unsafe_arena_set_allocated_roi(
      ::osirixgrpc::ROIVolume* roi);
  ::osirixgrpc::ROIVolume* unsafe_arena_release_roi();

  // bool texture = 2;
  void clear_texture();
  bool texture() const;
  void set_texture(bool value);
  private:
  bool _internal_texture() const;
  void _internal_set_texture(bool value);
  public:

  // @@protoc_insertion_point(class_scope:osirixgrpc.ROIVolumeSetTextureRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::osirixgrpc::ROIVolume* roi_;
  bool texture_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_roivolume_2eproto;
};
// -------------------------------------------------------------------

class ROIVolumeSetColorRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.ROIVolumeSetColorRequest) */ {
 public:
  inline ROIVolumeSetColorRequest() : ROIVolumeSetColorRequest(nullptr) {}
  virtual ~ROIVolumeSetColorRequest();

  ROIVolumeSetColorRequest(const ROIVolumeSetColorRequest& from);
  ROIVolumeSetColorRequest(ROIVolumeSetColorRequest&& from) noexcept
    : ROIVolumeSetColorRequest() {
    *this = ::std::move(from);
  }

  inline ROIVolumeSetColorRequest& operator=(const ROIVolumeSetColorRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ROIVolumeSetColorRequest& operator=(ROIVolumeSetColorRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ROIVolumeSetColorRequest& default_instance();

  static inline const ROIVolumeSetColorRequest* internal_default_instance() {
    return reinterpret_cast<const ROIVolumeSetColorRequest*>(
               &_ROIVolumeSetColorRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(ROIVolumeSetColorRequest& a, ROIVolumeSetColorRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ROIVolumeSetColorRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ROIVolumeSetColorRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ROIVolumeSetColorRequest* New() const final {
    return CreateMaybeMessage<ROIVolumeSetColorRequest>(nullptr);
  }

  ROIVolumeSetColorRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ROIVolumeSetColorRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ROIVolumeSetColorRequest& from);
  void MergeFrom(const ROIVolumeSetColorRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ROIVolumeSetColorRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "osirixgrpc.ROIVolumeSetColorRequest";
  }
  protected:
  explicit ROIVolumeSetColorRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_roivolume_2eproto);
    return ::descriptor_table_roivolume_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoiFieldNumber = 1,
    kRFieldNumber = 2,
    kGFieldNumber = 3,
    kBFieldNumber = 4,
  };
  // .osirixgrpc.ROIVolume roi = 1;
  bool has_roi() const;
  private:
  bool _internal_has_roi() const;
  public:
  void clear_roi();
  const ::osirixgrpc::ROIVolume& roi() const;
  ::osirixgrpc::ROIVolume* release_roi();
  ::osirixgrpc::ROIVolume* mutable_roi();
  void set_allocated_roi(::osirixgrpc::ROIVolume* roi);
  private:
  const ::osirixgrpc::ROIVolume& _internal_roi() const;
  ::osirixgrpc::ROIVolume* _internal_mutable_roi();
  public:
  void unsafe_arena_set_allocated_roi(
      ::osirixgrpc::ROIVolume* roi);
  ::osirixgrpc::ROIVolume* unsafe_arena_release_roi();

  // float r = 2;
  void clear_r();
  float r() const;
  void set_r(float value);
  private:
  float _internal_r() const;
  void _internal_set_r(float value);
  public:

  // float g = 3;
  void clear_g();
  float g() const;
  void set_g(float value);
  private:
  float _internal_g() const;
  void _internal_set_g(float value);
  public:

  // float b = 4;
  void clear_b();
  float b() const;
  void set_b(float value);
  private:
  float _internal_b() const;
  void _internal_set_b(float value);
  public:

  // @@protoc_insertion_point(class_scope:osirixgrpc.ROIVolumeSetColorRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::osirixgrpc::ROIVolume* roi_;
  float r_;
  float g_;
  float b_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_roivolume_2eproto;
};
// -------------------------------------------------------------------

class ROIVolumeSetOpacityRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.ROIVolumeSetOpacityRequest) */ {
 public:
  inline ROIVolumeSetOpacityRequest() : ROIVolumeSetOpacityRequest(nullptr) {}
  virtual ~ROIVolumeSetOpacityRequest();

  ROIVolumeSetOpacityRequest(const ROIVolumeSetOpacityRequest& from);
  ROIVolumeSetOpacityRequest(ROIVolumeSetOpacityRequest&& from) noexcept
    : ROIVolumeSetOpacityRequest() {
    *this = ::std::move(from);
  }

  inline ROIVolumeSetOpacityRequest& operator=(const ROIVolumeSetOpacityRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ROIVolumeSetOpacityRequest& operator=(ROIVolumeSetOpacityRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ROIVolumeSetOpacityRequest& default_instance();

  static inline const ROIVolumeSetOpacityRequest* internal_default_instance() {
    return reinterpret_cast<const ROIVolumeSetOpacityRequest*>(
               &_ROIVolumeSetOpacityRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(ROIVolumeSetOpacityRequest& a, ROIVolumeSetOpacityRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ROIVolumeSetOpacityRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ROIVolumeSetOpacityRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ROIVolumeSetOpacityRequest* New() const final {
    return CreateMaybeMessage<ROIVolumeSetOpacityRequest>(nullptr);
  }

  ROIVolumeSetOpacityRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ROIVolumeSetOpacityRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ROIVolumeSetOpacityRequest& from);
  void MergeFrom(const ROIVolumeSetOpacityRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ROIVolumeSetOpacityRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "osirixgrpc.ROIVolumeSetOpacityRequest";
  }
  protected:
  explicit ROIVolumeSetOpacityRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_roivolume_2eproto);
    return ::descriptor_table_roivolume_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoiFieldNumber = 1,
    kOpacityFieldNumber = 2,
  };
  // .osirixgrpc.ROIVolume roi = 1;
  bool has_roi() const;
  private:
  bool _internal_has_roi() const;
  public:
  void clear_roi();
  const ::osirixgrpc::ROIVolume& roi() const;
  ::osirixgrpc::ROIVolume* release_roi();
  ::osirixgrpc::ROIVolume* mutable_roi();
  void set_allocated_roi(::osirixgrpc::ROIVolume* roi);
  private:
  const ::osirixgrpc::ROIVolume& _internal_roi() const;
  ::osirixgrpc::ROIVolume* _internal_mutable_roi();
  public:
  void unsafe_arena_set_allocated_roi(
      ::osirixgrpc::ROIVolume* roi);
  ::osirixgrpc::ROIVolume* unsafe_arena_release_roi();

  // float opacity = 2;
  void clear_opacity();
  float opacity() const;
  void set_opacity(float value);
  private:
  float _internal_opacity() const;
  void _internal_set_opacity(float value);
  public:

  // @@protoc_insertion_point(class_scope:osirixgrpc.ROIVolumeSetOpacityRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::osirixgrpc::ROIVolume* roi_;
  float opacity_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_roivolume_2eproto;
};
// -------------------------------------------------------------------

class ROIVolumeSetFactorRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:osirixgrpc.ROIVolumeSetFactorRequest) */ {
 public:
  inline ROIVolumeSetFactorRequest() : ROIVolumeSetFactorRequest(nullptr) {}
  virtual ~ROIVolumeSetFactorRequest();

  ROIVolumeSetFactorRequest(const ROIVolumeSetFactorRequest& from);
  ROIVolumeSetFactorRequest(ROIVolumeSetFactorRequest&& from) noexcept
    : ROIVolumeSetFactorRequest() {
    *this = ::std::move(from);
  }

  inline ROIVolumeSetFactorRequest& operator=(const ROIVolumeSetFactorRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ROIVolumeSetFactorRequest& operator=(ROIVolumeSetFactorRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ROIVolumeSetFactorRequest& default_instance();

  static inline const ROIVolumeSetFactorRequest* internal_default_instance() {
    return reinterpret_cast<const ROIVolumeSetFactorRequest*>(
               &_ROIVolumeSetFactorRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(ROIVolumeSetFactorRequest& a, ROIVolumeSetFactorRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ROIVolumeSetFactorRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ROIVolumeSetFactorRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ROIVolumeSetFactorRequest* New() const final {
    return CreateMaybeMessage<ROIVolumeSetFactorRequest>(nullptr);
  }

  ROIVolumeSetFactorRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ROIVolumeSetFactorRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ROIVolumeSetFactorRequest& from);
  void MergeFrom(const ROIVolumeSetFactorRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ROIVolumeSetFactorRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "osirixgrpc.ROIVolumeSetFactorRequest";
  }
  protected:
  explicit ROIVolumeSetFactorRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_roivolume_2eproto);
    return ::descriptor_table_roivolume_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoiFieldNumber = 1,
    kFactorFieldNumber = 2,
  };
  // .osirixgrpc.ROIVolume roi = 1;
  bool has_roi() const;
  private:
  bool _internal_has_roi() const;
  public:
  void clear_roi();
  const ::osirixgrpc::ROIVolume& roi() const;
  ::osirixgrpc::ROIVolume* release_roi();
  ::osirixgrpc::ROIVolume* mutable_roi();
  void set_allocated_roi(::osirixgrpc::ROIVolume* roi);
  private:
  const ::osirixgrpc::ROIVolume& _internal_roi() const;
  ::osirixgrpc::ROIVolume* _internal_mutable_roi();
  public:
  void unsafe_arena_set_allocated_roi(
      ::osirixgrpc::ROIVolume* roi);
  ::osirixgrpc::ROIVolume* unsafe_arena_release_roi();

  // float factor = 2;
  void clear_factor();
  float factor() const;
  void set_factor(float value);
  private:
  float _internal_factor() const;
  void _internal_set_factor(float value);
  public:

  // @@protoc_insertion_point(class_scope:osirixgrpc.ROIVolumeSetFactorRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::osirixgrpc::ROIVolume* roi_;
  float factor_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_roivolume_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ROIVolumeTextureResponse

// .osirixgrpc.Status status = 1;
inline bool ROIVolumeTextureResponse::_internal_has_status() const {
  return this != internal_default_instance() && status_ != nullptr;
}
inline bool ROIVolumeTextureResponse::has_status() const {
  return _internal_has_status();
}
inline const ::osirixgrpc::Status& ROIVolumeTextureResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& ROIVolumeTextureResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROIVolumeTextureResponse.status)
  return _internal_status();
}
inline void ROIVolumeTextureResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.ROIVolumeTextureResponse.status)
}
inline ::osirixgrpc::Status* ROIVolumeTextureResponse::release_status() {
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::Status* ROIVolumeTextureResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.ROIVolumeTextureResponse.status)
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* ROIVolumeTextureResponse::_internal_mutable_status() {
  
  if (status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    status_ = p;
  }
  return status_;
}
inline ::osirixgrpc::Status* ROIVolumeTextureResponse::mutable_status() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.ROIVolumeTextureResponse.status)
  return _internal_mutable_status();
}
inline void ROIVolumeTextureResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status)->GetArena();
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.ROIVolumeTextureResponse.status)
}

// bool texture = 2;
inline void ROIVolumeTextureResponse::clear_texture() {
  texture_ = false;
}
inline bool ROIVolumeTextureResponse::_internal_texture() const {
  return texture_;
}
inline bool ROIVolumeTextureResponse::texture() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROIVolumeTextureResponse.texture)
  return _internal_texture();
}
inline void ROIVolumeTextureResponse::_internal_set_texture(bool value) {
  
  texture_ = value;
}
inline void ROIVolumeTextureResponse::set_texture(bool value) {
  _internal_set_texture(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.ROIVolumeTextureResponse.texture)
}

// -------------------------------------------------------------------

// ROIVolumeVolumeResponse

// .osirixgrpc.Status status = 1;
inline bool ROIVolumeVolumeResponse::_internal_has_status() const {
  return this != internal_default_instance() && status_ != nullptr;
}
inline bool ROIVolumeVolumeResponse::has_status() const {
  return _internal_has_status();
}
inline const ::osirixgrpc::Status& ROIVolumeVolumeResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& ROIVolumeVolumeResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROIVolumeVolumeResponse.status)
  return _internal_status();
}
inline void ROIVolumeVolumeResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.ROIVolumeVolumeResponse.status)
}
inline ::osirixgrpc::Status* ROIVolumeVolumeResponse::release_status() {
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::Status* ROIVolumeVolumeResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.ROIVolumeVolumeResponse.status)
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* ROIVolumeVolumeResponse::_internal_mutable_status() {
  
  if (status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    status_ = p;
  }
  return status_;
}
inline ::osirixgrpc::Status* ROIVolumeVolumeResponse::mutable_status() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.ROIVolumeVolumeResponse.status)
  return _internal_mutable_status();
}
inline void ROIVolumeVolumeResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status)->GetArena();
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.ROIVolumeVolumeResponse.status)
}

// float volume = 2;
inline void ROIVolumeVolumeResponse::clear_volume() {
  volume_ = 0;
}
inline float ROIVolumeVolumeResponse::_internal_volume() const {
  return volume_;
}
inline float ROIVolumeVolumeResponse::volume() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROIVolumeVolumeResponse.volume)
  return _internal_volume();
}
inline void ROIVolumeVolumeResponse::_internal_set_volume(float value) {
  
  volume_ = value;
}
inline void ROIVolumeVolumeResponse::set_volume(float value) {
  _internal_set_volume(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.ROIVolumeVolumeResponse.volume)
}

// -------------------------------------------------------------------

// ROIVolumeColorResponse

// .osirixgrpc.Status status = 1;
inline bool ROIVolumeColorResponse::_internal_has_status() const {
  return this != internal_default_instance() && status_ != nullptr;
}
inline bool ROIVolumeColorResponse::has_status() const {
  return _internal_has_status();
}
inline const ::osirixgrpc::Status& ROIVolumeColorResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& ROIVolumeColorResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROIVolumeColorResponse.status)
  return _internal_status();
}
inline void ROIVolumeColorResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.ROIVolumeColorResponse.status)
}
inline ::osirixgrpc::Status* ROIVolumeColorResponse::release_status() {
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::Status* ROIVolumeColorResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.ROIVolumeColorResponse.status)
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* ROIVolumeColorResponse::_internal_mutable_status() {
  
  if (status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    status_ = p;
  }
  return status_;
}
inline ::osirixgrpc::Status* ROIVolumeColorResponse::mutable_status() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.ROIVolumeColorResponse.status)
  return _internal_mutable_status();
}
inline void ROIVolumeColorResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status)->GetArena();
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.ROIVolumeColorResponse.status)
}

// float r = 2;
inline void ROIVolumeColorResponse::clear_r() {
  r_ = 0;
}
inline float ROIVolumeColorResponse::_internal_r() const {
  return r_;
}
inline float ROIVolumeColorResponse::r() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROIVolumeColorResponse.r)
  return _internal_r();
}
inline void ROIVolumeColorResponse::_internal_set_r(float value) {
  
  r_ = value;
}
inline void ROIVolumeColorResponse::set_r(float value) {
  _internal_set_r(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.ROIVolumeColorResponse.r)
}

// float g = 3;
inline void ROIVolumeColorResponse::clear_g() {
  g_ = 0;
}
inline float ROIVolumeColorResponse::_internal_g() const {
  return g_;
}
inline float ROIVolumeColorResponse::g() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROIVolumeColorResponse.g)
  return _internal_g();
}
inline void ROIVolumeColorResponse::_internal_set_g(float value) {
  
  g_ = value;
}
inline void ROIVolumeColorResponse::set_g(float value) {
  _internal_set_g(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.ROIVolumeColorResponse.g)
}

// float b = 4;
inline void ROIVolumeColorResponse::clear_b() {
  b_ = 0;
}
inline float ROIVolumeColorResponse::_internal_b() const {
  return b_;
}
inline float ROIVolumeColorResponse::b() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROIVolumeColorResponse.b)
  return _internal_b();
}
inline void ROIVolumeColorResponse::_internal_set_b(float value) {
  
  b_ = value;
}
inline void ROIVolumeColorResponse::set_b(float value) {
  _internal_set_b(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.ROIVolumeColorResponse.b)
}

// -------------------------------------------------------------------

// ROIVolumeOpacityResponse

// .osirixgrpc.Status status = 1;
inline bool ROIVolumeOpacityResponse::_internal_has_status() const {
  return this != internal_default_instance() && status_ != nullptr;
}
inline bool ROIVolumeOpacityResponse::has_status() const {
  return _internal_has_status();
}
inline const ::osirixgrpc::Status& ROIVolumeOpacityResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& ROIVolumeOpacityResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROIVolumeOpacityResponse.status)
  return _internal_status();
}
inline void ROIVolumeOpacityResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.ROIVolumeOpacityResponse.status)
}
inline ::osirixgrpc::Status* ROIVolumeOpacityResponse::release_status() {
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::Status* ROIVolumeOpacityResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.ROIVolumeOpacityResponse.status)
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* ROIVolumeOpacityResponse::_internal_mutable_status() {
  
  if (status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    status_ = p;
  }
  return status_;
}
inline ::osirixgrpc::Status* ROIVolumeOpacityResponse::mutable_status() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.ROIVolumeOpacityResponse.status)
  return _internal_mutable_status();
}
inline void ROIVolumeOpacityResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status)->GetArena();
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.ROIVolumeOpacityResponse.status)
}

// float opacity = 2;
inline void ROIVolumeOpacityResponse::clear_opacity() {
  opacity_ = 0;
}
inline float ROIVolumeOpacityResponse::_internal_opacity() const {
  return opacity_;
}
inline float ROIVolumeOpacityResponse::opacity() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROIVolumeOpacityResponse.opacity)
  return _internal_opacity();
}
inline void ROIVolumeOpacityResponse::_internal_set_opacity(float value) {
  
  opacity_ = value;
}
inline void ROIVolumeOpacityResponse::set_opacity(float value) {
  _internal_set_opacity(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.ROIVolumeOpacityResponse.opacity)
}

// -------------------------------------------------------------------

// ROIVolumeFactorResponse

// .osirixgrpc.Status status = 1;
inline bool ROIVolumeFactorResponse::_internal_has_status() const {
  return this != internal_default_instance() && status_ != nullptr;
}
inline bool ROIVolumeFactorResponse::has_status() const {
  return _internal_has_status();
}
inline const ::osirixgrpc::Status& ROIVolumeFactorResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& ROIVolumeFactorResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROIVolumeFactorResponse.status)
  return _internal_status();
}
inline void ROIVolumeFactorResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.ROIVolumeFactorResponse.status)
}
inline ::osirixgrpc::Status* ROIVolumeFactorResponse::release_status() {
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::Status* ROIVolumeFactorResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.ROIVolumeFactorResponse.status)
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* ROIVolumeFactorResponse::_internal_mutable_status() {
  
  if (status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    status_ = p;
  }
  return status_;
}
inline ::osirixgrpc::Status* ROIVolumeFactorResponse::mutable_status() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.ROIVolumeFactorResponse.status)
  return _internal_mutable_status();
}
inline void ROIVolumeFactorResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status)->GetArena();
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.ROIVolumeFactorResponse.status)
}

// float factor = 2;
inline void ROIVolumeFactorResponse::clear_factor() {
  factor_ = 0;
}
inline float ROIVolumeFactorResponse::_internal_factor() const {
  return factor_;
}
inline float ROIVolumeFactorResponse::factor() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROIVolumeFactorResponse.factor)
  return _internal_factor();
}
inline void ROIVolumeFactorResponse::_internal_set_factor(float value) {
  
  factor_ = value;
}
inline void ROIVolumeFactorResponse::set_factor(float value) {
  _internal_set_factor(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.ROIVolumeFactorResponse.factor)
}

// -------------------------------------------------------------------

// ROIVolumeVisibleResponse

// .osirixgrpc.Status status = 1;
inline bool ROIVolumeVisibleResponse::_internal_has_status() const {
  return this != internal_default_instance() && status_ != nullptr;
}
inline bool ROIVolumeVisibleResponse::has_status() const {
  return _internal_has_status();
}
inline const ::osirixgrpc::Status& ROIVolumeVisibleResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& ROIVolumeVisibleResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROIVolumeVisibleResponse.status)
  return _internal_status();
}
inline void ROIVolumeVisibleResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.ROIVolumeVisibleResponse.status)
}
inline ::osirixgrpc::Status* ROIVolumeVisibleResponse::release_status() {
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::Status* ROIVolumeVisibleResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.ROIVolumeVisibleResponse.status)
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* ROIVolumeVisibleResponse::_internal_mutable_status() {
  
  if (status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    status_ = p;
  }
  return status_;
}
inline ::osirixgrpc::Status* ROIVolumeVisibleResponse::mutable_status() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.ROIVolumeVisibleResponse.status)
  return _internal_mutable_status();
}
inline void ROIVolumeVisibleResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status)->GetArena();
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.ROIVolumeVisibleResponse.status)
}

// bool visible = 2;
inline void ROIVolumeVisibleResponse::clear_visible() {
  visible_ = false;
}
inline bool ROIVolumeVisibleResponse::_internal_visible() const {
  return visible_;
}
inline bool ROIVolumeVisibleResponse::visible() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROIVolumeVisibleResponse.visible)
  return _internal_visible();
}
inline void ROIVolumeVisibleResponse::_internal_set_visible(bool value) {
  
  visible_ = value;
}
inline void ROIVolumeVisibleResponse::set_visible(bool value) {
  _internal_set_visible(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.ROIVolumeVisibleResponse.visible)
}

// -------------------------------------------------------------------

// ROIVolumeNameResponse

// .osirixgrpc.Status status = 1;
inline bool ROIVolumeNameResponse::_internal_has_status() const {
  return this != internal_default_instance() && status_ != nullptr;
}
inline bool ROIVolumeNameResponse::has_status() const {
  return _internal_has_status();
}
inline const ::osirixgrpc::Status& ROIVolumeNameResponse::_internal_status() const {
  const ::osirixgrpc::Status* p = status_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::Status&>(
      ::osirixgrpc::_Status_default_instance_);
}
inline const ::osirixgrpc::Status& ROIVolumeNameResponse::status() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROIVolumeNameResponse.status)
  return _internal_status();
}
inline void ROIVolumeNameResponse::unsafe_arena_set_allocated_status(
    ::osirixgrpc::Status* status) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.ROIVolumeNameResponse.status)
}
inline ::osirixgrpc::Status* ROIVolumeNameResponse::release_status() {
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::Status* ROIVolumeNameResponse::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:osirixgrpc.ROIVolumeNameResponse.status)
  
  ::osirixgrpc::Status* temp = status_;
  status_ = nullptr;
  return temp;
}
inline ::osirixgrpc::Status* ROIVolumeNameResponse::_internal_mutable_status() {
  
  if (status_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::Status>(GetArena());
    status_ = p;
  }
  return status_;
}
inline ::osirixgrpc::Status* ROIVolumeNameResponse::mutable_status() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.ROIVolumeNameResponse.status)
  return _internal_mutable_status();
}
inline void ROIVolumeNameResponse::set_allocated_status(::osirixgrpc::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status)->GetArena();
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.ROIVolumeNameResponse.status)
}

// string name = 2;
inline void ROIVolumeNameResponse::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& ROIVolumeNameResponse::name() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROIVolumeNameResponse.name)
  return _internal_name();
}
inline void ROIVolumeNameResponse::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.ROIVolumeNameResponse.name)
}
inline std::string* ROIVolumeNameResponse::mutable_name() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.ROIVolumeNameResponse.name)
  return _internal_mutable_name();
}
inline const std::string& ROIVolumeNameResponse::_internal_name() const {
  return name_.Get();
}
inline void ROIVolumeNameResponse::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ROIVolumeNameResponse::set_name(std::string&& value) {
  
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:osirixgrpc.ROIVolumeNameResponse.name)
}
inline void ROIVolumeNameResponse::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:osirixgrpc.ROIVolumeNameResponse.name)
}
inline void ROIVolumeNameResponse::set_name(const char* value,
    size_t size) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:osirixgrpc.ROIVolumeNameResponse.name)
}
inline std::string* ROIVolumeNameResponse::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ROIVolumeNameResponse::release_name() {
  // @@protoc_insertion_point(field_release:osirixgrpc.ROIVolumeNameResponse.name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ROIVolumeNameResponse::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.ROIVolumeNameResponse.name)
}

// -------------------------------------------------------------------

// ROIVolumeSetTextureRequest

// .osirixgrpc.ROIVolume roi = 1;
inline bool ROIVolumeSetTextureRequest::_internal_has_roi() const {
  return this != internal_default_instance() && roi_ != nullptr;
}
inline bool ROIVolumeSetTextureRequest::has_roi() const {
  return _internal_has_roi();
}
inline const ::osirixgrpc::ROIVolume& ROIVolumeSetTextureRequest::_internal_roi() const {
  const ::osirixgrpc::ROIVolume* p = roi_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::ROIVolume&>(
      ::osirixgrpc::_ROIVolume_default_instance_);
}
inline const ::osirixgrpc::ROIVolume& ROIVolumeSetTextureRequest::roi() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROIVolumeSetTextureRequest.roi)
  return _internal_roi();
}
inline void ROIVolumeSetTextureRequest::unsafe_arena_set_allocated_roi(
    ::osirixgrpc::ROIVolume* roi) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(roi_);
  }
  roi_ = roi;
  if (roi) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.ROIVolumeSetTextureRequest.roi)
}
inline ::osirixgrpc::ROIVolume* ROIVolumeSetTextureRequest::release_roi() {
  
  ::osirixgrpc::ROIVolume* temp = roi_;
  roi_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::ROIVolume* ROIVolumeSetTextureRequest::unsafe_arena_release_roi() {
  // @@protoc_insertion_point(field_release:osirixgrpc.ROIVolumeSetTextureRequest.roi)
  
  ::osirixgrpc::ROIVolume* temp = roi_;
  roi_ = nullptr;
  return temp;
}
inline ::osirixgrpc::ROIVolume* ROIVolumeSetTextureRequest::_internal_mutable_roi() {
  
  if (roi_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::ROIVolume>(GetArena());
    roi_ = p;
  }
  return roi_;
}
inline ::osirixgrpc::ROIVolume* ROIVolumeSetTextureRequest::mutable_roi() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.ROIVolumeSetTextureRequest.roi)
  return _internal_mutable_roi();
}
inline void ROIVolumeSetTextureRequest::set_allocated_roi(::osirixgrpc::ROIVolume* roi) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(roi_);
  }
  if (roi) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(roi)->GetArena();
    if (message_arena != submessage_arena) {
      roi = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, roi, submessage_arena);
    }
    
  } else {
    
  }
  roi_ = roi;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.ROIVolumeSetTextureRequest.roi)
}

// bool texture = 2;
inline void ROIVolumeSetTextureRequest::clear_texture() {
  texture_ = false;
}
inline bool ROIVolumeSetTextureRequest::_internal_texture() const {
  return texture_;
}
inline bool ROIVolumeSetTextureRequest::texture() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROIVolumeSetTextureRequest.texture)
  return _internal_texture();
}
inline void ROIVolumeSetTextureRequest::_internal_set_texture(bool value) {
  
  texture_ = value;
}
inline void ROIVolumeSetTextureRequest::set_texture(bool value) {
  _internal_set_texture(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.ROIVolumeSetTextureRequest.texture)
}

// -------------------------------------------------------------------

// ROIVolumeSetColorRequest

// .osirixgrpc.ROIVolume roi = 1;
inline bool ROIVolumeSetColorRequest::_internal_has_roi() const {
  return this != internal_default_instance() && roi_ != nullptr;
}
inline bool ROIVolumeSetColorRequest::has_roi() const {
  return _internal_has_roi();
}
inline const ::osirixgrpc::ROIVolume& ROIVolumeSetColorRequest::_internal_roi() const {
  const ::osirixgrpc::ROIVolume* p = roi_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::ROIVolume&>(
      ::osirixgrpc::_ROIVolume_default_instance_);
}
inline const ::osirixgrpc::ROIVolume& ROIVolumeSetColorRequest::roi() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROIVolumeSetColorRequest.roi)
  return _internal_roi();
}
inline void ROIVolumeSetColorRequest::unsafe_arena_set_allocated_roi(
    ::osirixgrpc::ROIVolume* roi) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(roi_);
  }
  roi_ = roi;
  if (roi) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.ROIVolumeSetColorRequest.roi)
}
inline ::osirixgrpc::ROIVolume* ROIVolumeSetColorRequest::release_roi() {
  
  ::osirixgrpc::ROIVolume* temp = roi_;
  roi_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::ROIVolume* ROIVolumeSetColorRequest::unsafe_arena_release_roi() {
  // @@protoc_insertion_point(field_release:osirixgrpc.ROIVolumeSetColorRequest.roi)
  
  ::osirixgrpc::ROIVolume* temp = roi_;
  roi_ = nullptr;
  return temp;
}
inline ::osirixgrpc::ROIVolume* ROIVolumeSetColorRequest::_internal_mutable_roi() {
  
  if (roi_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::ROIVolume>(GetArena());
    roi_ = p;
  }
  return roi_;
}
inline ::osirixgrpc::ROIVolume* ROIVolumeSetColorRequest::mutable_roi() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.ROIVolumeSetColorRequest.roi)
  return _internal_mutable_roi();
}
inline void ROIVolumeSetColorRequest::set_allocated_roi(::osirixgrpc::ROIVolume* roi) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(roi_);
  }
  if (roi) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(roi)->GetArena();
    if (message_arena != submessage_arena) {
      roi = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, roi, submessage_arena);
    }
    
  } else {
    
  }
  roi_ = roi;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.ROIVolumeSetColorRequest.roi)
}

// float r = 2;
inline void ROIVolumeSetColorRequest::clear_r() {
  r_ = 0;
}
inline float ROIVolumeSetColorRequest::_internal_r() const {
  return r_;
}
inline float ROIVolumeSetColorRequest::r() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROIVolumeSetColorRequest.r)
  return _internal_r();
}
inline void ROIVolumeSetColorRequest::_internal_set_r(float value) {
  
  r_ = value;
}
inline void ROIVolumeSetColorRequest::set_r(float value) {
  _internal_set_r(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.ROIVolumeSetColorRequest.r)
}

// float g = 3;
inline void ROIVolumeSetColorRequest::clear_g() {
  g_ = 0;
}
inline float ROIVolumeSetColorRequest::_internal_g() const {
  return g_;
}
inline float ROIVolumeSetColorRequest::g() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROIVolumeSetColorRequest.g)
  return _internal_g();
}
inline void ROIVolumeSetColorRequest::_internal_set_g(float value) {
  
  g_ = value;
}
inline void ROIVolumeSetColorRequest::set_g(float value) {
  _internal_set_g(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.ROIVolumeSetColorRequest.g)
}

// float b = 4;
inline void ROIVolumeSetColorRequest::clear_b() {
  b_ = 0;
}
inline float ROIVolumeSetColorRequest::_internal_b() const {
  return b_;
}
inline float ROIVolumeSetColorRequest::b() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROIVolumeSetColorRequest.b)
  return _internal_b();
}
inline void ROIVolumeSetColorRequest::_internal_set_b(float value) {
  
  b_ = value;
}
inline void ROIVolumeSetColorRequest::set_b(float value) {
  _internal_set_b(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.ROIVolumeSetColorRequest.b)
}

// -------------------------------------------------------------------

// ROIVolumeSetOpacityRequest

// .osirixgrpc.ROIVolume roi = 1;
inline bool ROIVolumeSetOpacityRequest::_internal_has_roi() const {
  return this != internal_default_instance() && roi_ != nullptr;
}
inline bool ROIVolumeSetOpacityRequest::has_roi() const {
  return _internal_has_roi();
}
inline const ::osirixgrpc::ROIVolume& ROIVolumeSetOpacityRequest::_internal_roi() const {
  const ::osirixgrpc::ROIVolume* p = roi_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::ROIVolume&>(
      ::osirixgrpc::_ROIVolume_default_instance_);
}
inline const ::osirixgrpc::ROIVolume& ROIVolumeSetOpacityRequest::roi() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROIVolumeSetOpacityRequest.roi)
  return _internal_roi();
}
inline void ROIVolumeSetOpacityRequest::unsafe_arena_set_allocated_roi(
    ::osirixgrpc::ROIVolume* roi) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(roi_);
  }
  roi_ = roi;
  if (roi) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.ROIVolumeSetOpacityRequest.roi)
}
inline ::osirixgrpc::ROIVolume* ROIVolumeSetOpacityRequest::release_roi() {
  
  ::osirixgrpc::ROIVolume* temp = roi_;
  roi_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::ROIVolume* ROIVolumeSetOpacityRequest::unsafe_arena_release_roi() {
  // @@protoc_insertion_point(field_release:osirixgrpc.ROIVolumeSetOpacityRequest.roi)
  
  ::osirixgrpc::ROIVolume* temp = roi_;
  roi_ = nullptr;
  return temp;
}
inline ::osirixgrpc::ROIVolume* ROIVolumeSetOpacityRequest::_internal_mutable_roi() {
  
  if (roi_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::ROIVolume>(GetArena());
    roi_ = p;
  }
  return roi_;
}
inline ::osirixgrpc::ROIVolume* ROIVolumeSetOpacityRequest::mutable_roi() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.ROIVolumeSetOpacityRequest.roi)
  return _internal_mutable_roi();
}
inline void ROIVolumeSetOpacityRequest::set_allocated_roi(::osirixgrpc::ROIVolume* roi) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(roi_);
  }
  if (roi) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(roi)->GetArena();
    if (message_arena != submessage_arena) {
      roi = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, roi, submessage_arena);
    }
    
  } else {
    
  }
  roi_ = roi;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.ROIVolumeSetOpacityRequest.roi)
}

// float opacity = 2;
inline void ROIVolumeSetOpacityRequest::clear_opacity() {
  opacity_ = 0;
}
inline float ROIVolumeSetOpacityRequest::_internal_opacity() const {
  return opacity_;
}
inline float ROIVolumeSetOpacityRequest::opacity() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROIVolumeSetOpacityRequest.opacity)
  return _internal_opacity();
}
inline void ROIVolumeSetOpacityRequest::_internal_set_opacity(float value) {
  
  opacity_ = value;
}
inline void ROIVolumeSetOpacityRequest::set_opacity(float value) {
  _internal_set_opacity(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.ROIVolumeSetOpacityRequest.opacity)
}

// -------------------------------------------------------------------

// ROIVolumeSetFactorRequest

// .osirixgrpc.ROIVolume roi = 1;
inline bool ROIVolumeSetFactorRequest::_internal_has_roi() const {
  return this != internal_default_instance() && roi_ != nullptr;
}
inline bool ROIVolumeSetFactorRequest::has_roi() const {
  return _internal_has_roi();
}
inline const ::osirixgrpc::ROIVolume& ROIVolumeSetFactorRequest::_internal_roi() const {
  const ::osirixgrpc::ROIVolume* p = roi_;
  return p != nullptr ? *p : reinterpret_cast<const ::osirixgrpc::ROIVolume&>(
      ::osirixgrpc::_ROIVolume_default_instance_);
}
inline const ::osirixgrpc::ROIVolume& ROIVolumeSetFactorRequest::roi() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROIVolumeSetFactorRequest.roi)
  return _internal_roi();
}
inline void ROIVolumeSetFactorRequest::unsafe_arena_set_allocated_roi(
    ::osirixgrpc::ROIVolume* roi) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(roi_);
  }
  roi_ = roi;
  if (roi) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osirixgrpc.ROIVolumeSetFactorRequest.roi)
}
inline ::osirixgrpc::ROIVolume* ROIVolumeSetFactorRequest::release_roi() {
  
  ::osirixgrpc::ROIVolume* temp = roi_;
  roi_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::osirixgrpc::ROIVolume* ROIVolumeSetFactorRequest::unsafe_arena_release_roi() {
  // @@protoc_insertion_point(field_release:osirixgrpc.ROIVolumeSetFactorRequest.roi)
  
  ::osirixgrpc::ROIVolume* temp = roi_;
  roi_ = nullptr;
  return temp;
}
inline ::osirixgrpc::ROIVolume* ROIVolumeSetFactorRequest::_internal_mutable_roi() {
  
  if (roi_ == nullptr) {
    auto* p = CreateMaybeMessage<::osirixgrpc::ROIVolume>(GetArena());
    roi_ = p;
  }
  return roi_;
}
inline ::osirixgrpc::ROIVolume* ROIVolumeSetFactorRequest::mutable_roi() {
  // @@protoc_insertion_point(field_mutable:osirixgrpc.ROIVolumeSetFactorRequest.roi)
  return _internal_mutable_roi();
}
inline void ROIVolumeSetFactorRequest::set_allocated_roi(::osirixgrpc::ROIVolume* roi) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(roi_);
  }
  if (roi) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(roi)->GetArena();
    if (message_arena != submessage_arena) {
      roi = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, roi, submessage_arena);
    }
    
  } else {
    
  }
  roi_ = roi;
  // @@protoc_insertion_point(field_set_allocated:osirixgrpc.ROIVolumeSetFactorRequest.roi)
}

// float factor = 2;
inline void ROIVolumeSetFactorRequest::clear_factor() {
  factor_ = 0;
}
inline float ROIVolumeSetFactorRequest::_internal_factor() const {
  return factor_;
}
inline float ROIVolumeSetFactorRequest::factor() const {
  // @@protoc_insertion_point(field_get:osirixgrpc.ROIVolumeSetFactorRequest.factor)
  return _internal_factor();
}
inline void ROIVolumeSetFactorRequest::_internal_set_factor(float value) {
  
  factor_ = value;
}
inline void ROIVolumeSetFactorRequest::set_factor(float value) {
  _internal_set_factor(value);
  // @@protoc_insertion_point(field_set:osirixgrpc.ROIVolumeSetFactorRequest.factor)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace osirixgrpc

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_roivolume_2eproto
